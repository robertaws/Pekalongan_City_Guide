Index: app/src/main/res/layout/custom_toast.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/custom_toast.xml b/app/src/main/res/layout/custom_toast.xml
new file mode 100644
--- /dev/null	(date 1679299224954)
+++ b/app/src/main/res/layout/custom_toast.xml	(date 1679299224954)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/custom_toast"
+    android:layout_width="wrap_content"
+    android:layout_height="75dp"
+    android:background="#CC000000"
+    android:orientation="horizontal"
+    android:padding="8dp">
+
+    <ImageView
+        android:layout_width="75dp"
+        android:layout_height="75dp"
+        android:src="@drawable/logo"/>
+
+    <TextView
+        android:id="@+id/toastText"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textColor="#FFFFFF"
+        android:text="Custom Toast Message"
+        android:layout_gravity="center"/>
+
+</LinearLayout>
Index: app/src/main/java/com/binus/pekalongancityguide/EditProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide;\r\n\r\nimport android.Manifest;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentResolver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.view.View;\r\nimport android.webkit.MimeTypeMap;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.binus.pekalongancityguide.Layout.MainActivity;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\n\r\n\r\npublic class EditProfile extends AppCompatActivity {\r\n    private static final int REQUEST_IMAGE_CAPTURE = 1;\r\n    private static final int REQUEST_IMAGE_PICK = 2;\r\n    private static final int CAMERA_PERMISSION_CODE = 3;\r\n    private static final int STORAGE_PERMISSION_CODE = 4;\r\n    private ImageView mImageView;\r\n    private EditText mUsernameEditText;\r\n    private Button mSaveProfileButton;\r\n    private Uri mImageUri;\r\n    private DatabaseReference mDatabaseRef;\r\n    private StorageReference mStorageRef;\r\n    private FirebaseAuth mAuth;\r\n    private ProgressDialog progressDialog;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_edit_profile);\r\n\r\n        mImageView = findViewById(R.id.edit_image);\r\n        mUsernameEditText = findViewById(R.id.edit_name);\r\n        mSaveProfileButton = findViewById(R.id.update_profile);\r\n\r\n        mDatabaseRef = FirebaseDatabase.getInstance().getReference(\"users\");\r\n        mStorageRef = FirebaseStorage.getInstance().getReference(\"user_profile_images\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        // Initialize the progress dialog\r\n        progressDialog = new ProgressDialog(this);\r\n        progressDialog.setCancelable(false);\r\n        progressDialog.setMessage(\"Uploading image\");\r\n        progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);\r\n\r\n        // Check camera permission\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA}, CAMERA_PERMISSION_CODE);\r\n        }\r\n\r\n        // Check storage permission\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, STORAGE_PERMISSION_CODE);\r\n        }\r\n\r\n\r\n        mImageView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                showImagePickerDialog();\r\n            }\r\n        });\r\n\r\n        mSaveProfileButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                saveProfile();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void showImagePickerDialog() {\r\n        final CharSequence[] options = {\"Take Photo\", \"Choose From Gallery\", \"Cancel\"};\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(EditProfile.this);\r\n        builder.setTitle(\"Choose your profile picture\");\r\n\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int i) {\r\n                if (options[i].equals(\"Take Photo\")) {\r\n                    dispatchTakePictureIntent();\r\n                } else if (options[i].equals(\"Choose From Gallery\")) {\r\n                    pickImageFromGallery();\r\n                } else if (options[i].equals(\"Cancel\")) {\r\n                    dialogInterface.dismiss();\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n    }\r\n\r\n    private void dispatchTakePictureIntent() {\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        if (takePictureIntent.resolveActivity(getPackageManager()) != null) {\r\n            startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\r\n        }\r\n    }\r\n\r\n    private void pickImageFromGallery() {\r\n        Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n        startActivityForResult(intent, REQUEST_IMAGE_PICK);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (resultCode == RESULT_OK) {\r\n            if (requestCode == REQUEST_IMAGE_CAPTURE && data != null) {\r\n                Bundle extras = data.getExtras();\r\n                Bitmap imageBitmap = (Bitmap) extras.get(\"data\");\r\n                mImageView.setImageBitmap(imageBitmap);\r\n                mImageUri = getImageUri(getApplicationContext(), imageBitmap);\r\n            } else if (requestCode == REQUEST_IMAGE_PICK && data != null) {\r\n                mImageUri = data.getData();\r\n                mImageView.setImageURI(mImageUri);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        // Dismiss any open dialogs\r\n        if (progressDialog != null && progressDialog.isShowing()) {\r\n            progressDialog.dismiss();\r\n        }\r\n    }\r\n\r\n    private void saveProfile() {\r\n        String username = mUsernameEditText.getText().toString().trim();\r\n        if (TextUtils.isEmpty(username)) {\r\n            Toast.makeText(this, \"Please enter a username\", Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n\r\n        final String userId = mAuth.getCurrentUser().getUid();\r\n\r\n        if (mImageUri != null) {\r\n            progressDialog.setTitle(\"Uploading image...\");\r\n            progressDialog.show();\r\n\r\n            // Delete old image from storage\r\n            mStorageRef.child(userId).delete().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                    // Upload new image to storage\r\n                    StorageReference fileRef = mStorageRef.child(userId + \".\" + getFileExtension(mImageUri));\r\n                    fileRef.putFile(mImageUri)\r\n                            .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                                @Override\r\n                                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                                    fileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                                        @Override\r\n                                        public void onSuccess(Uri uri) {\r\n                                            final String imageUrl = uri.toString();\r\n                                            User user = new User(userId, username, imageUrl);\r\n                                            mDatabaseRef.child(userId).setValue(user)\r\n                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                        @Override\r\n                                                        public void onSuccess(Void aVoid) {\r\n                                                            Toast.makeText(EditProfile.this, \"Profile updated successfully\", Toast.LENGTH_SHORT).show();\r\n                                                            // Dismiss the progress dialog\r\n                                                            progressDialog.dismiss();\r\n                                                            startActivity(new Intent(EditProfile.this, MainActivity.class));\r\n                                                            finish();\r\n                                                        }\r\n                                                    })\r\n                                                    .addOnFailureListener(new OnFailureListener() {\r\n                                                        @Override\r\n                                                        public void onFailure(@NonNull Exception e) {\r\n                                                            Toast.makeText(EditProfile.this, \"Failed to update profile\", Toast.LENGTH_SHORT).show();\r\n                                                            // Dismiss the progress dialog\r\n                                                            progressDialog.dismiss();\r\n                                                        }\r\n                                                    });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            })\r\n                            .addOnFailureListener(new OnFailureListener() {\r\n                                @Override\r\n                                public void onFailure(@NonNull Exception e) {\r\n                                    Toast.makeText(EditProfile.this, \"Failed to upload image\", Toast.LENGTH_SHORT).show();\r\n                                    // Dismiss the progress dialog\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            })\r\n                            .addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n                                @Override\r\n                                public void onProgress(@NonNull UploadTask.TaskSnapshot snapshot) {\r\n                                    double progress = (100.0 * snapshot.getBytesTransferred() / snapshot.getTotalByteCount());\r\n                                    progressDialog.setMessage(\"Uploaded \" + (int) progress + \"%\");\r\n                                }\r\n                            });\r\n                }\r\n            });\r\n        } else {\r\n            // Update username only\r\n            User user = new User(userId, username, null);\r\n            mDatabaseRef.child(userId).setValue(user)\r\n                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            Toast.makeText(EditProfile.this, \"Profile updated successfully\", Toast.LENGTH_SHORT).show();\r\n                            startActivity(new Intent(EditProfile.this, MainActivity.class));\r\n                            finish();\r\n                        }\r\n                    })\r\n                    .addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Toast.makeText(EditProfile.this, \"Failed to update profile\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n\r\n        if (requestCode == CAMERA_PERMISSION_CODE) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                // Camera permission was granted, start camera intent\r\n                dispatchTakePictureIntent();\r\n            } else {\r\n                // Camera permission was denied, show a message to the user\r\n                Toast.makeText(this, \"Camera permission is required to take photos\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    private Uri getImageUri(Context context, Bitmap bitmap) {\r\n        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\r\n        bitmap.compress(Bitmap.CompressFormat.JPEG, 100, bytes);\r\n        String path = MediaStore.Images.Media.insertImage(context.getContentResolver(), bitmap, \"Profile Picture\", null);\r\n        return Uri.parse(path);\r\n    }\r\n\r\n    private String getFileExtension(Uri uri) {\r\n        ContentResolver contentResolver = getContentResolver();\r\n        MimeTypeMap mimeTypeMap = MimeTypeMap.getSingleton();\r\n        return mimeTypeMap.getExtensionFromMimeType(contentResolver.getType(uri));\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/EditProfile.java b/app/src/main/java/com/binus/pekalongancityguide/EditProfile.java
--- a/app/src/main/java/com/binus/pekalongancityguide/EditProfile.java	(revision 1e94ff288e652948e49e217b3d5824bb144a4228)
+++ b/app/src/main/java/com/binus/pekalongancityguide/EditProfile.java	(date 1679306325125)
@@ -13,11 +13,17 @@
 import android.os.Bundle;
 import android.provider.MediaStore;
 import android.text.TextUtils;
+import android.util.Log;
+import android.view.Gravity;
+import android.view.LayoutInflater;
 import android.view.View;
+import android.view.ViewGroup;
+import android.view.inputmethod.InputMethodManager;
 import android.webkit.MimeTypeMap;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.ImageView;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
@@ -25,21 +31,31 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
+import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentTransaction;
 
 import com.binus.pekalongancityguide.Layout.MainActivity;
+import com.binus.pekalongancityguide.Layout.ProfileFragment;
+import com.binus.pekalongancityguide.databinding.ActivityEditProfileBinding;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.UserProfileChangeRequest;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
 import com.google.firebase.storage.FirebaseStorage;
 import com.google.firebase.storage.OnProgressListener;
 import com.google.firebase.storage.StorageReference;
 import com.google.firebase.storage.UploadTask;
+import com.squareup.picasso.Picasso;
 
 import java.io.ByteArrayOutputStream;
+import java.util.HashMap;
 
 
 public class EditProfile extends AppCompatActivity {
@@ -49,21 +65,25 @@
     private static final int STORAGE_PERMISSION_CODE = 4;
     private ImageView mImageView;
     private EditText mUsernameEditText;
-    private Button mSaveProfileButton;
     private Uri mImageUri;
     private DatabaseReference mDatabaseRef;
     private StorageReference mStorageRef;
     private FirebaseAuth mAuth;
     private ProgressDialog progressDialog;
+    private ActivityEditProfileBinding binding;
+    private static final String TAG = "PROFILE_EDIT_TAG";
+    private String name = "";
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        binding = ActivityEditProfileBinding.inflate(getLayoutInflater());
         setContentView(R.layout.activity_edit_profile);
 
         mImageView = findViewById(R.id.edit_image);
         mUsernameEditText = findViewById(R.id.edit_name);
-        mSaveProfileButton = findViewById(R.id.update_profile);
+        Button mSaveProfileButton = findViewById(R.id.update_profile);
+        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
 
         mDatabaseRef = FirebaseDatabase.getInstance().getReference("users");
         mStorageRef = FirebaseStorage.getInstance().getReference("user_profile_images");
@@ -72,7 +92,7 @@
         // Initialize the progress dialog
         progressDialog = new ProgressDialog(this);
         progressDialog.setCancelable(false);
-        progressDialog.setMessage("Uploading image");
+        progressDialog.setMessage("Updating Profile...");
         progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
 
         // Check camera permission
@@ -85,6 +105,11 @@
             ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, STORAGE_PERMISSION_CODE);
         }
 
+        getInfo();
+
+        binding.backProfile.setOnClickListener(v -> {
+            onBackPressed();
+        });
 
         mImageView.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -96,11 +121,94 @@
         mSaveProfileButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
                 saveProfile();
             }
         });
     }
 
+    private void validateData() {
+        name = binding.editName.getText().toString().trim();
+        if (TextUtils.isEmpty(name)) {
+            showCustomToast("Enter new name");
+        } else {
+            updateProfile(name,null);
+        }
+    }
+
+    // Update user profile with name and profile picture
+    private void updateProfile(String name, Uri imageUri) {
+        if (imageUri != null) {
+            // Upload new profile picture to Firebase Storage
+            StorageReference storageRef = FirebaseStorage.getInstance().getReference()
+                    .child("user_profile_images/" + FirebaseAuth.getInstance().getCurrentUser().getUid() + ".jpg");
+            UploadTask uploadTask = storageRef.putFile(imageUri);
+
+            uploadTask.continueWithTask(task -> {
+                if (!task.isSuccessful()) {
+                    throw task.getException();
+                }
+
+                // Get the download URL of the uploaded profile picture
+                return storageRef.getDownloadUrl();
+            }).addOnCompleteListener(task -> {
+                if (task.isSuccessful()) {
+                    // Update user profile with new name and profile picture URL
+                    String profilePictureUrl = task.getResult().toString();
+                    UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()
+                            .setDisplayName(name)
+                            .setPhotoUri(Uri.parse(profilePictureUrl))
+                            .build();
+
+                    FirebaseAuth.getInstance().getCurrentUser().updateProfile(profileUpdates)
+                            .addOnCompleteListener(task1 -> {
+                                if (task1.isSuccessful()) {
+                                    showCustomToast("User profile updated");
+                                    // Dismiss the progress dialog after the upload is successful
+                                    progressDialog.dismiss();
+                                    // Go to the profile fragment after successful update
+                                    Fragment profileFragment = new ProfileFragment();
+                                    FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
+                                    Fragment currentFragment = getSupportFragmentManager().findFragmentByTag("fragment_home");
+                                    if (currentFragment != null) {
+                                        transaction.replace(currentFragment.getId(), profileFragment, "fragment_profile");
+                                        transaction.addToBackStack(null);
+                                        transaction.commit();
+                                    }
+                                } else {
+                                    showCustomToast("Failed to update user profile");
+                                }
+                            });
+                } else {
+                    showCustomToast("Failed to upload profile picture");
+                }
+            });
+        } else {
+            // Update user profile with new name only
+            UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()
+                    .setDisplayName(name)
+                    .build();
+
+            FirebaseAuth.getInstance().getCurrentUser().updateProfile(profileUpdates)
+                    .addOnCompleteListener(task -> {
+                        if (task.isSuccessful()) {
+                            showCustomToast("User profile updated");
+                            // Dismiss the progress dialog after the upload is successful
+                            progressDialog.dismiss();
+                            // Go to the profile fragment after successful update
+                            Fragment profileFragment = new ProfileFragment();
+                            FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
+                            transaction.replace(R.id.container, profileFragment);
+                            transaction.commit();
+                        } else {
+                            showCustomToast("Failed to update user profile");
+                        }
+                    });
+        }
+    }
+
+
+
     private void showImagePickerDialog() {
         final CharSequence[] options = {"Take Photo", "Choose From Gallery", "Cancel"};
         AlertDialog.Builder builder = new AlertDialog.Builder(EditProfile.this);
@@ -150,19 +258,10 @@
         }
     }
 
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-        // Dismiss any open dialogs
-        if (progressDialog != null && progressDialog.isShowing()) {
-            progressDialog.dismiss();
-        }
-    }
-
     private void saveProfile() {
         String username = mUsernameEditText.getText().toString().trim();
         if (TextUtils.isEmpty(username)) {
-            Toast.makeText(this, "Please enter a username", Toast.LENGTH_SHORT).show();
+            showCustomToast("Please enter a username");
             return;
         }
 
@@ -177,74 +276,47 @@
                 @Override
                 public void onComplete(@NonNull Task<Void> task) {
                     // Upload new image to storage
-                    StorageReference fileRef = mStorageRef.child(userId + "." + getFileExtension(mImageUri));
-                    fileRef.putFile(mImageUri)
-                            .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
-                                @Override
-                                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
-                                    fileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
-                                        @Override
-                                        public void onSuccess(Uri uri) {
-                                            final String imageUrl = uri.toString();
-                                            User user = new User(userId, username, imageUrl);
-                                            mDatabaseRef.child(userId).setValue(user)
-                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {
-                                                        @Override
-                                                        public void onSuccess(Void aVoid) {
-                                                            Toast.makeText(EditProfile.this, "Profile updated successfully", Toast.LENGTH_SHORT).show();
-                                                            // Dismiss the progress dialog
-                                                            progressDialog.dismiss();
-                                                            startActivity(new Intent(EditProfile.this, MainActivity.class));
-                                                            finish();
-                                                        }
-                                                    })
-                                                    .addOnFailureListener(new OnFailureListener() {
-                                                        @Override
-                                                        public void onFailure(@NonNull Exception e) {
-                                                            Toast.makeText(EditProfile.this, "Failed to update profile", Toast.LENGTH_SHORT).show();
-                                                            // Dismiss the progress dialog
-                                                            progressDialog.dismiss();
-                                                        }
-                                                    });
-                                        }
-                                    });
-                                }
-                            })
-                            .addOnFailureListener(new OnFailureListener() {
-                                @Override
-                                public void onFailure(@NonNull Exception e) {
-                                    Toast.makeText(EditProfile.this, "Failed to upload image", Toast.LENGTH_SHORT).show();
-                                    // Dismiss the progress dialog
-                                    progressDialog.dismiss();
-                                }
-                            })
-                            .addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {
-                                @Override
-                                public void onProgress(@NonNull UploadTask.TaskSnapshot snapshot) {
-                                    double progress = (100.0 * snapshot.getBytesTransferred() / snapshot.getTotalByteCount());
-                                    progressDialog.setMessage("Uploaded " + (int) progress + "%");
-                                }
-                            });
+                    mStorageRef.child(userId).putFile(mImageUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
+                        @Override
+                        public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
+                            // Get the download URL of the image
+                            mStorageRef.child(userId).getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
+                                @Override
+                                public void onSuccess(Uri uri) {
+                                    // Update user profile with new image URL
+                                    String imageUrl = uri.toString();
+                                    HashMap<String, Object> hashMap = new HashMap<>();
+                                    hashMap.put("imageUrl", imageUrl);
+                                    mDatabaseRef.child(userId).updateChildren(hashMap);
+
+                                    // Update user profile with new username
+                                    name = mUsernameEditText.getText().toString().trim();
+                                    updateProfile(name,mImageUri);
+                                }
+                            });
+                        }
+                    }).addOnFailureListener(new OnFailureListener() {
+                        @Override
+                        public void onFailure(@NonNull Exception e) {
+                            progressDialog.dismiss();
+                            showCustomToast("Failed to upload image: ");
+                        }
+                    });
                 }
             });
         } else {
-            // Update username only
-            User user = new User(userId, username, null);
-            mDatabaseRef.child(userId).setValue(user)
-                    .addOnSuccessListener(new OnSuccessListener<Void>() {
-                        @Override
-                        public void onSuccess(Void aVoid) {
-                            Toast.makeText(EditProfile.this, "Profile updated successfully", Toast.LENGTH_SHORT).show();
-                            startActivity(new Intent(EditProfile.this, MainActivity.class));
-                            finish();
-                        }
-                    })
-                    .addOnFailureListener(new OnFailureListener() {
-                        @Override
-                        public void onFailure(@NonNull Exception e) {
-                            Toast.makeText(EditProfile.this, "Failed to update profile", Toast.LENGTH_SHORT).show();
-                        }
-                    });
+            // Update user profile with new username
+            name = mUsernameEditText.getText().toString().trim();
+            updateProfile(name,null);
+        }
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        // Dismiss any open dialogs
+        if (progressDialog != null && progressDialog.isShowing()) {
+            progressDialog.dismiss();
         }
     }
 
@@ -255,10 +327,10 @@
         if (requestCode == CAMERA_PERMISSION_CODE) {
             if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                 // Camera permission was granted, start camera intent
-                dispatchTakePictureIntent();
+
             } else {
                 // Camera permission was denied, show a message to the user
-                Toast.makeText(this, "Camera permission is required to take photos", Toast.LENGTH_SHORT).show();
+                showCustomToast("Camera permission is required to take photos");
             }
         }
     }
@@ -276,5 +348,49 @@
         return mimeTypeMap.getExtensionFromMimeType(contentResolver.getType(uri));
     }
 
+    private void getInfo() {
+        DatabaseReference ref = FirebaseDatabase.getInstance("https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/").getReference("Users");
+        ref.child(mAuth.getUid())
+                .addListenerForSingleValueEvent(new ValueEventListener() {
+                    @Override
+                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
+                        String username = ""+dataSnapshot.child("Username").getValue();
+                        String email = ""+dataSnapshot.child("Email").getValue();
+                        String profileImage = ""+dataSnapshot.child("profileImage").getValue();
+
+                        binding.editName.setText(username);
+                        try{
+                            Picasso.get().load(profileImage).placeholder(R.drawable.person).into(binding.editImage);
+                        }catch (Exception e){
+                            binding.editImage.setImageResource(R.drawable.person);
+                        }
+                    }
+
+                    @Override
+                    public void onCancelled(@NonNull DatabaseError databaseError) {
+
+                    }
+                });
+    }
+
+    private void showCustomToast(String customText) {
+        // Inflate custom layout
+        LayoutInflater inflater = getLayoutInflater();
+        View layout = inflater.inflate(R.layout.custom_toast,
+                (ViewGroup) findViewById(R.id.custom_toast));
+
+// Set custom text
+        TextView text = layout.findViewById(R.id.toastText);
+        text.setText(customText);
+
+// Create and show custom Toast
+        Toast toast = new Toast(getApplicationContext());
+        toast.setGravity(Gravity.BOTTOM, 0, 0);
+        toast.setDuration(Toast.LENGTH_LONG);
+        toast.setView(layout);
+        toast.show();
+
+    }
+
 
 }

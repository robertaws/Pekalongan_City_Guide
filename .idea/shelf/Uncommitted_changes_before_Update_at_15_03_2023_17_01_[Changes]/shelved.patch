Index: app/src/main/java/com/binus/pekalongancityguide/Layout/Register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Patterns;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.binus.pekalongancityguide.R;\r\nimport com.binus.pekalongancityguide.databinding.ActivityRegisterBinding;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class Register extends AppCompatActivity {\r\n    FirebaseAuth firebaseAuth;\r\n    ImageButton back;\r\n    EditText user, email, pass, cpass;\r\n    String Username, Email, Password, Cfmpass;\r\n    TextInputLayout til, ctil, etil, util;\r\n    Button register;\r\n    ProgressDialog progressDialog;\r\n    private ActivityRegisterBinding binding;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        binding = ActivityRegisterBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        progressDialog = new ProgressDialog(this);\r\n        progressDialog.setTitle(\"Please Wait\");\r\n        progressDialog.setCanceledOnTouchOutside(false);\r\n\r\n        init();\r\n\r\n        back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n        binding.regisBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                validate();\r\n            }\r\n        });\r\n        til.getEditText().setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if (hasFocus) {\r\n                    // The user has clicked on the text input layout\r\n                    til.setPasswordVisibilityToggleEnabled(true);\r\n                } else {\r\n                    // The user has left the text input layout\r\n                }\r\n            }\r\n        });\r\n\r\n        ctil.getEditText().setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if (hasFocus) {\r\n                    // The user has clicked on the text input layout\r\n                    ctil.setPasswordVisibilityToggleEnabled(true);\r\n                } else {\r\n                    // The user has left the text input layout\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    void init(){\r\n        back = findViewById(R.id.backtoLogin);\r\n        user = findViewById(R.id.regis_user);\r\n        email = findViewById(R.id.regis_email);\r\n        pass = findViewById(R.id.regis_pass);\r\n        til = findViewById(R.id.regispass_til);\r\n        register = findViewById(R.id.regis_btn);\r\n        cpass = findViewById(R.id.regis_cpass);\r\n        ctil = findViewById(R.id.regiscpass_til);\r\n        etil = findViewById(R.id.regisemail_til);\r\n        util = findViewById(R.id.regisuser_til);\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n\r\n        Username = binding.regisUser.getText().toString().trim();\r\n        Email = binding.regisEmail.getText().toString().trim();\r\n        Password = binding.regisPass.getText().toString().trim();\r\n        Cfmpass = binding.regisCpass.getText().toString().trim();\r\n    }\r\n\r\n    void validate() {\r\n        if(Username.isEmpty()){\r\n            user.setError(\"Username cannot be empty!\");\r\n        }else if(Username.length()<3 || Username.length()>12){\r\n            user.setError(\"Username must be between 3-12 characters!\");\r\n        }else if(Email.isEmpty()){\r\n            email.setError(\"Email cannot be empty!\");\r\n        }else if(!Patterns.EMAIL_ADDRESS.matcher(Email).matches()) {\r\n            email.setError(\"Invalid Email Address!\");\r\n        }else if(Password.isEmpty()){\r\n            pass.setError(\"Password cannot be empty!\");\r\n        }else if(Password.length()<8){\r\n            pass.setError(\"password must be more than 8 characters!\");\r\n        }else if(!Cfmpass.equals(Password)){\r\n            cpass.setError(\"Password does not match!\");\r\n        }else{\r\n            createUser();\r\n        }\r\n    }\r\n\r\n    private void createUser(){\r\n        progressDialog.setMessage(\"Creating account...\");\r\n        progressDialog.show();\r\n        firebaseAuth.createUserWithEmailAndPassword(Email,Password)\r\n                .addOnSuccessListener(new OnSuccessListener<AuthResult>() {\r\n                    @Override\r\n                    public void onSuccess(AuthResult authResult) {\r\n                        progressDialog.dismiss();\r\n                        addUser();\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Toast.makeText(Register.this, \"\"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void addUser() {\r\n        progressDialog.setMessage(\"Saving user info\");\r\n        long timestamp = System.currentTimeMillis();\r\n        String uid = firebaseAuth.getUid();\r\n        HashMap<String, Object> hashMap = new HashMap<>();\r\n        hashMap.put(\"uid\",uid);\r\n        hashMap.put(\"Email\",Email);\r\n        hashMap.put(\"Username\",Username);\r\n        hashMap.put(\"profileImage\",\"\");\r\n        hashMap.put(\"userType\",\"user\");\r\n        hashMap.put(\"timestamp\", timestamp);\r\n        DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference(\"Users\");\r\n        databaseReference.child(uid)\r\n                .setValue(hashMap)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void unused) {\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(Register.this, \"Account created!\", Toast.LENGTH_SHORT).show();\r\n                        startActivity(new Intent(Register.this,Home.class));\r\n                        finish();\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Toast.makeText(Register.this, \"\"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/Register.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/Register.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/Register.java	(revision 176c7a4576d716b15caf6d85f8a3af0ae56726c9)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/Register.java	(date 1678861838817)
@@ -30,7 +30,6 @@
     FirebaseAuth firebaseAuth;
     ImageButton back;
     EditText user, email, pass, cpass;
-    String Username, Email, Password, Cfmpass;
     TextInputLayout til, ctil, etil, util;
     Button register;
     ProgressDialog progressDialog;
@@ -87,6 +86,8 @@
 
     }
 
+    String Username, Email, Password, Cfmpass;
+
     void init(){
         back = findViewById(R.id.backtoLogin);
         user = findViewById(R.id.regis_user);
@@ -100,13 +101,14 @@
         util = findViewById(R.id.regisuser_til);
         firebaseAuth = FirebaseAuth.getInstance();
 
+    }
+
+    void validate() {
         Username = binding.regisUser.getText().toString().trim();
         Email = binding.regisEmail.getText().toString().trim();
         Password = binding.regisPass.getText().toString().trim();
         Cfmpass = binding.regisCpass.getText().toString().trim();
-    }
 
-    void validate() {
         if(Username.isEmpty()){
             user.setError("Username cannot be empty!");
         }else if(Username.length()<3 || Username.length()>12){
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.util.Patterns;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.binus.pekalongancityguide.R;\r\nimport com.binus.pekalongancityguide.databinding.ActivityMainBinding;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    private ActivityMainBinding binding;\r\n    Button login, noLogin;\r\n    EditText email, pass;\r\n    TextInputLayout til,etil;\r\n    FirebaseAuth firebaseAuth;\r\n    ProgressDialog progressDialog;\r\n    TextView register;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityMainBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        progressDialog = new ProgressDialog(this);\r\n        progressDialog.setTitle(\"Please Wait\");\r\n        progressDialog.setCanceledOnTouchOutside(false);\r\n\r\n        init();\r\n\r\n        binding.noLogin.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(MainActivity.this, Home.class));\r\n            }\r\n        });\r\n        binding.loginBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                validate();\r\n                InputMethodManager imm = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);\r\n                imm.hideSoftInputFromWindow(v.getWindowToken(), 0);\r\n            }\r\n        });\r\n\r\n        binding.mainRegis.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Log.d(TAG, \"mainRegis is not null: \" + (binding.mainRegis != null));\r\n                Intent regisIntent = new Intent(MainActivity.this, Register.class);\r\n                startActivity(regisIntent);\r\n            }\r\n        });\r\n\r\n        til.getEditText().setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if (hasFocus) {\r\n                    // The user has clicked on the text input layout\r\n                    til.setPasswordVisibilityToggleEnabled(true);\r\n                } else {\r\n                    // The user has left the text input layout\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    String Email, Password;\r\n    void init(){\r\n        login = findViewById(R.id.login_btn);\r\n        noLogin = findViewById(R.id.no_login);\r\n        email = findViewById(R.id.login_email);\r\n        pass = findViewById(R.id.login_pass);\r\n        til = findViewById(R.id.loginpass_til);\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        register = findViewById(R.id.main_regis);\r\n        etil = findViewById(R.id.loginemail_til);\r\n    }\r\n    void validate() {\r\n        Email = binding.loginEmail.getText().toString().trim();\r\n        Password = binding.loginPass.getText().toString().trim();\r\n        if (Email.isEmpty()) {\r\n            email.setError(\"All field must not be empty!\");\r\n        }else if (!Patterns.EMAIL_ADDRESS.matcher(Email).matches()) {\r\n            email.setError(\"Invalid Email Address!\");\r\n        }else if(Password.isEmpty()){\r\n            pass.setError(\"All field must not be empty!\");\r\n            til.setPasswordVisibilityToggleEnabled(false);\r\n        }else{\r\n            tryLogin();\r\n        }\r\n    }\r\n\r\n    private void tryLogin() {\r\n        progressDialog.setMessage(\"Logging in..\");\r\n        progressDialog.show();\r\n\r\n        firebaseAuth.signInWithEmailAndPassword(Email,Password)\r\n                .addOnSuccessListener(new OnSuccessListener<AuthResult>() {\r\n                    @Override\r\n                    public void onSuccess(AuthResult authResult) {\r\n                        checkUser();\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Snackbar.make(binding.getRoot(), e.getMessage(), Snackbar.LENGTH_SHORT).show();\r\n                        Handler handler = new Handler();\r\n                        handler.postDelayed(new Runnable() {\r\n                            public void run() {\r\n                                progressDialog.dismiss();\r\n                            }\r\n                        }, 2000);\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void checkUser() {\r\n        progressDialog.setMessage(\"Checking user..\");\r\n        FirebaseUser firebaseUser =firebaseAuth.getCurrentUser();\r\n        DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference(\"Users\");\r\n        databaseReference.child(firebaseUser.getUid())\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(DataSnapshot snapshot) {\r\n                        progressDialog.dismiss();\r\n                        String userType =\"\"+snapshot.child(\"userType\").getValue();\r\n                        if(userType.equals(\"user\")){\r\n                            startActivity(new Intent(MainActivity.this,Home.class));\r\n                            finish();\r\n                        }else if(userType.equals(\"admin\")){\r\n                            startActivity(new Intent(MainActivity.this,Home.class));\r\n                            finish();\r\n                        }\r\n                    }\r\n                    @Override\r\n                    public void onCancelled(DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/MainActivity.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/MainActivity.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/MainActivity.java	(revision 176c7a4576d716b15caf6d85f8a3af0ae56726c9)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/MainActivity.java	(date 1678863253643)
@@ -21,6 +21,7 @@
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.material.snackbar.Snackbar;
 import com.google.android.material.textfield.TextInputLayout;
+import com.google.firebase.FirebaseApp;
 import com.google.firebase.auth.AuthResult;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
@@ -51,6 +52,17 @@
         progressDialog.setTitle("Please Wait");
         progressDialog.setCanceledOnTouchOutside(false);
 
+        FirebaseDatabase database = FirebaseDatabase.getInstance();
+        FirebaseApp.initializeApp(this);
+
+        FirebaseDatabase.getInstance().setPersistenceEnabled(true);
+        FirebaseDatabase.getInstance().getReference().keepSynced(true);
+
+        database.setDatabaseUrl("https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/");
+
+
+        DatabaseReference myRef = database.getReference("path/to/data");
+
         init();
 
         binding.noLogin.setOnClickListener(new View.OnClickListener() {
@@ -107,9 +119,9 @@
         Password = binding.loginPass.getText().toString().trim();
         if (Email.isEmpty()) {
             email.setError("All field must not be empty!");
-        }else if (!Patterns.EMAIL_ADDRESS.matcher(Email).matches()) {
+        } if (!Patterns.EMAIL_ADDRESS.matcher(Email).matches()) {
             email.setError("Invalid Email Address!");
-        }else if(Password.isEmpty()){
+        } if(Password.isEmpty()){
             pass.setError("All field must not be empty!");
             til.setPasswordVisibilityToggleEnabled(false);
         }else{

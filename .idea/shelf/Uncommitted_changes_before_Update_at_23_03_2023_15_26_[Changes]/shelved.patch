Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'\r\n}\r\n\r\nandroid {\r\n    compileSdk 33\r\n\r\n    buildFeatures {\r\n        dataBinding true\r\n    }\r\n    defaultConfig {\r\n        applicationId \"com.binus.pekalongancityguide\"\r\n        minSdk 23\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    namespace 'com.binus.pekalongancityguide'\r\n}\r\n\r\ndependencies {\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    implementation 'com.google.android.material:material:1.8.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'com.google.android.gms:play-services-maps:18.1.0'\r\n    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'\r\n    implementation 'com.google.android.material:material:1.9.0-beta01'\r\n    implementation 'com.github.denzcoskun:ImageSlideShow:0.1.0'\r\n    implementation 'com.github.chetankoli1.BottomNavigation:chetanbottomnavigation:0.0.3'\r\n    implementation 'com.github.bumptech.glide:glide:4.15.0'\r\n    implementation 'com.squareup.okhttp3:okhttp:4.9.3'\r\n    implementation 'com.google.code.gson:gson:2.9.0'\r\n    implementation 'com.google.firebase:firebase-auth:21.1.0'\r\n    implementation 'com.google.firebase:firebase-database:20.1.0'\r\n    implementation 'com.google.firebase:firebase-storage:20.1.0'\r\n    implementation 'com.google.android.gms:play-services-maps:18.1.0'\r\n    implementation 'com.google.android.libraries.places:places:3.0.0'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.0'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision cdd597d135fba576798caf4bf7a69ad0f898b5f4)
+++ b/app/build.gradle	(date 1679559962166)
@@ -50,6 +50,7 @@
     implementation 'com.google.firebase:firebase-storage:20.1.0'
     implementation 'com.google.android.gms:play-services-maps:18.1.0'
     implementation 'com.google.android.libraries.places:places:3.0.0'
+    implementation 'com.google.openlocationcode:openlocationcode:1.3.3'
     implementation 'com.squareup.picasso:picasso:2.71828'
     testImplementation 'junit:junit:4.13.2'
     annotationProcessor 'com.github.bumptech.glide:compiler:4.15.0'
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.binus.pekalongancityguide.R;\r\nimport com.binus.pekalongancityguide.databinding.ActivityAddDestinationBinding;\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.libraries.places.api.Places;\r\nimport com.google.android.libraries.places.api.model.AutocompleteSessionToken;\r\nimport com.google.android.libraries.places.api.model.Place;\r\nimport com.google.android.libraries.places.api.model.TypeFilter;\r\nimport com.google.android.libraries.places.api.net.FindAutocompletePredictionsRequest;\r\nimport com.google.android.libraries.places.api.net.FindAutocompletePredictionsResponse;\r\nimport com.google.android.libraries.places.api.net.PlacesClient;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\nimport static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;\r\n\r\npublic class AddDestination extends AppCompatActivity {\r\n    private ActivityAddDestinationBinding binding;\r\n    private FirebaseAuth firebaseAuth;\r\n    private Uri imageUri = null;\r\n    private static final int PICK_IMAGE_REQUEST = 1;\r\n\r\n    private ProgressDialog progressDialog;\r\n    ArrayList<String> categoriesTitleArrayList, categoryIdArrayList;\r\n    public static final String TAG = \"ADD_IMAGE_TAG\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        Places.initialize(getApplicationContext(), MAPS_API_KEY);\r\n        binding = ActivityAddDestinationBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        loadCategory();\r\n        progressDialog = new ProgressDialog(this);\r\n        progressDialog.setTitle(\"Please wait\");\r\n        progressDialog.setCanceledOnTouchOutside(false);\r\n\r\n        binding.backtoAdmin.setOnClickListener(v -> onBackPressed());\r\n        binding.addPicture.setOnClickListener(v -> addPhoto());\r\n        binding.categoryPick.setOnClickListener(v -> showCategoryDialog());\r\n        binding.addBtn.setOnClickListener(v -> {\r\n            InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            imm.hideSoftInputFromWindow(binding.getRoot().getWindowToken(), 0);\r\n            validateData();\r\n        });\r\n\r\n    }\r\n    private String title=\"\",desc=\"\";\r\n\r\n    private void validateData() {\r\n        Log.d(TAG,\"validate data : validating data \");\r\n        title = binding.titleEt.getText().toString().trim();\r\n        desc = binding.descEt.getText().toString().trim();\r\n        if(TextUtils.isEmpty(title)){\r\n            binding.titleEt.setError(\"Enter destination title!\");\r\n        }else if(TextUtils.isEmpty((desc))){\r\n            binding.descEt.setError(\"Enter destination description!\");\r\n        }else if(TextUtils.isEmpty(selectedCategoryTitle)){\r\n            binding.categoryPick.setError(\"Pick a category!\");\r\n        }else if(imageUri==null){\r\n            Toast.makeText(this, \"Pick an image!\", Toast.LENGTH_SHORT).show();\r\n        }else {\r\n            PlacesClient placesClient = Places.createClient(this);\r\n            List<Place.Field> placeFields = Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.ADDRESS);\r\n            AutocompleteSessionToken token = AutocompleteSessionToken.newInstance();\r\n            FindAutocompletePredictionsRequest request = FindAutocompletePredictionsRequest.builder()\r\n                    .setTypeFilter(TypeFilter.ESTABLISHMENT)\r\n                    .setSessionToken(token)\r\n                    .setQuery(title)\r\n                    .build();\r\n            Task<FindAutocompletePredictionsResponse> task = placesClient.findAutocompletePredictions(request);\r\n            task.addOnSuccessListener(response -> {\r\n                if (!response.getAutocompletePredictions().isEmpty()) {\r\n                    // Get the place ID from the first prediction\r\n                    String placeId = response.getAutocompletePredictions().get(0).getPlaceId();\r\n                    Log.d(TAG, \"Place ID: \" + placeId);\r\n                    // Call a method to upload the data to the database\r\n                    uploadtoStorage(placeId);\r\n                } else {\r\n                    Toast.makeText(this, \"No location found for the given title\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n            task.addOnFailureListener(e -> {\r\n                Log.e(TAG, \"Error getting place ID: \" + e.getMessage());\r\n                Toast.makeText(this, \"Error getting location from title: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    private void uploadtoStorage(String placeId) {\r\n        Log.d(TAG, \"uploadtoStorage : uploading to storage\");\r\n        progressDialog.setMessage(\"Uploading image\");\r\n        progressDialog.show();\r\n        long timestamp = System.currentTimeMillis();\r\n        String filePathandName = \"Destination/\" + timestamp;\r\n        StorageReference storageReference = FirebaseStorage.getInstance(\"gs://pekalongan-city-guide-5bf2e.appspot.com\").getReference(filePathandName);\r\n        storageReference.putFile(imageUri)\r\n                .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                        Log.d(TAG,\"on success : Image uploaded to Storage\");\r\n                        Log.d(TAG,\"on success : getting image url\");\r\n                        Task<Uri> uriTask = taskSnapshot.getStorage().getDownloadUrl();\r\n                        while (!uriTask.isSuccessful());\r\n                        String uploadedImageUrl = \"\"+uriTask.getResult();\r\n                        uploadtoDB(uploadedImageUrl, timestamp, placeId);\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        progressDialog.dismiss();\r\n                        Log.d(TAG, \"on Failure : Image upload failed due to \" + e.getMessage());\r\n                        Toast.makeText(AddDestination.this, \"Image upload failed due to \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    private void uploadtoDB(String uploadedImageUrl, long timestamp, String placeId) {\r\n        Log.d(TAG, \"uploadtoDB : uploading image to firebase DB\");\r\n        progressDialog.setMessage(\"Uploading image info\");\r\n        String uid = firebaseAuth.getUid();\r\n        HashMap<String, Object> hashMap = new HashMap<>();\r\n        hashMap.put(\"uid\", \"\" + uid);\r\n        hashMap.put(\"id\", \"\" + timestamp);\r\n        hashMap.put(\"title\", \"\" + title);\r\n        hashMap.put(\"description\", \"\" + desc);\r\n        hashMap.put(\"categoryId\", \"\" + selectedCategoryId);\r\n        hashMap.put(\"url\", \"\" + uploadedImageUrl);\r\n        hashMap.put(\"timestamp\", timestamp);\r\n        hashMap.put(\"placeId\", placeId);\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\r\n        reference.child(\"\"+timestamp)\r\n                .setValue(hashMap)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(getApplicationContext(), \"Image uploaded successfully\", Toast.LENGTH_LONG).show();\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(getApplicationContext(), \"\" + e.getMessage(), Toast.LENGTH_LONG).show();\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void loadCategory(){\r\n        Log.d(TAG,\"load Category : load Category \");\r\n        categoriesTitleArrayList = new ArrayList<>();\r\n        categoryIdArrayList = new ArrayList<>();\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Categories\");\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                categoriesTitleArrayList.clear();\r\n                categoryIdArrayList.clear();\r\n                for(DataSnapshot dataSnapshot : snapshot.getChildren()){\r\n                    String categoryId = \"\"+dataSnapshot.child(\"id\").getValue();\r\n                    String categoryTitle = \"\"+dataSnapshot.child(\"category\").getValue();\r\n                    categoriesTitleArrayList.add(categoryTitle);\r\n                    categoryIdArrayList.add(categoryId);\r\n                }\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n    private String selectedCategoryId,selectedCategoryTitle;\r\n    private void showCategoryDialog(){\r\n        Log.d(TAG,\"Category dialog : showing dialog \");\r\n        String [] categoryArray = new String[categoriesTitleArrayList.size()];\r\n        for(int i=0;i<categoriesTitleArrayList.size();i++){\r\n            categoryArray[i] = categoriesTitleArrayList.get(i);\r\n        }\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Pick Category\")\r\n                .setItems(categoryArray, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        selectedCategoryTitle = categoriesTitleArrayList.get(which);\r\n                        selectedCategoryId = categoryIdArrayList.get(which);\r\n                        binding.categoryPick.setText(selectedCategoryTitle);\r\n                        Log.d(TAG,\"on Click : Selected Category :\"+selectedCategoryId+\" \"+selectedCategoryTitle);\r\n                    }\r\n                })\r\n                .show();\r\n\r\n    }\r\n    private void addPhoto(){\r\n        Log.d(TAG,\"imageIntent : Start pick destination image\");\r\n        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);\r\n        intent.setType(\"image/*\");\r\n        startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), PICK_IMAGE_REQUEST);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(requestCode == PICK_IMAGE_REQUEST && resultCode == RESULT_OK && data != null && data.getData() != null) {\r\n            Log.d(TAG, \"onActivityResult : Image picked\");\r\n            imageUri = data.getData();\r\n            Log.d(TAG, \"onActivityResult : URI : \" + imageUri);\r\n            Glide.with(AddDestination.this)\r\n                    .load(imageUri)\r\n                    .placeholder(R.drawable.person)\r\n                    .centerCrop()\r\n                    .into(binding.addPicture);\r\n        }\r\n        else{\r\n            Log.d(TAG,\"onActivityResult : Cancelled pick image\");\r\n            Toast.makeText(this, \"Cancelled pick image\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java	(revision cdd597d135fba576798caf4bf7a69ad0f898b5f4)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java	(date 1679559208013)
@@ -19,6 +19,7 @@
 import com.binus.pekalongancityguide.R;
 import com.binus.pekalongancityguide.databinding.ActivityAddDestinationBinding;
 import com.bumptech.glide.Glide;
+import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
@@ -26,6 +27,7 @@
 import com.google.android.libraries.places.api.model.AutocompleteSessionToken;
 import com.google.android.libraries.places.api.model.Place;
 import com.google.android.libraries.places.api.model.TypeFilter;
+import com.google.android.libraries.places.api.net.FetchPlaceRequest;
 import com.google.android.libraries.places.api.net.FindAutocompletePredictionsRequest;
 import com.google.android.libraries.places.api.net.FindAutocompletePredictionsResponse;
 import com.google.android.libraries.places.api.net.PlacesClient;
@@ -177,7 +179,17 @@
                     @Override
                     public void onFailure(@NonNull Exception e) {
                         progressDialog.dismiss();
-                        Toast.makeText(getApplicationContext(), "" + e.getMessage(), Toast.LENGTH_LONG).show();
+                        Log.d(TAG, "on Failure : " + e.getMessage());
+                        Toast.makeText(AddDestination.this, "Data upload failed due to " + e.getMessage(), Toast.LENGTH_SHORT).show();
+                    }
+                })
+                .addOnCompleteListener(new OnCompleteListener<Void>() {
+                    @Override
+                    public void onComplete(@NonNull Task<Void> task) {
+                        if (task.isSuccessful()) {
+                            Log.d(TAG, "uploadtoDB : Place ID successfully added to database");
+                            getPlaceDetails(placeId);
+                        }
                     }
                 });
     }
@@ -251,4 +263,20 @@
             Toast.makeText(this, "Cancelled pick image", Toast.LENGTH_SHORT).show();
         }
     }
+
+    private void getPlaceDetails(String placeId) {
+        Log.d(TAG, "getPlaceDetails : getting place details");
+        List<Place.Field> placeFields = Arrays.asList(Place.Field.NAME, Place.Field.LAT_LNG, Place.Field.ADDRESS);
+        FetchPlaceRequest request = FetchPlaceRequest.builder(placeId, placeFields).build();
+        PlacesClient placesClient = Places.createClient(this);
+        placesClient.fetchPlace(request)
+                .addOnSuccessListener((response) -> {
+                    Place place = response.getPlace();
+                    Log.d(TAG, "Place details: " + place.getName() + ", " + place.getAddress() + ", " + place.getLatLng());
+                })
+                .addOnFailureListener((exception) -> {
+                    Log.e(TAG, "Place not found: " + exception.getMessage());
+                });
+    }
+
 }
\ No newline at end of file
Index: app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Adapter;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Filter;\r\nimport android.widget.Filterable;\r\nimport android.widget.ImageButton;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.binus.pekalongancityguide.Layout.DestinationDetailAdmin;\r\nimport com.binus.pekalongancityguide.Layout.EditDestination;\r\nimport com.binus.pekalongancityguide.ItemTemplate.DestinationAdmin;\r\nimport com.binus.pekalongancityguide.Misc.FilterDestiAdmin;\r\nimport com.binus.pekalongancityguide.Misc.MyApplication;\r\nimport com.binus.pekalongancityguide.databinding.ListDestiAdminBinding;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.util.ArrayList;\r\n\r\nimport static com.binus.pekalongancityguide.Misc.Constants.MAX_BYTES_IMAGE;\r\n\r\npublic class AdminDestinationAdapter extends RecyclerView.Adapter<AdminDestinationAdapter.HolderAdminDestination> implements Filterable {\r\n    private Context context;\r\n    public ArrayList<DestinationAdmin> destinationAdminArrayList,filterList;\r\n    public static final String TAG = \"DESTINATION_ADAPTER_TAG\";\r\n    private FilterDestiAdmin filterDestiAdmin;\r\n    private ListDestiAdminBinding binding;\r\n    private ProgressDialog dialog;\r\n    public AdminDestinationAdapter(Context context, ArrayList<DestinationAdmin> destinationAdminArrayList) {\r\n        this.context = context;\r\n        this.destinationAdminArrayList = destinationAdminArrayList;\r\n        this.filterList = destinationAdminArrayList;\r\n        dialog = new ProgressDialog(context);\r\n        dialog.setTitle(\"Please Wait\");\r\n        dialog.setCanceledOnTouchOutside(false);\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public HolderAdminDestination onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        binding = ListDestiAdminBinding.inflate(LayoutInflater.from(context),parent,false);\r\n\r\n        return new HolderAdminDestination(binding.getRoot());\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull HolderAdminDestination holder, int position) {\r\n\r\n        DestinationAdmin destinationAdmin = destinationAdminArrayList.get(position);\r\n        String destiId = destinationAdmin.getId();\r\n        String categoryId = destinationAdmin.getCategoryId();\r\n        String imageUrl = destinationAdmin.getUrl();\r\n        String title = destinationAdmin.getTitle();\r\n        String description = destinationAdmin.getDescription();\r\n        holder.title.setText(title);\r\n        holder.description.setText(description);\r\n        holder.rating.setText(\"4.5\");\r\n        loadImage(destinationAdmin, holder);\r\n        holder.options.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showOptionsDialog(destinationAdmin, holder);\r\n            }\r\n        });\r\n        holder.itemView.setOnClickListener(v -> {\r\n            Drawable drawable = holder.layoutImage.getBackground();\r\n            BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;\r\n            Bitmap bitmap = bitmapDrawable.getBitmap();\r\n            ByteArrayOutputStream stream = new ByteArrayOutputStream();\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 50, stream);\r\n            byte[] byteArray = stream.toByteArray();\r\n\r\n            Intent intent = new Intent(context, DestinationDetailAdmin.class);\r\n            intent.putExtra(\"destiId\",destiId);\r\n            intent.putExtra(\"image\", byteArray);\r\n            context.startActivity(intent);\r\n        });\r\n    }\r\n\r\n    private void showOptionsDialog(DestinationAdmin destinationAdmin, HolderAdminDestination holder){\r\n        String destiId = destinationAdmin.getId();\r\n        String destiUrl = destinationAdmin.getUrl();\r\n        String destiTitle = destinationAdmin.getTitle();\r\n        String[] options = {\"Edit\",\"Delete\"};\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(context);\r\n        builder.setTitle(\"Choose Options\")\r\n                .setItems(options, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        if(which==0){\r\n                            Intent intent = new Intent(context, EditDestination.class);\r\n                            intent.putExtra(\"destiId\",destiId);\r\n                            context.startActivity(intent);\r\n                        }else{\r\n                            MyApplication.deleteDesti(\r\n                                    context,\r\n                                    \"\"+destiId,\r\n                                    \"\"+destiUrl,\r\n                                    \"\"+destiTitle\r\n                            );\r\n                        }\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n\r\n\r\n//    private void loadCategory(DestinationAdmin destinationAdmin, HolderAdminDestination holder) {\r\n//        String categoryId = destinationAdmin.getCategoryId();\r\n//        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference();\r\n//        reference.child(categoryId)\r\n//                .addValueEventListener(new ValueEventListener() {\r\n//                    @Override\r\n//                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n//                        String categorytext = \"\"+snapshot.child(\"category\").getValue();\r\n//                        holder.category.setText(categorytext);\r\n//                    }\r\n//\r\n//                    @Override\r\n//                    public void onCancelled(@NonNull DatabaseError error) {\r\n//\r\n//                    }\r\n//                });\r\n//    }\r\n\r\n    public void loadImage(DestinationAdmin destinationAdmin, HolderAdminDestination holder){\r\n        String imageUrl = destinationAdmin.getUrl();\r\n        StorageReference reference = FirebaseStorage.getInstance().getReferenceFromUrl(imageUrl);\r\n        reference.getBytes(MAX_BYTES_IMAGE)\r\n                .addOnSuccessListener(new OnSuccessListener<byte[]>() {\r\n                    @Override\r\n                    public void onSuccess(byte[] bytes) {\r\n                        Log.d(TAG, \"on Success: \" + destinationAdmin.getTitle() + \"successfully got the file\");\r\n                        Bitmap bitmap = BitmapFactory.decodeByteArray(bytes, 0, bytes.length);\r\n                        BitmapDrawable drawable = new BitmapDrawable(holder.itemView.getResources(), bitmap);\r\n                        drawable.setGravity(Gravity.FILL);\r\n                        holder.layoutImage.setBackground(drawable);\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.d(TAG,\"on Failure: failed to getting file from url due to\"+e.getMessage());\r\n                    }\r\n                });\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return destinationAdminArrayList.size();\r\n    }\r\n\r\n    @Override\r\n    public Filter getFilter() {\r\n        if(filterDestiAdmin==null){\r\n            filterDestiAdmin = new FilterDestiAdmin(filterList,this);\r\n\r\n        }\r\n        return filterDestiAdmin;\r\n    }\r\n\r\n    public class HolderAdminDestination extends RecyclerView.ViewHolder {\r\n        RelativeLayout layoutImage;\r\n        TextView title, description, rating;\r\n        ImageButton options;\r\n\r\n        public HolderAdminDestination(@NonNull View itemView) {\r\n            super(itemView);\r\n            layoutImage = binding.adminlayoutImage;\r\n            title = binding.adminlocTitle;\r\n            description = binding.adminlocDesc;\r\n            rating = binding.adminlocRat;\r\n            options = binding.optionBtn;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java b/app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java	(revision cdd597d135fba576798caf4bf7a69ad0f898b5f4)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java	(date 1679554243500)
@@ -84,16 +84,18 @@
         });
         holder.itemView.setOnClickListener(v -> {
             Drawable drawable = holder.layoutImage.getBackground();
-            BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;
-            Bitmap bitmap = bitmapDrawable.getBitmap();
-            ByteArrayOutputStream stream = new ByteArrayOutputStream();
-            bitmap.compress(Bitmap.CompressFormat.PNG, 50, stream);
-            byte[] byteArray = stream.toByteArray();
+            if (drawable instanceof BitmapDrawable) {
+                BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;
+                Bitmap bitmap = bitmapDrawable.getBitmap();
+                ByteArrayOutputStream stream = new ByteArrayOutputStream();
+                bitmap.compress(Bitmap.CompressFormat.PNG, 50, stream);
+                byte[] byteArray = stream.toByteArray();
 
-            Intent intent = new Intent(context, DestinationDetailAdmin.class);
-            intent.putExtra("destiId",destiId);
-            intent.putExtra("image", byteArray);
-            context.startActivity(intent);
+                Intent intent = new Intent(context, DestinationDetailAdmin.class);
+                intent.putExtra("destiId",destiId);
+                intent.putExtra("image", byteArray);
+                context.startActivity(intent);
+            }
         });
     }
 

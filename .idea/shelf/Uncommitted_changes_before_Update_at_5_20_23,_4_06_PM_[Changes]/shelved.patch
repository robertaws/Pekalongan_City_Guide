Index: app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationPager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentPagerAdapter;\nimport androidx.viewpager.widget.ViewPager;\n\nimport com.binus.pekalongancityguide.ItemTemplate.Categories;\nimport com.binus.pekalongancityguide.databinding.FragmentDestinationBinding;\nimport com.google.android.material.tabs.TabLayout;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.util.ArrayList;\n\npublic class DestinationPager extends Fragment {\n    private ViewPager viewPager;\n    private TabLayout tabLayout;\n    public ArrayList<Categories> categoriesArrayList;\n    public ViewPagerAdapter viewPagerAdapter;\n    private FragmentDestinationBinding binding;\n    private int selectedTabPosition = 0;\n    private static final String TAG = \"DESTI_USER_TAG\";\n\n    public DestinationPager() {\n\n    }\n\n    @Override\n    public void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        binding = FragmentDestinationBinding.inflate(LayoutInflater.from(getContext()), container, false);\n        init();\n        setupViewPagerAdapter(viewPager);\n        updatePager();\n        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n            @Override\n            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n                // This method is called when the user starts scrolling the pager\n            }\n\n            @Override\n            public void onPageSelected(int position) {\n                updatePager();\n                Log.d(\"Destination Pager\", \"Selected tab: \" + position);\n            }\n\n            @Override\n            public void onPageScrollStateChanged(int state) {\n                // This method is called when the scroll state changes (idle, dragging, settling)\n            }\n        });\n        return binding.getRoot();\n    }\n\n    private void init() {\n        viewPager = binding.viewPager;\n        tabLayout = binding.tabLayout;\n    }\n\n    public void updatePager() {\n        tabLayout.setupWithViewPager(viewPager);\n    }\n\n    public void onDataChanged() {\n        if (viewPager != null && viewPager.getAdapter() != null) {\n            viewPager.getAdapter().notifyDataSetChanged();\n        }\n    }\n\n    private void setupViewPagerAdapter(ViewPager viewPager) {\n        viewPagerAdapter = new ViewPagerAdapter(getChildFragmentManager(), getContext());\n        categoriesArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Categories\");\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                categoriesArrayList.clear();\n                Categories allCategories = new Categories(\"01\", \"All\", \"\", 1);\n                categoriesArrayList.add(allCategories);\n                viewPagerAdapter.addFragment(ShowDestinationFragment.newInstance(\n                        \"\"+allCategories.getId(),\n                        \"\"+allCategories.getCategory(),\n                        \"\"+allCategories.getUid()\n                ),allCategories.getCategory());\n                for(DataSnapshot dataSnapshot: snapshot.getChildren()){\n                    Categories categories = dataSnapshot.getValue(Categories.class);\n                    categoriesArrayList.add(categories);\n                    viewPagerAdapter.addFragment(ShowDestinationFragment.newInstance(\n                            \"\"+categories.getId(),\n                            \"\"+categories.getCategory(),\n                            \"\"+categories.getUid()),categories.getCategory());\n                }\n                viewPagerAdapter.notifyDataSetChanged();\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n\n            }\n        });\n        viewPager.setAdapter(viewPagerAdapter);\n        viewPager.setOffscreenPageLimit(10);\n    }\n\n    public class ViewPagerAdapter extends FragmentPagerAdapter {\n        private final ArrayList<ShowDestinationFragment> fragmentList = new ArrayList<>();\n        private final ArrayList<String> fragmentTitleList = new ArrayList<>();\n        private final Context context;\n\n        public ViewPagerAdapter(@NonNull FragmentManager fm, Context context) {\n            super(fm, BEHAVIOR_SET_USER_VISIBLE_HINT);\n            this.context = context;\n        }\n\n        @NonNull\n        @Override\n        public Fragment getItem(int position) {\n            return fragmentList.get(position);\n        }\n\n        @Override\n        public int getCount() {\n            return fragmentList.size();\n        }\n        private void addFragment(ShowDestinationFragment fragment, String title){\n            fragmentList.add(fragment);\n            fragmentTitleList.add(title);\n        }\n        public CharSequence getPageTitle(int position){\n            return fragmentTitleList.get(position);\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationPager.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationPager.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationPager.java	(revision 40e67521b11004b8be7014290a737a5c9e0a69c3)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationPager.java	(date 1684488355189)
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -16,7 +15,6 @@
 
 import com.binus.pekalongancityguide.ItemTemplate.Categories;
 import com.binus.pekalongancityguide.databinding.FragmentDestinationBinding;
-import com.google.android.material.tabs.TabLayout;
 import com.google.firebase.database.DataSnapshot;
 import com.google.firebase.database.DatabaseError;
 import com.google.firebase.database.DatabaseReference;
@@ -26,12 +24,9 @@
 import java.util.ArrayList;
 
 public class DestinationPager extends Fragment {
-    private ViewPager viewPager;
-    private TabLayout tabLayout;
     public ArrayList<Categories> categoriesArrayList;
     public ViewPagerAdapter viewPagerAdapter;
     private FragmentDestinationBinding binding;
-    private int selectedTabPosition = 0;
     private static final String TAG = "DESTI_USER_TAG";
 
     public DestinationPager() {
@@ -47,44 +42,11 @@
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         binding = FragmentDestinationBinding.inflate(LayoutInflater.from(getContext()), container, false);
-        init();
-        setupViewPagerAdapter(viewPager);
-        updatePager();
-        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
-            @Override
-            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
-                // This method is called when the user starts scrolling the pager
-            }
-
-            @Override
-            public void onPageSelected(int position) {
-                updatePager();
-                Log.d("Destination Pager", "Selected tab: " + position);
-            }
-
-            @Override
-            public void onPageScrollStateChanged(int state) {
-                // This method is called when the scroll state changes (idle, dragging, settling)
-            }
-        });
+        setupViewPagerAdapter(binding.viewPager);
+        binding.tabLayout.setupWithViewPager(binding.viewPager);
         return binding.getRoot();
     }
 
-    private void init() {
-        viewPager = binding.viewPager;
-        tabLayout = binding.tabLayout;
-    }
-
-    public void updatePager() {
-        tabLayout.setupWithViewPager(viewPager);
-    }
-
-    public void onDataChanged() {
-        if (viewPager != null && viewPager.getAdapter() != null) {
-            viewPager.getAdapter().notifyDataSetChanged();
-        }
-    }
-
     private void setupViewPagerAdapter(ViewPager viewPager) {
         viewPagerAdapter = new ViewPagerAdapter(getChildFragmentManager(), getContext());
         categoriesArrayList = new ArrayList<>();
@@ -93,7 +55,7 @@
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot) {
                 categoriesArrayList.clear();
-                Categories allCategories = new Categories("01", "All", "", 1);
+                Categories allCategories = new Categories("01","All","",1);
                 categoriesArrayList.add(allCategories);
                 viewPagerAdapter.addFragment(ShowDestinationFragment.newInstance(
                         ""+allCategories.getId(),
Index: app/src/main/java/com/binus/pekalongancityguide/Adapter/DestinationAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Adapter;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.util.Log;\nimport android.view.Gravity;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Filter;\nimport android.widget.Filterable;\nimport android.widget.FrameLayout;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.binus.pekalongancityguide.ItemTemplate.Destination;\nimport com.binus.pekalongancityguide.Layout.DestinationDetails;\nimport com.binus.pekalongancityguide.Misc.FilterDestiUser;\nimport com.binus.pekalongancityguide.R;\nimport com.binus.pekalongancityguide.databinding.ListDestinationBinding;\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.target.SimpleTarget;\nimport com.bumptech.glide.request.transition.Transition;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Locale;\n\npublic class DestinationAdapter extends RecyclerView.Adapter<DestinationAdapter.HolderDestination> implements Filterable {\n    private final Context context;\n    public ArrayList<Destination> destinations, filterList;\n    private ListDestinationBinding binding;\n    private FilterDestiUser filterDestiUser;\n    private final FragmentManager fragmentManager;\n    private static final String TAG = \"ADAPTER_USER_TAG\";\n\n    public DestinationAdapter(Context context, ArrayList<Destination> destinations, FragmentManager fragmentManager) {\n        this.context = context;\n        this.destinations = destinations;\n        this.filterList = destinations;\n        this.fragmentManager = fragmentManager;\n    }\n\n    @NonNull\n    @Override\n    public HolderDestination onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        binding = ListDestinationBinding.inflate(LayoutInflater.from(context),parent,false);\n        return new HolderDestination(binding.getRoot());\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull HolderDestination holder, int position) {\n        Destination destination = destinations.get(position);\n        String destiId = destination.getId();\n        String title = destination.getTitle();\n        holder.title.setText(title);\n        loadImage(destination, holder);\n        DatabaseReference databaseReference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\")\n                .child(destiId);\n        databaseReference.addValueEventListener(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                String desRating = \"\"+dataSnapshot.child(\"rating\").getValue();\n                holder.rating.setText(desRating);\n            }\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n                Log.d(TAG, \"onCancelled: \" + databaseError.getMessage());\n            }\n        });\n        holder.itemView.setOnClickListener(v -> {\n            if (holder.isImageLoaded) {\n                Drawable drawable = holder.layoutImage.getBackground();\n                BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;\n                Bitmap bitmap = bitmapDrawable.getBitmap();\n                ByteArrayOutputStream stream = new ByteArrayOutputStream();\n                bitmap.compress(Bitmap.CompressFormat.PNG, 25, stream);\n                byte[] byteArray = stream.toByteArray();\n\n                String filePath = context.getFilesDir().getPath() + \"/image.png\";\n                FileOutputStream fos;\n                try {\n                    fos = new FileOutputStream(filePath);\n                } catch (FileNotFoundException e) {\n                    throw new RuntimeException(e);\n                }\n                try {\n                    fos.write(byteArray);\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n                try {\n                    fos.close();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n                Intent intent = new Intent(context, DestinationDetails.class);\n                intent.putExtra(\"destiId\", destiId);\n                intent.putExtra(\"imageFilePath\", filePath);\n                context.startActivity(intent);\n            }\n        });\n        float distance = destination.getDistance();\n        String distanceString;\n        if (distance < 1) {\n            int distanceInMeters = (int) (distance * 1000);\n            distanceString = distanceInMeters + \" m\";\n        } else {\n            distanceString = String.format(Locale.getDefault(), \"%.2f km\", distance);\n        }\n        holder.distance.setText(distanceString);\n    }\n\n    private void loadImage(Destination destination, HolderDestination holder) {\n        String imageUrl = destination.getUrl();\n        Glide.with(holder.itemView.getContext())\n                .asBitmap()\n                .load(imageUrl)\n                .placeholder(R.drawable.logo)\n                .into(new SimpleTarget<Bitmap>() {\n                    @Override\n                    public void onResourceReady(@NonNull Bitmap resource, @Nullable Transition<? super Bitmap> transition) {\n//                        Log.d(TAG, \"on Success: \" + destination.getTitle() + \"successfully got the file\");\n                        holder.isImageLoaded = true;\n                        BitmapDrawable drawable = new BitmapDrawable(holder.itemView.getResources(), resource);\n                        drawable.setGravity(Gravity.FILL);\n                        holder.layoutImage.setBackground(drawable);\n                        holder.progressBar.setVisibility(View.GONE);\n                    }\n\n                    @Override\n                    public void onLoadFailed(@Nullable Drawable errorDrawable) {\n                        super.onLoadFailed(errorDrawable);\n                        Log.d(TAG, \"on Failure: failed to getting file from url due to\");\n                    }\n                });\n    }\n\n    public interface OnDataChangedListener {\n        void onDataChanged();\n    }\n\n    private ItineraryAdapter.OnDataChangedListener mListener;\n\n    public void setOnDataChangedListener(ItineraryAdapter.OnDataChangedListener listener) {\n        mListener = listener;\n    }\n\n    @Override\n    public int getItemCount() {\n        return destinations.size();\n    }\n\n    @Override\n    public Filter getFilter() {\n        if (filterDestiUser == null) {\n            filterDestiUser = new FilterDestiUser(filterList, this);\n\n        }\n        return filterDestiUser;\n    }\n\n    class HolderDestination extends RecyclerView.ViewHolder{\n        FrameLayout layoutImage;\n        TextView title,rating,distance;\n        ProgressBar progressBar;\n        boolean isImageLoaded;\n        public HolderDestination(@NonNull View itemView) {\n            super(itemView);\n            layoutImage = binding.layoutImage;\n            title = binding.locTitle;\n            rating = binding.locRat;\n            progressBar = binding.progressBar;\n            distance = binding.locDistance;\n            isImageLoaded = false;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Adapter/DestinationAdapter.java b/app/src/main/java/com/binus/pekalongancityguide/Adapter/DestinationAdapter.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Adapter/DestinationAdapter.java	(revision 40e67521b11004b8be7014290a737a5c9e0a69c3)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Adapter/DestinationAdapter.java	(date 1684489575598)
@@ -47,14 +47,12 @@
     public ArrayList<Destination> destinations, filterList;
     private ListDestinationBinding binding;
     private FilterDestiUser filterDestiUser;
-    private final FragmentManager fragmentManager;
     private static final String TAG = "ADAPTER_USER_TAG";
 
-    public DestinationAdapter(Context context, ArrayList<Destination> destinations, FragmentManager fragmentManager) {
+    public DestinationAdapter(Context context, ArrayList<Destination> destinations) {
         this.context = context;
         this.destinations = destinations;
         this.filterList = destinations;
-        this.fragmentManager = fragmentManager;
     }
 
     @NonNull
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.Manifest;\nimport android.annotation.SuppressLint;\nimport android.app.AlertDialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.content.pm.PackageManager;\nimport android.location.Address;\nimport android.location.Geocoder;\nimport android.location.Location;\nimport android.location.LocationListener;\nimport android.location.LocationManager;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.provider.Settings;\nimport android.text.Editable;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.CheckBox;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.Fragment;\n\nimport com.binus.pekalongancityguide.Adapter.DestinationAdapter;\nimport com.binus.pekalongancityguide.ItemTemplate.Destination;\nimport com.binus.pekalongancityguide.R;\nimport com.binus.pekalongancityguide.databinding.DialogChangeLocBinding;\nimport com.binus.pekalongancityguide.databinding.DialogSortDestiBinding;\nimport com.binus.pekalongancityguide.databinding.FragmentShowDestinationBinding;\nimport com.google.android.gms.common.api.Status;\nimport com.google.android.gms.location.FusedLocationProviderClient;\nimport com.google.android.gms.location.LocationServices;\nimport com.google.android.gms.maps.CameraUpdate;\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.SupportMapFragment;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.MapStyleOptions;\nimport com.google.android.gms.maps.model.MarkerOptions;\nimport com.google.android.libraries.places.api.Places;\nimport com.google.android.libraries.places.api.model.Place;\nimport com.google.android.libraries.places.api.net.PlacesClient;\nimport com.google.android.libraries.places.widget.AutocompleteSupportFragment;\nimport com.google.android.libraries.places.widget.listener.PlaceSelectionListener;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Locale;\n\nimport static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;\n\npublic class ShowDestinationFragment extends Fragment {\n    private final FirebaseDatabase database = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\");\n    private static final int PERMISSION_REQUEST_LOCATION = 500;\n    private String categoryId;\n    private String category;\n    private ArrayList<Destination> destinationArrayList;\n    private DestinationAdapter destinationAdapter;\n    private static final String TAG = \"DESTI_USER_TAG\";\n    private FragmentShowDestinationBinding binding;\n    private FusedLocationProviderClient fusedLocationClient;\n    private LocationManager locationManager;\n    private LocationListener locationListener;\n    private Geocoder geocoder;\n    private AutocompleteSupportFragment autocompleteFragment;\n    private SupportMapFragment fragment;\n    private LatLng coordinate;\n    private String addressString;\n    private double currentLat, currentLng;\n    private float distance;\n    private boolean isChangeLocDialogShowing = false;\n    private static SharedPreferences prefs;\n    DestinationPager destinationPager;\n\n    public ShowDestinationFragment() {\n    }\n\n    public static ShowDestinationFragment newInstance(String id, String category, String uid) {\n        ShowDestinationFragment fragment = new ShowDestinationFragment();\n        Bundle args = new Bundle();\n        args.putString(\"id\", id);\n        args.putString(\"category\", category);\n        args.putString(\"uid\", uid);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState){\n        super.onCreate(savedInstanceState);\n        geocoder = new Geocoder(getContext(), Locale.getDefault());\n        if(getArguments()!=null){\n            categoryId = getArguments().getString(\"categoryId\");\n            category = getArguments().getString(\"category\");\n        }\n    }\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        prefs = getActivity().getSharedPreferences(\"coordinate\", Context.MODE_PRIVATE);\n        destinationPager = new DestinationPager();\n        String lastLatitude = prefs.getString(\"lastLatitude\", \"0\");\n        String lastLongitude = prefs.getString(\"lastLongitude\", \"0\");\n        if (!lastLatitude.equals(\"0\") && !lastLongitude.equals(\"0\")) {\n            double latitude = Double.parseDouble(lastLatitude);\n            double longitude = Double.parseDouble(lastLongitude);\n            coordinate = new LatLng(latitude, longitude);\n        }\n//        Log.d(TAG, \"ON START COORDINATES: \" + coordinate);\n        binding = FragmentShowDestinationBinding.inflate(LayoutInflater.from(getContext()), container, false);\n        if (category.equals(\"All\")) {\n            loadDestinations();\n        } else {\n            loadCategoriedDestination();\n        }\n        locationManager = (LocationManager) getContext().getSystemService(Context.LOCATION_SERVICE);\n        locationListener = new LocationListener() {\n            @Override\n            public void onLocationChanged(Location location) {\n                Log.d(\"Location\", \"Latitude: \" + location.getLatitude() + \", Longitude: \" + location.getLongitude());\n            }\n\n            @Override\n            public void onStatusChanged(String provider, int status, Bundle extras) {\n            }\n\n            @Override\n            public void onProviderEnabled(String provider) {\n            }\n\n            @Override\n            public void onProviderDisabled(String provider) {\n            }\n        };\n\n        if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n        } else {\n            startLocationUpdates();\n        }\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(getContext());\n        binding.searchDesti.addTextChangedListener(new TextWatcher(){\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n                try {\n                    destinationAdapter.getFilter().filter(s);\n                }catch (Exception e){\n                    Log.d(TAG,\"onTextChanged :\"+e.getMessage());\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n        binding.sortButton.setOnClickListener(v ->{\n            showSortDialog();\n        });\n        binding.locLayout.setOnClickListener(v -> {\n            if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\n                    ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n            } else {\n                showChangeLocDialog();\n            }\n        });\n        DestinationAdapter adapter = new DestinationAdapter(getContext(), destinationArrayList, getParentFragmentManager());\n        adapter.setOnDataChangedListener(() -> {\n            // Notify the parent fragment that the data has changed\n            if (getParentFragment() instanceof DestinationPager) {\n                ((DestinationPager) getParentFragment()).onDataChanged();\n            }\n        });\n\n        return binding.getRoot();\n    }\n\n    private void showChangeLocDialog() {\n        if (isChangeLocDialogShowing) return;\n        isChangeLocDialogShowing = true;\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n        DialogChangeLocBinding locBinding = DialogChangeLocBinding.inflate(getLayoutInflater());\n        builder.setView(locBinding.getRoot());\n        AlertDialog dialog = builder.create();\n        dialog.setOnDismissListener(dialog1 -> {\n            requireActivity().runOnUiThread(() -> {\n                getChildFragmentManager().beginTransaction().remove(fragment).commit();\n                getChildFragmentManager().beginTransaction().remove(autocompleteFragment).commit();\n            });\n            isChangeLocDialogShowing = false;\n        });\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\n        dialog.show();\n        if (!Places.isInitialized()) {\n            Places.initialize(getActivity().getApplicationContext(), MAPS_API_KEY);\n        }\n        new AsyncTask<Void, Void, String>() {\n            @Override\n            protected String doInBackground(Void... voids) {\n                try {\n                    List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\n                    if (addresses.size() > 0) {\n                        return addresses.get(0).getAddressLine(0);\n                    }\n                } catch (IOException e) {\n                    e.printStackTrace();\n                    return \"Error: Geocoder service not available\";\n                }\n                return null;\n            }\n\n            @Override\n            protected void onPostExecute(String address) {\n                // update the location text view in the UI thread\n                if (address != null) {\n                    addressString = address;\n                    locBinding.locTv.setText(addressString);\n                    autocompleteFragment.setText(addressString);\n                } else {\n                    locBinding.locTv.setText(\"Address not found\");\n                }\n            }\n        }.execute();\n        fragment = (SupportMapFragment) getChildFragmentManager()\n                .findFragmentById(R.id.user_map);\n        fragment.getMapAsync(googleMap -> {\n            coordinate = new LatLng(currentLat, currentLng);\n            MarkerOptions marker = new MarkerOptions();\n            marker.position(coordinate);\n            marker.title(\"Current Location\");\n            googleMap.addMarker(marker);\n            CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\n            googleMap.moveCamera(cameraUpdate);\n            googleMap.setMapStyle(MapStyleOptions.loadRawResourceStyle(getContext(), R.raw.map_style));\n        });\n        PlacesClient placesClient = Places.createClient(getContext());\n        autocompleteFragment = (AutocompleteSupportFragment) getChildFragmentManager().findFragmentById(R.id.autocomplete_fragment);\n        autocompleteFragment.setPlaceFields(Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.ADDRESS, Place.Field.LAT_LNG));\n        autocompleteFragment.setCountries(\"ID\");\n        autocompleteFragment.setOnPlaceSelectedListener(new PlaceSelectionListener() {\n            @Override\n            public void onPlaceSelected(@NonNull Place place) {\n                coordinate = place.getLatLng();\n                fragment = (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.user_map);\n                fragment.getMapAsync(googleMap -> {\n                    googleMap.clear();\n                    MarkerOptions marker = new MarkerOptions();\n                    marker.position(coordinate);\n                    marker.title(place.getName());\n                    googleMap.addMarker(marker);\n                    CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\n                    googleMap.moveCamera(cameraUpdate);\n                });\n                locBinding.locTv.setText(place.getAddress());\n                addressString = place.getAddress();\n            }\n\n            @Override\n            public void onError(@NonNull Status status) {\n                Log.e(TAG, \"An error occurred: \" + status);\n            }\n        });\n        locBinding.useCurLoc.setOnClickListener(v -> {\n            if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\n                    ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n            } else {\n                fusedLocationClient.getLastLocation().addOnSuccessListener(location -> {\n                    if (location != null) {\n                        currentLat = location.getLatitude();\n                        currentLng = location.getLongitude();\n                        coordinate = new LatLng(currentLat, currentLng);\n                        new AsyncTask<Void, Void, String>() {\n                            @Override\n                            protected String doInBackground(Void... voids) {\n                                try {\n                                    List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\n                                    if (addresses.size() > 0) {\n                                        return addresses.get(0).getAddressLine(0);\n                                    }\n                                } catch (IOException e) {\n                                    e.printStackTrace();\n                                    return \"Error: Geocoder service not available\";\n                                }\n                                return null;\n                            }\n\n                            @Override\n                            protected void onPostExecute(String address) {\n                                if (address != null) {\n//                                    Log.d(\"ADDRESS IN DIALOG\", address);\n                                    addressString = address;\n                                    locBinding.locTv.setText(addressString);\n                                    autocompleteFragment.setText(addressString);\n                                    fragment.getMapAsync(googleMap -> {\n                                        coordinate = new LatLng(currentLat, currentLng);\n                                        MarkerOptions marker = new MarkerOptions();\n                                        marker.position(coordinate);\n                                        marker.title(\"Current Location\");\n                                        googleMap.addMarker(marker);\n                                        CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\n                                        googleMap.moveCamera(cameraUpdate);\n                                        googleMap.setMapStyle(MapStyleOptions.loadRawResourceStyle(getContext(), R.raw.map_style));\n                                    });\n                                }\n                            }\n                        }.execute();\n                    }\n                });\n            }\n        });\n        locBinding.setLocBtn.setOnClickListener(v -> {\n            binding.changeLoc.setText(addressString);\n            dialog.dismiss();\n            updateDistances();\n            if (coordinate != null) {\n                SharedPreferences.Editor editor = prefs.edit();\n                editor.putString(\"lastLatitude\", String.valueOf(coordinate.latitude));\n                editor.putString(\"lastLongitude\", String.valueOf(coordinate.longitude));\n                editor.apply();\n            }\n//            Log.d(TAG, \"COORDINATES: \" + coordinate);\n        });\n    }\n\n    public void showSortDialog(){\n        DialogSortDestiBinding binding1 = DialogSortDestiBinding.inflate(LayoutInflater.from(getContext()));\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n        CheckBox ratingCheck = binding1.ratingSort;\n        CheckBox distanceCheck = binding1.distanceSort;\n        builder.setView(binding1.getRoot());\n        builder.setPositiveButton(R.string.sort_txt, (dialog, which) -> {\n            int start = 0;\n            if (ratingCheck.isChecked() && distanceCheck.isChecked()) {\n                Collections.sort(destinationArrayList, (destination1, destination2) -> {\n                    Double rating1 = Double.parseDouble(destination1.getRating());\n                    Double rating2 = Double.parseDouble(destination2.getRating());\n                    Float distance1 = destination1.getDistance();\n                    Float distance2 = destination2.getDistance();\n                    int distanceCompare = distance1.compareTo(distance2);\n                    if (distanceCompare != 0) {\n                        return distanceCompare;\n                    }\n                    return Double.compare(rating1, rating2);\n                });\n            } else if (ratingCheck.isChecked()) {\n                Collections.sort(destinationArrayList, (destination1, destination2) -> {\n                    Double rating1 = Double.parseDouble(destination1.getRating());\n                    Double rating2 = Double.parseDouble(destination2.getRating());\n                    return Double.compare(rating2, rating1);\n                });\n            } else if (distanceCheck.isChecked()) {\n                Collections.sort(destinationArrayList, (destination1, destination2) -> {\n                    Float distance1 = destination1.getDistance();\n                    Float distance2 = destination2.getDistance();\n                    return distance1.compareTo(distance2);\n                });\n            }\n            String searchText = binding.searchDesti.getText().toString().trim();\n            destinationAdapter.getFilter().filter(searchText);\n            int itemCount = destinationArrayList.size() - start;\n            destinationAdapter.notifyItemRangeChanged(start, itemCount);\n        });\n\n        builder.setNegativeButton(R.string.cancel_txt, (dialog, which) -> {\n            dialog.dismiss();\n        });\n\n        AlertDialog dialog = builder.create();\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\n        dialog.show();\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        locationManager.removeUpdates(locationListener);\n    }\n\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        if (requestCode == PERMISSION_REQUEST_LOCATION) {\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                startLocationUpdates();\n            } else {\n                Toast.makeText(getContext(), \"Location permission denied\", Toast.LENGTH_SHORT).show();\n            }\n        }\n    }\n\n    private void loadDestinations() {\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                destinationArrayList.clear();\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                    Destination destination = dataSnapshot.getValue(Destination.class);\n                    destinationArrayList.add(destination);\n                }\n                updateDistances();\n            }\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n                Log.e(TAG, \"Error: \" + error.getMessage());\n            }\n        });\n    }\n\n    private void loadCategoriedDestination(){\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.orderByChild(\"categoryId\").equalTo(categoryId)\n                .addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        destinationArrayList.clear();\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                            Destination destination = dataSnapshot.getValue(Destination.class);\n                            destinationArrayList.add(destination);\n                        }\n                        updateDistances();\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n\n                    }\n                });\n    }\n\n    private void updateDistances() {\n        for (Destination destination : destinationArrayList) {\n            getDestinationDistance(destination);\n        }\n        if (destinationAdapter == null) {\n            destinationAdapter = new DestinationAdapter(getContext(), destinationArrayList, getParentFragmentManager());\n            binding.destiRv.setAdapter(destinationAdapter);\n        } else {\n            destinationAdapter.notifyDataSetChanged();\n        }\n    }\n    private void getDestinationDistance(Destination destination) {\n        database.getReference(\"Destination\").child(destination.getId()).addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                double placeLat = Double.parseDouble(snapshot.child(\"latitude\").getValue().toString());\n                double placeLng = Double.parseDouble(snapshot.child(\"longitude\").getValue().toString());\n                if (coordinate != null) {\n                    currentLat = coordinate.latitude;\n                    currentLng = coordinate.longitude;\n                    distance = calculateDistance(currentLat, currentLng, placeLat, placeLng);\n                    destination.setDistance(distance);\n                    destinationAdapter.notifyDataSetChanged();\n\n                    new AsyncTask<Void, Void, String>() {\n                        @Override\n                        protected String doInBackground(Void... voids) {\n                            try {\n                                List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\n                                if (addresses.size() > 0) {\n                                    return addresses.get(0).getAddressLine(0);\n                                }\n                            } catch (IOException e) {\n                                e.printStackTrace();\n                                return \"Error: Geocoder service not available\";\n                            }\n                            return null;\n                        }\n\n                        @Override\n                        protected void onPostExecute(String address) {\n                            if (address != null) {\n//                                Log.d(\"ADDRESS\", address);\n                                binding.changeLoc.setText(address);\n                            }\n                        }\n                    }.execute();\n                } else {\n                    if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\n                            ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                        ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n                    } else {\n                        fusedLocationClient.getLastLocation().addOnSuccessListener(location -> {\n                            if (location != null) {\n                                currentLat = location.getLatitude();\n                                currentLng = location.getLongitude();\n                                distance = calculateDistance(currentLat, currentLng, placeLat, placeLng);\n                                destination.setDistance(distance);\n                                sortDestination(destinationArrayList);\n                                destinationAdapter.notifyDataSetChanged();\n\n                                new AsyncTask<Void, Void, String>() {\n                                    @Override\n                                    protected String doInBackground(Void... voids) {\n                                        try {\n                                            List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\n                                            if (addresses.size() > 0) {\n                                                return addresses.get(0).getAddressLine(0);\n                                            }\n                                        } catch (IOException e) {\n                                            e.printStackTrace();\n                                            return \"Error: Geocoder service not available\";\n                                        }\n                                        return null;\n                                    }\n\n                                    @Override\n                                    protected void onPostExecute(String address) {\n                                        if (address != null) {\n//                                            Log.d(\"ADDRESS\", address);\n                                            binding.changeLoc.setText(address);\n                                        }\n                                    }\n                                }.execute();\n                            }\n                        });\n                    }\n                }\n//                Log.d(TAG, \"distance: \" + destination.getDistance());\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n\n            }\n        });\n    };\n    private float calculateDistance(double lat1, double lon1, double lat2, double lon2) {\n        float[] results = new float[1];\n        Location location1 = new Location(\"\");\n        location1.setLatitude(lat1);\n        location1.setLongitude(lon1);\n        Location location2 = new Location(\"\");\n        location2.setLatitude(lat2);\n        location2.setLongitude(lon2);\n        Location.distanceBetween(location1.getLatitude(), location1.getLongitude(),\n                location2.getLatitude(), location2.getLongitude(), results);\n        return results[0] / 1000;\n    }\n\n    private void sortDestination(ArrayList<Destination> destinationArrayList){\n        Collections.sort(destinationArrayList, (destination1, destination2) -> {\n            String title1 = destination1.getTitle().toLowerCase();\n            String title2 = destination2.getTitle().toLowerCase();\n            return title1.compareTo(title2);\n        });\n    }\n\n    @SuppressLint(\"MissingPermission\")\n    private void startLocationUpdates() {\n        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\n            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n            builder.setTitle(R.string.gpsnotEnabled);\n            builder.setMessage(R.string.enable_gps_confirm);\n            builder.setPositiveButton(R.string.yes_txt, (dialog, which) -> {\n                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\n                startActivity(intent);\n            });\n            builder.setNegativeButton(R.string.no_txt, null);\n            builder.show();\n        } else {\n            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 0, locationListener);\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java	(revision 40e67521b11004b8be7014290a737a5c9e0a69c3)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java	(date 1684489135228)
@@ -85,15 +85,14 @@
     private float distance;
     private boolean isChangeLocDialogShowing = false;
     private static SharedPreferences prefs;
-    DestinationPager destinationPager;
 
     public ShowDestinationFragment() {
     }
 
-    public static ShowDestinationFragment newInstance(String id, String category, String uid) {
+    public static ShowDestinationFragment newInstance(String categoryId, String category, String uid) {
         ShowDestinationFragment fragment = new ShowDestinationFragment();
         Bundle args = new Bundle();
-        args.putString("id", id);
+        args.putString("categoryId", categoryId);
         args.putString("category", category);
         args.putString("uid", uid);
         fragment.setArguments(args);
@@ -113,7 +112,6 @@
     public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         prefs = getActivity().getSharedPreferences("coordinate", Context.MODE_PRIVATE);
-        destinationPager = new DestinationPager();
         String lastLatitude = prefs.getString("lastLatitude", "0");
         String lastLongitude = prefs.getString("lastLongitude", "0");
         if (!lastLatitude.equals("0") && !lastLongitude.equals("0")) {
@@ -184,13 +182,6 @@
                 showChangeLocDialog();
             }
         });
-        DestinationAdapter adapter = new DestinationAdapter(getContext(), destinationArrayList, getParentFragmentManager());
-        adapter.setOnDataChangedListener(() -> {
-            // Notify the parent fragment that the data has changed
-            if (getParentFragment() instanceof DestinationPager) {
-                ((DestinationPager) getParentFragment()).onDataChanged();
-            }
-        });
 
         return binding.getRoot();
     }
@@ -224,7 +215,6 @@
                     }
                 } catch (IOException e) {
                     e.printStackTrace();
-                    return "Error: Geocoder service not available";
                 }
                 return null;
             }
@@ -300,7 +290,6 @@
                                     }
                                 } catch (IOException e) {
                                     e.printStackTrace();
-                                    return "Error: Geocoder service not available";
                                 }
                                 return null;
                             }
@@ -308,7 +297,7 @@
                             @Override
                             protected void onPostExecute(String address) {
                                 if (address != null) {
-//                                    Log.d("ADDRESS IN DIALOG", address);
+                                    Log.d("ADDRESS IN DIALOG", address);
                                     addressString = address;
                                     locBinding.locTv.setText(addressString);
                                     autocompleteFragment.setText(addressString);
@@ -339,7 +328,7 @@
                 editor.putString("lastLongitude", String.valueOf(coordinate.longitude));
                 editor.apply();
             }
-//            Log.d(TAG, "COORDINATES: " + coordinate);
+            Log.d(TAG, "COORDINATES: " + coordinate);
         });
     }
 
@@ -458,7 +447,7 @@
             getDestinationDistance(destination);
         }
         if (destinationAdapter == null) {
-            destinationAdapter = new DestinationAdapter(getContext(), destinationArrayList, getParentFragmentManager());
+            destinationAdapter = new DestinationAdapter(getContext(), destinationArrayList);
             binding.destiRv.setAdapter(destinationAdapter);
         } else {
             destinationAdapter.notifyDataSetChanged();
@@ -487,7 +476,6 @@
                                 }
                             } catch (IOException e) {
                                 e.printStackTrace();
-                                return "Error: Geocoder service not available";
                             }
                             return null;
                         }
@@ -495,7 +483,7 @@
                         @Override
                         protected void onPostExecute(String address) {
                             if (address != null) {
-//                                Log.d("ADDRESS", address);
+                                Log.d("ADDRESS", address);
                                 binding.changeLoc.setText(address);
                             }
                         }
@@ -524,7 +512,6 @@
                                             }
                                         } catch (IOException e) {
                                             e.printStackTrace();
-                                            return "Error: Geocoder service not available";
                                         }
                                         return null;
                                     }
@@ -532,7 +519,7 @@
                                     @Override
                                     protected void onPostExecute(String address) {
                                         if (address != null) {
-//                                            Log.d("ADDRESS", address);
+                                            Log.d("ADDRESS", address);
                                             binding.changeLoc.setText(address);
                                         }
                                     }
@@ -541,7 +528,7 @@
                         });
                     }
                 }
-//                Log.d(TAG, "distance: " + destination.getDistance());
+                Log.d(TAG, "distance: " + destination.getDistance());
             }
 
             @Override
Index: app/src/main/res/layout/fragment_empty_itinerary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_empty_itinerary.xml b/app/src/main/res/layout/fragment_empty_itinerary.xml
new file mode 100644
--- /dev/null	(date 1684573590664)
+++ b/app/src/main/res/layout/fragment_empty_itinerary.xml	(date 1684573590664)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <data>
+
+    </data>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+<ImageView
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:layout_marginBottom="10dp"
+    android:src="@drawable/empty_iter"/>
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Itinerary is empty"
+            android:textSize="26dp"
+            android:textColor="@color/palette_1"
+            android:textStyle="bold"
+            android:fontFamily="@font/poppins_semibold"
+            android:layout_centerInParent="true"
+            android:gravity="center" />
+
+        <ImageButton
+            android:id="@+id/add_iter_empty"
+            android:layout_margin="15dp"
+            android:layout_alignParentBottom="true"
+            android:layout_alignParentEnd="true"
+            android:layout_width="48dp"
+            android:layout_height="48dp"
+            android:src="@drawable/add_desti_icon"
+            android:background="#0000" />
+    </RelativeLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/layout/list_itinerary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/itinerary_item_cardview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"16dp\"\n    android:layout_marginVertical=\"8dp\"\n    app:cardBackgroundColor=\"@color/ic_launcher_background\"\n    app:cardCornerRadius=\"8dp\"\n    app:cardElevation=\"4dp\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"150dp\"\n        android:orientation=\"horizontal\"\n        android:layout_gravity=\"center_horizontal\">\n\n        <LinearLayout\n            android:id=\"@+id/itinerary_bg\"\n            android:layout_width=\"130dp\"\n            android:layout_height=\"match_parent\"\n            android:gravity=\"center\"\n            android:background=\"@color/palette_4\"\n            android:orientation=\"vertical\">\n\n            <TextView\n                android:id=\"@+id/startTimeTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"1\"\n                android:background=\"@color/alfa\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:padding=\"8dp\"\n                android:shadowColor=\"#000000\"\n                android:shadowDx=\"2\"\n                android:shadowDy=\"4\"\n                android:shadowRadius=\"2\"\n                android:text=\"start\"\n                android:textAlignment=\"center\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/white\"\n                android:textStyle=\"bold\" />\n            <com.binus.pekalongancityguide.Misc.DottedLineView\n                android:id=\"@+id/dot_line\"\n                android:layout_width=\"3dp\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"1\"/>\n            <TextView\n                android:id=\"@+id/endTimeTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"1\"\n                android:background=\"@color/alfa\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:padding=\"8dp\"\n                android:shadowColor=\"#000000\"\n                android:shadowDx=\"2\"\n                android:shadowDy=\"4\"\n                android:shadowRadius=\"4\"\n                android:text=\"end\"\n                android:textAlignment=\"center\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/white\"\n                android:textStyle=\"bold\" />\n        </LinearLayout>\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\"\n            android:padding=\"8dp\">\n\n            <TextView\n                android:id=\"@+id/placeNameTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentStart=\"true\"\n                android:layout_marginStart=\"10dp\"\n                android:layout_marginEnd=\"10dp\"\n                android:layout_marginBottom=\"10dp\"\n                android:fontFamily=\"@font/poppins_semibold\"\n                android:maxLines=\"3\"\n                android:padding=\"8dp\"\n                android:text=\"Name\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/palette_2\"\n                android:textSize=\"18sp\"\n                android:textStyle=\"bold\" />\n\n            <ImageButton\n                android:id=\"@+id/iter_option\"\n                android:layout_width=\"48dp\"\n                android:layout_height=\"48dp\"\n                android:layout_alignParentEnd=\"true\"\n                android:layout_marginStart=\"10dp\"\n                android:layout_marginBottom=\"10dp\"\n                android:background=\"#0000\"\n                android:src=\"@drawable/more_button\" />\n\n            <com.google.android.material.divider.MaterialDivider\n                app:dividerColor=\"@color/palette_4\"\n                android:layout_marginHorizontal=\"8dp\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_above=\"@id/disdur_layout\" />\n\n            <LinearLayout\n                android:id=\"@+id/disdur_layout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:gravity=\"center\"\n                android:layout_alignParentBottom=\"true\"\n                android:padding=\"8dp\">\n\n                <TextView\n                    android:drawablePadding=\"5dp\"\n                    android:drawableTint=\"@color/palette_1\"\n                    android:drawableLeft=\"@drawable/distance\"\n                    android:id=\"@+id/distanceTextView\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:textSize=\"14dp\"\n                    android:fontFamily=\"@font/poppins_regular\"\n                    android:layout_marginStart=\"8dp\"\n                    android:textAppearance=\"?attr/textAppearanceListItem\"\n                    android:textColor=\"@color/palette_3\"\n                    android:text=\"distance\"\n                    android:layout_weight=\"1\" />\n\n                <TextView\n                    android:drawableLeft=\"@drawable/car_direction\"\n                    android:drawablePadding=\"5dp\"\n                    android:drawableTint=\"@color/palette_1\"\n                    android:id=\"@+id/durationTextView\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"duration\"\n                    android:fontFamily=\"@font/poppins_regular\"\n                    android:textSize=\"14dp\"\n                    android:layout_marginStart=\"8dp\"\n                    android:textAppearance=\"?attr/textAppearanceListItem\"\n                    android:textColor=\"@color/palette_3\"\n                    android:layout_weight=\"1\" />\n\n            </LinearLayout>\n        </RelativeLayout>\n    </LinearLayout>\n</androidx.cardview.widget.CardView>\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/list_itinerary.xml b/app/src/main/res/layout/list_itinerary.xml
--- a/app/src/main/res/layout/list_itinerary.xml	(revision 40e67521b11004b8be7014290a737a5c9e0a69c3)
+++ b/app/src/main/res/layout/list_itinerary.xml	(date 1684486773555)
@@ -65,61 +65,56 @@
                 android:textStyle="bold" />
         </LinearLayout>
 
-        <RelativeLayout
+        <LinearLayout
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:orientation="vertical"
             android:padding="8dp">
-
-            <TextView
-                android:id="@+id/placeNameTextView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_alignParentStart="true"
-                android:layout_marginStart="10dp"
-                android:layout_marginEnd="10dp"
-                android:layout_marginBottom="10dp"
-                android:fontFamily="@font/poppins_semibold"
-                android:maxLines="3"
-                android:padding="8dp"
-                android:text="Name"
-                android:textAppearance="?attr/textAppearanceListItem"
-                android:textColor="@color/palette_2"
-                android:textSize="18sp"
-                android:textStyle="bold" />
-
-            <ImageButton
-                android:id="@+id/iter_option"
-                android:layout_width="48dp"
-                android:layout_height="48dp"
-                android:layout_alignParentEnd="true"
-                android:layout_marginStart="10dp"
-                android:layout_marginBottom="10dp"
-                android:background="#0000"
-                android:src="@drawable/more_button" />
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal">
+                <TextView
+                    android:id="@+id/placeNameTextView"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:padding="8dp"
+                    android:textSize="16dp"
+                    android:maxLines="3"
+                    android:fontFamily="@font/poppins_semibold"
+                    android:text="Name"
+                    android:textAppearance="?attr/textAppearanceListItem"
+                    android:textColor="@color/palette_2"
+                    android:textStyle="bold"
+                    android:layout_weight="1" />
+                <ImageButton
+                    android:id="@+id/iter_option"
+                    android:layout_width="48dp"
+                    android:layout_height="48dp"
+                    android:background="#0000"
+                    android:src="@drawable/more_button" />
+            </LinearLayout>
 
             <com.google.android.material.divider.MaterialDivider
                 app:dividerColor="@color/palette_4"
-                android:layout_marginHorizontal="8dp"
+                android:layout_marginStart="8dp"
+                android:layout_marginEnd="8dp"
                 android:layout_marginTop="5dp"
                 android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_above="@id/disdur_layout" />
-
+                android:layout_height="wrap_content" />
             <LinearLayout
-                android:id="@+id/disdur_layout"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
+                android:orientation="horizontal"
                 android:gravity="center"
-                android:layout_alignParentBottom="true"
-                android:padding="8dp">
+                android:layout_weight="1">
 
                 <TextView
                     android:drawablePadding="5dp"
                     android:drawableTint="@color/palette_1"
                     android:drawableLeft="@drawable/distance"
                     android:id="@+id/distanceTextView"
-                    android:layout_width="wrap_content"
+                    android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:textSize="14dp"
                     android:fontFamily="@font/poppins_regular"
@@ -127,14 +122,14 @@
                     android:textAppearance="?attr/textAppearanceListItem"
                     android:textColor="@color/palette_3"
                     android:text="distance"
-                    android:layout_weight="1" />
+                    android:layout_weight="1"/>
 
                 <TextView
                     android:drawableLeft="@drawable/car_direction"
                     android:drawablePadding="5dp"
                     android:drawableTint="@color/palette_1"
                     android:id="@+id/durationTextView"
-                    android:layout_width="wrap_content"
+                    android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:text="duration"
                     android:fontFamily="@font/poppins_regular"
@@ -143,9 +138,8 @@
                     android:textAppearance="?attr/textAppearanceListItem"
                     android:textColor="@color/palette_3"
                     android:layout_weight="1" />
-
             </LinearLayout>
-        </RelativeLayout>
+        </LinearLayout>
     </LinearLayout>
 </androidx.cardview.widget.CardView>
 
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/EmptyItineraryFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/EmptyItineraryFragment.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/EmptyItineraryFragment.java
new file mode 100644
--- /dev/null	(date 1684573590735)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/EmptyItineraryFragment.java	(date 1684573590735)
@@ -0,0 +1,30 @@
+package com.binus.pekalongancityguide.Layout;
+
+import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.binus.pekalongancityguide.databinding.FragmentEmptyItineraryBinding;
+import com.binus.pekalongancityguide.databinding.FragmentItineraryBinding;
+
+public class EmptyItineraryFragment extends Fragment {
+    FragmentEmptyItineraryBinding binding;
+    public EmptyItineraryFragment() {}
+
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        binding = FragmentEmptyItineraryBinding.inflate(LayoutInflater.from(getContext()), container, false);
+        return binding.getRoot();
+    }
+}
\ No newline at end of file

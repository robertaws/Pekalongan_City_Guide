Index: app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.app.AlertDialog;\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.location.Location;\nimport android.os.Bundle;\nimport android.text.Editable;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.LinearLayout;\nimport android.widget.RelativeLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.cardview.widget.CardView;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.android.volley.Request;\nimport com.android.volley.RequestQueue;\nimport com.android.volley.toolbox.JsonObjectRequest;\nimport com.android.volley.toolbox.Volley;\nimport com.binus.pekalongancityguide.Adapter.IterAdapter;\nimport com.binus.pekalongancityguide.ItemTemplate.Destination;\nimport com.binus.pekalongancityguide.R;\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.target.SimpleTarget;\nimport com.bumptech.glide.request.transition.Transition;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\n\nimport static android.content.ContentValues.TAG;\nimport static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;\n\npublic class AddItinerary extends Fragment implements IterAdapter.OnItemLongClickListener {\n    private String categoryId, category, startDate, endDate, uid;\n    private double latitude, longitude;\n    public IterAdapter iterAdapter;\n    private RecyclerView iterRV;\n    private Button addIter;\n    private RelativeLayout selectLayout;\n    private TextView selectTv, dialogTitle;\n    private ImageButton selectCancel;\n    public ArrayList<Destination> destinationArrayList, selectedItems;\n    private View view;\n    private ItineraryPager itineraryPager;\n\n\n    public AddItinerary() {\n    }\n\n    public static AddItinerary newInstance(String categoryId, String categoryName, String categoryUid, String startDate, String endDate, Double latitude, Double longitude) {\n        AddItinerary fragment = new AddItinerary();\n        Bundle args = new Bundle();\n        args.putString(\"categoryId\", categoryId);\n        args.putString(\"category\", categoryName);\n        args.putString(\"uid\", categoryUid);\n        args.putString(\"startDate\", startDate);\n        args.putString(\"endDate\", endDate);\n        args.putDouble(\"latitude\", latitude);\n        args.putDouble(\"longitude\", longitude);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    public static AddItinerary getInstance() {\n        return new AddItinerary();\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            categoryId = getArguments().getString(\"categoryId\");\n            category = getArguments().getString(\"category\");\n            uid = getArguments().getString(\"uid\");\n            startDate = getArguments().getString(\"startDate\");\n            endDate = getArguments().getString(\"endDate\");\n            latitude = getArguments().getDouble(\"latitude\");\n            longitude = getArguments().getDouble(\"longitude\");\n\n            Log.d(TAG, \"newInstance: categoryId=\" + categoryId + \", startDate=\" + startDate + \", endDate=\" + endDate + \"\\n latitude, longitude\" + latitude + longitude);\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        view = inflater.inflate(R.layout.fragment_add_itinerary, container, false);\n        init();\n        checkSelect();\n        EditText iterSearch = view.findViewById(R.id.search_iter);\n        iterSearch.addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n                try {\n                    iterAdapter.getFilter().filter(s);\n                }catch (Exception e){\n                    Log.d(TAG,\"onTextChanged :\"+e.getMessage());\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n        if (category.equals(\"All\")) {\n            loadDestinations();\n        } else {\n            loadCategoriedDestination();\n        }\n        addIter.setOnClickListener(v -> showInputDialog());\n        selectCancel.setOnClickListener(v -> iterAdapter.exitSelectMode());\n        return view;\n    }\n\n    private void showInputDialog() {\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n\n        // Set the custom layout for the dialog\n        View view = LayoutInflater.from(getContext()).inflate(R.layout.dialog_input_details, null);\n        builder.setView(view);\n        // Get a reference to the container layout where the EditText fields will be added\n        LinearLayout containerLayout = view.findViewById(R.id.container_layout);\n        Button addBtn = view.findViewById(R.id.add_iter_button);\n        dialogTitle = view.findViewById(R.id.dialog_title);\n\n        // Get the selected items from the adapter\n        ArrayList<Destination> selectedItems = iterAdapter.getSelectedItems();\n        // Iterate through the selected items and add EditText fields for each item\n        for (int i = 0; i < selectedItems.size(); i++) {\n            View itemView = LayoutInflater.from(getContext()).inflate(R.layout.item_input_details, null);\n            dialogTitle.setText(\"Pick your first destination\");\n            Destination selectedItem = selectedItems.get(i);\n            CardView cardView = itemView.findViewById(R.id.add_item_cardview);\n            LinearLayout layoutBG = itemView.findViewById(R.id.layout_bg);\n            TextView placeText = itemView.findViewById(R.id.placeNameTextView);\n            TextView distanceTv = itemView.findViewById(R.id.distanceTextView);\n            TextView durationTv = itemView.findViewById(R.id.durationTextView);\n            placeText.setText(selectedItem.getTitle());\n            String distance = calculateDistance(latitude, longitude, selectedItem.getDesLat(), selectedItem.getDesLong());\n            calculateDuration(latitude, longitude, selectedItem.getDesLat(), selectedItem.getDesLong(), (durationText, durationTextView) -> {\n                durationTextView.setText(durationText);\n            }, durationTv);\n\n            distanceTv.setText(distance);\n\n            CardView.LayoutParams layoutParams = new CardView.LayoutParams(\n                    CardView.LayoutParams.MATCH_PARENT,\n                    CardView.LayoutParams.WRAP_CONTENT\n            );\n            layoutParams.setMargins(0, 10, 0, 10);\n            cardView.setLayoutParams(layoutParams);\n\n            containerLayout.addView(itemView);\n\n            // Load the image using Glide and set it as the background of layoutBG\n            loadImage(selectedItem, layoutBG);\n        }\n        AlertDialog dialog = builder.create();\n        addBtn.setOnClickListener(v -> {\n            // Iterate through the container layout and retrieve the input data for each item\n            for (int i = 0; i < containerLayout.getChildCount(); i++) {\n                View itemView = containerLayout.getChildAt(i);\n                // Handle the input data here, for example, save it or perform any necessary actions\n                // with the selected items and the entered details\n            }\n            dialog.dismiss();\n        });\n\n        dialog.show();\n    }\n\n    private void loadImage(Destination destination, LinearLayout layoutBG) {\n        String imageUrl = destination.getUrl();\n        Glide.with(layoutBG.getContext())\n                .asBitmap()\n                .load(imageUrl)\n                .placeholder(R.drawable.logo)\n                .into(new SimpleTarget<Bitmap>() {\n                    @Override\n                    public void onResourceReady(@NonNull Bitmap resource, @Nullable Transition<? super Bitmap> transition) {\n                        // Set the image bitmap as the background of layoutBG\n                        BitmapDrawable drawable = new BitmapDrawable(layoutBG.getResources(), resource);\n                        layoutBG.setBackground(drawable);\n                    }\n\n                    @Override\n                    public void onLoadFailed(@Nullable Drawable errorDrawable) {\n                        super.onLoadFailed(errorDrawable);\n                        Log.d(TAG, \"on Failure: failed to get file from URL\");\n                    }\n                });\n    }\n\n    private void init() {\n        iterRV = view.findViewById(R.id.recycler_view);\n        addIter = view.findViewById(R.id.add_iter_btn);\n        selectTv = view.findViewById(R.id.select_tv);\n        selectLayout = view.findViewById(R.id.select_layout);\n        selectCancel = view.findViewById(R.id.select_cancel);\n    }\n\n    private void loadDestinations() {\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                destinationArrayList.clear();\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                    Destination destination = dataSnapshot.getValue(Destination.class);\n                    destinationArrayList.add(destination);\n                    sortDestination(destinationArrayList);\n                }\n                if (iterAdapter == null) {\n                    initIterAdapter();\n                } else {\n                    iterAdapter.notifyDataSetChanged();\n                }\n            }\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n                Log.e(TAG, \"Error: \" + error.getMessage());\n            }\n        });\n    }\n\n    private void loadCategoriedDestination(){\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.orderByChild(\"categoryId\").equalTo(categoryId)\n                .addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        destinationArrayList.clear();\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                            Destination destination = dataSnapshot.getValue(Destination.class);\n                            destinationArrayList.add(destination);\n                            sortDestination(destinationArrayList);\n                        }\n                        if (iterAdapter == null) {\n                            initIterAdapter();\n                        } else {\n                            iterAdapter.notifyDataSetChanged();\n                        }\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n\n                    }\n                });\n    }\n\n    private void sortDestination(ArrayList<Destination> destinationArrayList) {\n        Collections.sort(destinationArrayList, (destination1, destination2) -> {\n            String title1 = destination1.getTitle().toLowerCase();\n            String title2 = destination2.getTitle().toLowerCase();\n            return title1.compareTo(title2);\n        });\n    }\n\n    public void checkSelect() {\n        if (iterAdapter != null) {\n            selectedItems = iterAdapter.getSelectedItems();\n            int counter;\n            if (selectedItems.size() < 1) {\n                selectLayout.setVisibility(View.GONE);\n                addIter.setVisibility(View.INVISIBLE);\n            } else if (selectedItems.size() == 1) {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" item selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            } else {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" items selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            }\n        } else {\n            addIter.setVisibility(View.INVISIBLE);\n            selectLayout.setVisibility(View.GONE);\n        }\n    }\n\n    public void initIterAdapter() {\n        iterAdapter = new IterAdapter(getContext(), destinationArrayList, this, this, itineraryPager); // Pass the reference to the fragment\n        iterRV.setAdapter(iterAdapter);\n    }\n\n    @Override\n    public void onItemLongClick(Destination destination) {\n        checkSelect();\n    }\n\n    private String calculateDistance(double lat1, double lon1, double lat2, double lon2) {\n        float[] results = new float[1];\n        Location location1 = new Location(\"\");\n        location1.setLatitude(lat1);\n        location1.setLongitude(lon1);\n        Location location2 = new Location(\"\");\n        location2.setLatitude(lat2);\n        location2.setLongitude(lon2);\n        Location.distanceBetween(location1.getLatitude(), location1.getLongitude(),\n                location2.getLatitude(), location2.getLongitude(), results);\n        return String.valueOf(results[0] / 1000);\n    }\n\n    private void calculateDuration(double lat1, double lon1, double lat2, double lon2, AddItinerary.DurationCallback callback, TextView durationTv) {\n        String url = \"https://maps.googleapis.com/maps/api/directions/json?origin=\" + lat1 + \",\" + lon1 + \"&destination=\" + lat2 + \",\" + lon2 + \"&key=\" + MAPS_API_KEY;\n\n        if (isAdded() && getContext() != null) {\n            RequestQueue queue = Volley.newRequestQueue(getContext().getApplicationContext());\n            JsonObjectRequest request = new JsonObjectRequest(Request.Method.GET, url, null, response -> {\n                try {\n                    JSONArray routes = response.getJSONArray(\"routes\");\n                    if (routes.length() > 0) {\n                        JSONObject route = routes.getJSONObject(0);\n//                        Log.d(TAG, \"route: \" + route);\n                        JSONArray legs = route.getJSONArray(\"legs\");\n//                        Log.d(TAG, \"legs: \" + legs);\n                        JSONObject leg = legs.getJSONObject(0);\n//                        Log.d(TAG, \"leg: \" + leg);\n                        JSONObject duration = leg.getJSONObject(\"duration\");\n                        String durationText = duration.getString(\"text\");\n                        Log.d(TAG, \"Duration: \" + durationText);\n                        callback.onDurationReceived(durationText, durationTv);\n                    } else {\n                        Log.e(TAG, \"No routes found\");\n                        callback.onDurationReceived(\"No routes found\", durationTv);\n                    }\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }, error -> {\n                Log.e(TAG, \"Error calculating travel duration: \" + error.getMessage());\n                callback.onDurationReceived(\"Error calculating travel duration\", durationTv);\n            });\n            queue.add(request);\n        }\n    }\n\n    public interface DurationCallback {\n        void onDurationReceived(String durationText, TextView durationTv);\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(revision d08e5272b1df24d754b19478d525838c6f936871)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(date 1684405483335)
@@ -54,6 +54,7 @@
 public class AddItinerary extends Fragment implements IterAdapter.OnItemLongClickListener {
     private String categoryId, category, startDate, endDate, uid;
     private double latitude, longitude;
+    private static final String apiKey = MAPS_API_KEY;
     public IterAdapter iterAdapter;
     private RecyclerView iterRV;
     private Button addIter;
@@ -95,10 +96,10 @@
             uid = getArguments().getString("uid");
             startDate = getArguments().getString("startDate");
             endDate = getArguments().getString("endDate");
-            latitude = getArguments().getDouble("latitude");
-            longitude = getArguments().getDouble("longitude");
+            latitude = getArguments().getDouble("latitude", 0.0);
+            longitude = getArguments().getDouble("longitude", 0.0);
 
-            Log.d(TAG, "newInstance: categoryId=" + categoryId + ", startDate=" + startDate + ", endDate=" + endDate + "\n latitude, longitude" + latitude + longitude);
+            Log.d(TAG, "posisi awal :" + latitude + longitude);
         }
     }
 
@@ -195,7 +196,55 @@
 
         dialog.show();
     }
+    private String calculateDistance(double lat1, double lon1, double lat2, double lon2) {
+        float[] results = new float[1];
+        Location location1 = new Location("");
+        location1.setLatitude(lat1);
+        location1.setLongitude(lon1);
+        Location location2 = new Location("");
+        location2.setLatitude(lat2);
+        location2.setLongitude(lon2);
+        Location.distanceBetween(location1.getLatitude(), location1.getLongitude(),
+                location2.getLatitude(), location2.getLongitude(), results);
+        return String.valueOf(results[0] / 1000);
+    }
 
+    private void calculateDuration(double lat1, double lon1, double lat2, double lon2, AddItinerary.DurationCallback callback, TextView durationTv) {
+        String url = "https://maps.googleapis.com/maps/api/directions/json?origin=" + lat1 + "," + lon1 + "&destination=" + lat2 + "," + lon2 + "&key=" + apiKey;
+
+        if (isAdded() && getContext() != null) {
+            RequestQueue queue = Volley.newRequestQueue(getContext().getApplicationContext());
+            JsonObjectRequest request = new JsonObjectRequest(Request.Method.GET, url, null, response -> {
+                try {
+                    JSONArray routes = response.getJSONArray("routes");
+                    if (routes.length() > 0) {
+                        JSONObject route = routes.getJSONObject(0);
+//                        Log.d(TAG, "route: " + route);
+                        JSONArray legs = route.getJSONArray("legs");
+//                        Log.d(TAG, "legs: " + legs);
+                        JSONObject leg = legs.getJSONObject(0);
+//                        Log.d(TAG, "leg: " + leg);
+                        JSONObject duration = leg.getJSONObject("duration");
+                        String durationText = duration.getString("text");
+                        Log.d(TAG, "Duration: " + durationText);
+                        callback.onDurationReceived(durationText, durationTv);
+                    } else {
+                        Log.e(TAG, "No routes found");
+                        callback.onDurationReceived("No routes found", durationTv);
+                    }
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+            }, error -> {
+                Log.e(TAG, "Error calculating travel duration: " + error.getMessage());
+                callback.onDurationReceived("Error calculating travel duration", durationTv);
+            });
+            queue.add(request);
+        }
+    }
+    public interface DurationCallback {
+        void onDurationReceived(String durationText, TextView durationTv);
+    }
     private void loadImage(Destination destination, LinearLayout layoutBG) {
         String imageUrl = destination.getUrl();
         Glide.with(layoutBG.getContext())
@@ -324,55 +373,6 @@
         checkSelect();
     }
 
-    private String calculateDistance(double lat1, double lon1, double lat2, double lon2) {
-        float[] results = new float[1];
-        Location location1 = new Location("");
-        location1.setLatitude(lat1);
-        location1.setLongitude(lon1);
-        Location location2 = new Location("");
-        location2.setLatitude(lat2);
-        location2.setLongitude(lon2);
-        Location.distanceBetween(location1.getLatitude(), location1.getLongitude(),
-                location2.getLatitude(), location2.getLongitude(), results);
-        return String.valueOf(results[0] / 1000);
-    }
-
-    private void calculateDuration(double lat1, double lon1, double lat2, double lon2, AddItinerary.DurationCallback callback, TextView durationTv) {
-        String url = "https://maps.googleapis.com/maps/api/directions/json?origin=" + lat1 + "," + lon1 + "&destination=" + lat2 + "," + lon2 + "&key=" + MAPS_API_KEY;
 
-        if (isAdded() && getContext() != null) {
-            RequestQueue queue = Volley.newRequestQueue(getContext().getApplicationContext());
-            JsonObjectRequest request = new JsonObjectRequest(Request.Method.GET, url, null, response -> {
-                try {
-                    JSONArray routes = response.getJSONArray("routes");
-                    if (routes.length() > 0) {
-                        JSONObject route = routes.getJSONObject(0);
-//                        Log.d(TAG, "route: " + route);
-                        JSONArray legs = route.getJSONArray("legs");
-//                        Log.d(TAG, "legs: " + legs);
-                        JSONObject leg = legs.getJSONObject(0);
-//                        Log.d(TAG, "leg: " + leg);
-                        JSONObject duration = leg.getJSONObject("duration");
-                        String durationText = duration.getString("text");
-                        Log.d(TAG, "Duration: " + durationText);
-                        callback.onDurationReceived(durationText, durationTv);
-                    } else {
-                        Log.e(TAG, "No routes found");
-                        callback.onDurationReceived("No routes found", durationTv);
-                    }
-                } catch (JSONException e) {
-                    e.printStackTrace();
-                }
-            }, error -> {
-                Log.e(TAG, "Error calculating travel duration: " + error.getMessage());
-                callback.onDurationReceived("Error calculating travel duration", durationTv);
-            });
-            queue.add(request);
-        }
-    }
-
-    public interface DurationCallback {
-        void onDurationReceived(String durationText, TextView durationTv);
-    }
 
 }
\ No newline at end of file
Index: app/src/main/res/layout/list_itinerary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/itinerary_item_cardview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"16dp\"\n    android:layout_marginVertical=\"8dp\"\n    app:cardBackgroundColor=\"@color/ic_launcher_background\"\n    app:cardCornerRadius=\"8dp\"\n    app:cardElevation=\"4dp\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"150dp\"\n        android:orientation=\"horizontal\"\n        android:layout_gravity=\"center_horizontal\">\n\n        <LinearLayout\n            android:id=\"@+id/itinerary_bg\"\n            android:layout_width=\"130dp\"\n            android:layout_height=\"match_parent\"\n            android:gravity=\"center\"\n            android:background=\"@color/palette_4\"\n            android:orientation=\"vertical\">\n\n            <TextView\n                android:id=\"@+id/startTimeTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"1\"\n                android:background=\"@color/alfa\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:padding=\"8dp\"\n                android:shadowColor=\"#000000\"\n                android:shadowDx=\"2\"\n                android:shadowDy=\"4\"\n                android:shadowRadius=\"2\"\n                android:text=\"start\"\n                android:textAlignment=\"center\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/white\"\n                android:textStyle=\"bold\" />\n            <com.binus.pekalongancityguide.Misc.DottedLineView\n                android:id=\"@+id/dot_line\"\n                android:layout_width=\"3dp\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"1\"/>\n            <TextView\n                android:id=\"@+id/endTimeTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"1\"\n                android:background=\"@color/alfa\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:padding=\"8dp\"\n                android:shadowColor=\"#000000\"\n                android:shadowDx=\"2\"\n                android:shadowDy=\"4\"\n                android:shadowRadius=\"4\"\n                android:text=\"end\"\n                android:textAlignment=\"center\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/white\"\n                android:textStyle=\"bold\" />\n        </LinearLayout>\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\"\n            android:padding=\"8dp\">\n\n            <TextView\n                android:id=\"@+id/placeNameTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentStart=\"true\"\n                android:layout_marginStart=\"10dp\"\n                android:layout_marginEnd=\"10dp\"\n                android:layout_marginBottom=\"10dp\"\n                android:fontFamily=\"@font/poppins_semibold\"\n                android:maxLines=\"3\"\n                android:padding=\"8dp\"\n                android:text=\"Name\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/palette_2\"\n                android:textSize=\"18sp\"\n                android:textStyle=\"bold\" />\n\n            <ImageButton\n                android:id=\"@+id/iter_option\"\n                android:layout_width=\"48dp\"\n                android:layout_height=\"48dp\"\n                android:layout_alignParentEnd=\"true\"\n                android:layout_marginStart=\"10dp\"\n                android:layout_marginBottom=\"10dp\"\n                android:background=\"#0000\"\n                android:src=\"@drawable/more_button\" />\n\n            <com.google.android.material.divider.MaterialDivider\n                app:dividerColor=\"@color/palette_4\"\n                android:layout_marginHorizontal=\"8dp\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_above=\"@id/disdur_layout\" />\n\n            <LinearLayout\n                android:id=\"@+id/disdur_layout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:gravity=\"center\"\n                android:layout_alignParentBottom=\"true\"\n                android:padding=\"8dp\">\n\n                <TextView\n                    android:drawablePadding=\"5dp\"\n                    android:drawableTint=\"@color/palette_1\"\n                    android:drawableLeft=\"@drawable/distance\"\n                    android:id=\"@+id/distanceTextView\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:textSize=\"14dp\"\n                    android:fontFamily=\"@font/poppins_regular\"\n                    android:layout_marginStart=\"8dp\"\n                    android:textAppearance=\"?attr/textAppearanceListItem\"\n                    android:textColor=\"@color/palette_3\"\n                    android:text=\"distance\"\n                    android:layout_weight=\"1\" />\n\n                <TextView\n                    android:drawableLeft=\"@drawable/car_direction\"\n                    android:drawablePadding=\"5dp\"\n                    android:drawableTint=\"@color/palette_1\"\n                    android:id=\"@+id/durationTextView\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"duration\"\n                    android:fontFamily=\"@font/poppins_regular\"\n                    android:textSize=\"14dp\"\n                    android:layout_marginStart=\"8dp\"\n                    android:textAppearance=\"?attr/textAppearanceListItem\"\n                    android:textColor=\"@color/palette_3\"\n                    android:layout_weight=\"1\" />\n\n            </LinearLayout>\n        </RelativeLayout>\n    </LinearLayout>\n</androidx.cardview.widget.CardView>\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/list_itinerary.xml b/app/src/main/res/layout/list_itinerary.xml
--- a/app/src/main/res/layout/list_itinerary.xml	(revision d08e5272b1df24d754b19478d525838c6f936871)
+++ b/app/src/main/res/layout/list_itinerary.xml	(date 1684403300407)
@@ -65,61 +65,56 @@
                 android:textStyle="bold" />
         </LinearLayout>
 
-        <RelativeLayout
+        <LinearLayout
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:orientation="vertical"
             android:padding="8dp">
-
-            <TextView
-                android:id="@+id/placeNameTextView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_alignParentStart="true"
-                android:layout_marginStart="10dp"
-                android:layout_marginEnd="10dp"
-                android:layout_marginBottom="10dp"
-                android:fontFamily="@font/poppins_semibold"
-                android:maxLines="3"
-                android:padding="8dp"
-                android:text="Name"
-                android:textAppearance="?attr/textAppearanceListItem"
-                android:textColor="@color/palette_2"
-                android:textSize="18sp"
-                android:textStyle="bold" />
-
-            <ImageButton
-                android:id="@+id/iter_option"
-                android:layout_width="48dp"
-                android:layout_height="48dp"
-                android:layout_alignParentEnd="true"
-                android:layout_marginStart="10dp"
-                android:layout_marginBottom="10dp"
-                android:background="#0000"
-                android:src="@drawable/more_button" />
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal">
+                <TextView
+                    android:id="@+id/placeNameTextView"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:padding="8dp"
+                    android:textSize="16dp"
+                    android:maxLines="3"
+                    android:fontFamily="@font/poppins_semibold"
+                    android:text="Name"
+                    android:textAppearance="?attr/textAppearanceListItem"
+                    android:textColor="@color/palette_2"
+                    android:textStyle="bold"
+                    android:layout_weight="1" />
+                <ImageButton
+                    android:id="@+id/iter_option"
+                    android:layout_width="48dp"
+                    android:layout_height="48dp"
+                    android:background="#0000"
+                    android:src="@drawable/more_button" />
+            </LinearLayout>
 
             <com.google.android.material.divider.MaterialDivider
                 app:dividerColor="@color/palette_4"
-                android:layout_marginHorizontal="8dp"
+                android:layout_marginStart="8dp"
+                android:layout_marginEnd="8dp"
                 android:layout_marginTop="5dp"
                 android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_above="@id/disdur_layout" />
-
+                android:layout_height="wrap_content" />
             <LinearLayout
-                android:id="@+id/disdur_layout"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
+                android:orientation="horizontal"
                 android:gravity="center"
-                android:layout_alignParentBottom="true"
-                android:padding="8dp">
+                android:layout_weight="1">
 
                 <TextView
                     android:drawablePadding="5dp"
                     android:drawableTint="@color/palette_1"
                     android:drawableLeft="@drawable/distance"
                     android:id="@+id/distanceTextView"
-                    android:layout_width="wrap_content"
+                    android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:textSize="14dp"
                     android:fontFamily="@font/poppins_regular"
@@ -127,14 +122,14 @@
                     android:textAppearance="?attr/textAppearanceListItem"
                     android:textColor="@color/palette_3"
                     android:text="distance"
-                    android:layout_weight="1" />
+                    android:layout_weight="1"/>
 
                 <TextView
                     android:drawableLeft="@drawable/car_direction"
                     android:drawablePadding="5dp"
                     android:drawableTint="@color/palette_1"
                     android:id="@+id/durationTextView"
-                    android:layout_width="wrap_content"
+                    android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:text="duration"
                     android:fontFamily="@font/poppins_regular"
@@ -143,9 +138,8 @@
                     android:textAppearance="?attr/textAppearanceListItem"
                     android:textColor="@color/palette_3"
                     android:layout_weight="1" />
-
             </LinearLayout>
-        </RelativeLayout>
+        </LinearLayout>
     </LinearLayout>
 </androidx.cardview.widget.CardView>
 

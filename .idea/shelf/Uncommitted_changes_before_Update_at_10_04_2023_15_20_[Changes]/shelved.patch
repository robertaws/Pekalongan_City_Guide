Index: app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>    package com.binus.pekalongancityguide.Layout;\r\n\r\n    import android.os.Bundle;\r\n    import android.util.Log;\r\n\r\n    import androidx.annotation.NonNull;\r\n    import androidx.appcompat.app.AppCompatActivity;\r\n\r\n    import com.binus.pekalongancityguide.Adapter.ItineraryAdapter;\r\n    import com.binus.pekalongancityguide.ItemTemplate.Itinerary;\r\n    import com.binus.pekalongancityguide.databinding.ActivityItineraryListBinding;\r\n    import com.google.android.libraries.places.api.Places;\r\n    import com.google.android.libraries.places.api.model.Place;\r\n    import com.google.android.libraries.places.api.net.FetchPlaceRequest;\r\n    import com.google.android.libraries.places.api.net.PlacesClient;\r\n    import com.google.firebase.auth.FirebaseAuth;\r\n    import com.google.firebase.database.DataSnapshot;\r\n    import com.google.firebase.database.DatabaseError;\r\n    import com.google.firebase.database.DatabaseReference;\r\n    import com.google.firebase.database.FirebaseDatabase;\r\n    import com.google.firebase.database.Query;\r\n    import com.google.firebase.database.ValueEventListener;\r\n\r\n    import java.util.ArrayList;\r\n    import java.util.Collections;\r\n    import java.util.List;\r\n\r\n    import static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;\r\n\r\n    public class ItineraryList extends AppCompatActivity {\r\n        private static final String TAG = \"ITER_TAG\";\r\n        private final List<Itinerary> itineraryList = new ArrayList<>();\r\n        public ActivityItineraryListBinding binding;\r\n        ItineraryAdapter adapter;\r\n        private FirebaseAuth firebaseAuth;\r\n\r\n        @Override\r\n        protected void onCreate(Bundle savedInstanceState) {\r\n            super.onCreate(savedInstanceState);\r\n            binding = ActivityItineraryListBinding.inflate(getLayoutInflater());\r\n            Places.initialize(getApplicationContext(), MAPS_API_KEY);\r\n            setContentView(binding.getRoot());\r\n            firebaseAuth = FirebaseAuth.getInstance();\r\n            adapter = new ItineraryAdapter(itineraryList);\r\n            binding.backtoprofile.setOnClickListener(v -> {\r\n                onBackPressed();\r\n            });\r\n            loadItinerary();\r\n            binding.itineraryRv.setAdapter(adapter);\r\n        }\r\n\r\n        private void loadItinerary() {\r\n            FirebaseDatabase database = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\");\r\n            DatabaseReference userRef = database.getReference(\"Users\").child(firebaseAuth.getUid());\r\n            Query itineraryQuery = userRef.child(\"itinerary\");\r\n            itineraryQuery.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    List<Itinerary> itineraryList = new ArrayList<>();\r\n                    for (DataSnapshot itinerarySnapshot : dataSnapshot.getChildren()) {\r\n                        String date = itinerarySnapshot.child(\"date\").getValue(String.class);\r\n                        Log.d(TAG, \"Date: \" + date);\r\n                        String startTime = itinerarySnapshot.child(\"startTime\").getValue(String.class);\r\n                        Log.d(TAG, \"Start Time: \" + startTime);\r\n                        String endTime = itinerarySnapshot.child(\"endTime\").getValue(String.class);\r\n                        Log.d(TAG, \"End Time: \" + endTime);\r\n                        String placeId = itinerarySnapshot.child(\"placeId\").getValue(String.class);\r\n                        Log.d(TAG, \"Place ID: \" + placeId);\r\n                        PlacesClient placesClient = Places.createClient(ItineraryList.this);\r\n                        List<Place.Field> placeFields = Collections.singletonList(Place.Field.NAME);\r\n                        if (placeId != null && !placeId.isEmpty()) {\r\n                            FetchPlaceRequest request = FetchPlaceRequest.builder(placeId, placeFields).build();\r\n                            placesClient.fetchPlace(request).addOnSuccessListener((response) -> {\r\n                                Place place = response.getPlace();\r\n                                String placeName = place.getName();\r\n                                itineraryList.add(new Itinerary(date, startTime, endTime, placeName));\r\n                                sortItineraryList(itineraryList);\r\n                                // Set the sorted itineraryList to the adapter\r\n                                ItineraryAdapter adapter = new ItineraryAdapter(itineraryList);\r\n                                binding.itineraryRv.setAdapter(adapter);\r\n                            }).addOnFailureListener((e) -> {\r\n                                Log.e(TAG, \"Error fetching place details: \" + e.getMessage());\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    Log.e(TAG, \"Error fetching itinerary data: \" + databaseError.getMessage());\r\n                }\r\n            });\r\n        }\r\n\r\n        private void sortItineraryList(List<Itinerary> itineraryList) {\r\n            Collections.sort(itineraryList, (itinerary1, itinerary2) -> {\r\n                String date1 = itinerary1.getDate();\r\n                String date2 = itinerary2.getDate();\r\n                int dateComparison = date1.compareTo(date2);\r\n                if (dateComparison != 0) {\r\n                    return dateComparison;\r\n                } else {\r\n                    String startTime1 = itinerary1.getStartTime();\r\n                    String startTime2 = itinerary2.getStartTime();\r\n                    return startTime1.compareTo(startTime2);\r\n                }\r\n            });\r\n        }\r\n    }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryList.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryList.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryList.java	(revision e342e50b8592d937474ac4fc93dc1562d271bded)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryList.java	(date 1681112808108)
@@ -21,9 +21,15 @@
     import com.google.firebase.database.Query;
     import com.google.firebase.database.ValueEventListener;
 
+    import java.text.DateFormat;
+    import java.text.ParseException;
+    import java.text.SimpleDateFormat;
     import java.util.ArrayList;
     import java.util.Collections;
+    import java.util.Comparator;
+    import java.util.Date;
     import java.util.List;
+    import java.util.Locale;
 
     import static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;
 
@@ -31,7 +37,6 @@
         private static final String TAG = "ITER_TAG";
         private final List<Itinerary> itineraryList = new ArrayList<>();
         public ActivityItineraryListBinding binding;
-        ItineraryAdapter adapter;
         private FirebaseAuth firebaseAuth;
 
         @Override
@@ -41,12 +46,10 @@
             Places.initialize(getApplicationContext(), MAPS_API_KEY);
             setContentView(binding.getRoot());
             firebaseAuth = FirebaseAuth.getInstance();
-            adapter = new ItineraryAdapter(itineraryList);
             binding.backtoprofile.setOnClickListener(v -> {
                 onBackPressed();
             });
             loadItinerary();
-            binding.itineraryRv.setAdapter(adapter);
         }
 
         private void loadItinerary() {
@@ -74,8 +77,6 @@
                                 Place place = response.getPlace();
                                 String placeName = place.getName();
                                 itineraryList.add(new Itinerary(date, startTime, endTime, placeName));
-                                sortItineraryList(itineraryList);
-                                // Set the sorted itineraryList to the adapter
                                 ItineraryAdapter adapter = new ItineraryAdapter(itineraryList);
                                 binding.itineraryRv.setAdapter(adapter);
                             }).addOnFailureListener((e) -> {
@@ -83,6 +84,28 @@
                             });
                         }
                     }
+                    // Sort the itineraryList here, outside of the loop
+                    Collections.sort(itineraryList, new Comparator<Itinerary>() {
+                        DateFormat format = new SimpleDateFormat("d MMMM yyyy", Locale.getDefault());
+                        @Override
+                        public int compare(Itinerary o1, Itinerary o2) {
+                            try {
+                                Date date1 = format.parse(o1.getDate());
+                                Date date2 = format.parse(o2.getDate());
+                                // Compare months first
+                                int monthComparison = Integer.compare(date1.getMonth(), date2.getMonth());
+                                if (monthComparison != 0) {
+                                    return monthComparison;
+                                } else {
+                                    // If the months are the same, compare days
+                                    return Integer.compare(date1.getDate(), date2.getDate());
+                                }
+                            } catch (ParseException e) {
+                                e.printStackTrace();
+                                return 0;
+                            }
+                        }
+                    });
                 }
 
                 @Override
@@ -92,18 +115,4 @@
             });
         }
 
-        private void sortItineraryList(List<Itinerary> itineraryList) {
-            Collections.sort(itineraryList, (itinerary1, itinerary2) -> {
-                String date1 = itinerary1.getDate();
-                String date2 = itinerary2.getDate();
-                int dateComparison = date1.compareTo(date2);
-                if (dateComparison != 0) {
-                    return dateComparison;
-                } else {
-                    String startTime1 = itinerary1.getStartTime();
-                    String startTime2 = itinerary2.getStartTime();
-                    return startTime1.compareTo(startTime2);
-                }
-            });
-        }
     }
Index: app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Adapter;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.binus.pekalongancityguide.ItemTemplate.Itinerary;\r\nimport com.binus.pekalongancityguide.R;\r\n\r\nimport java.util.List;\r\n\r\npublic class ItineraryAdapter extends RecyclerView.Adapter<ItineraryAdapter.ItineraryViewHolder> {\r\n    private final List<Itinerary> itineraryList;\r\n\r\n    public ItineraryAdapter(List<Itinerary> itineraryList) {\r\n        this.itineraryList = itineraryList;\r\n    }\r\n\r\n    @Override\r\n    public ItineraryViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_itinerary, parent, false);\r\n        return new ItineraryViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(ItineraryViewHolder holder, int position) {\r\n        Itinerary itinerary = itineraryList.get(position);\r\n        holder.dateTextView.setText(itinerary.getDate());\r\n        holder.startTimeTextView.setText(itinerary.getStartTime());\r\n        holder.endTimeTextView.setText(itinerary.getEndTime());\r\n        //TODO: Set other itinerary data to view holder\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return itineraryList.size();\r\n    }\r\n\r\n    public static class ItineraryViewHolder extends RecyclerView.ViewHolder {\r\n        public TextView dateTextView;\r\n        public TextView startTimeTextView;\r\n        public TextView endTimeTextView;\r\n        //TODO: Add other views for itinerary data\r\n\r\n        public ItineraryViewHolder(View itemView) {\r\n            super(itemView);\r\n            dateTextView = itemView.findViewById(R.id.dateTextView);\r\n            startTimeTextView = itemView.findViewById(R.id.startTimeTextView);\r\n            endTimeTextView = itemView.findViewById(R.id.endTimeTextView);\r\n            //TODO: Initialize other views for itinerary data\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java b/app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java	(revision e342e50b8592d937474ac4fc93dc1562d271bded)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java	(date 1681104964533)
@@ -10,7 +10,11 @@
 import com.binus.pekalongancityguide.ItemTemplate.Itinerary;
 import com.binus.pekalongancityguide.R;
 
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 
 public class ItineraryAdapter extends RecyclerView.Adapter<ItineraryAdapter.ItineraryViewHolder> {
     private final List<Itinerary> itineraryList;
@@ -28,7 +32,17 @@
     @Override
     public void onBindViewHolder(ItineraryViewHolder holder, int position) {
         Itinerary itinerary = itineraryList.get(position);
-        holder.dateTextView.setText(itinerary.getDate());
+        SimpleDateFormat inputFormat = new SimpleDateFormat("EEEE, d MMMM yyyy", Locale.US);
+        SimpleDateFormat outputFormat = new SimpleDateFormat("d MMMM yyyy", Locale.US);
+        Date date = null;
+        try {
+            date = inputFormat.parse(itinerary.getDate());
+        } catch (ParseException e) {
+            e.printStackTrace();
+        }
+        String formattedDate = outputFormat.format(date);
+        holder.dateTextView.setText(formattedDate);
+
         holder.startTimeTextView.setText(itinerary.getStartTime());
         holder.endTimeTextView.setText(itinerary.getEndTime());
         //TODO: Set other itinerary data to view holder
@@ -43,14 +57,12 @@
         public TextView dateTextView;
         public TextView startTimeTextView;
         public TextView endTimeTextView;
-        //TODO: Add other views for itinerary data
 
         public ItineraryViewHolder(View itemView) {
             super(itemView);
             dateTextView = itemView.findViewById(R.id.dateTextView);
             startTimeTextView = itemView.findViewById(R.id.startTimeTextView);
             endTimeTextView = itemView.findViewById(R.id.endTimeTextView);
-            //TODO: Initialize other views for itinerary data
         }
     }
 }
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetails.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.binus.pekalongancityguide.Adapter.OpeningHoursAdapter;\r\nimport com.binus.pekalongancityguide.Adapter.ReviewAdapter;\r\nimport com.binus.pekalongancityguide.ItemTemplate.OpeningHours;\r\nimport com.binus.pekalongancityguide.ItemTemplate.Review;\r\nimport com.binus.pekalongancityguide.Misc.ImageFullscreen;\r\nimport com.binus.pekalongancityguide.Misc.MyApplication;\r\nimport com.binus.pekalongancityguide.R;\r\nimport com.binus.pekalongancityguide.databinding.ActivityDestinationDetailsBinding;\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.material.timepicker.MaterialTimePicker;\r\nimport com.google.android.material.timepicker.TimeFormat;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\npublic class DestinationDetails extends AppCompatActivity {\r\n    String imageUrl;\r\n    private ActivityDestinationDetailsBinding binding;\r\n    String destiId;\r\n    boolean inFavorite = false;\r\n    FirebaseAuth firebaseAuth;\r\n    private static final String TAG = \"REVIEW_TAG\";\r\n    private ProgressDialog progressDialog;\r\n    int startHour,startMinute,startHour1,startMinute1\r\n            ,endHour,endMinute,endHour1,endMinute1\r\n            ,dayDate,monthDate,yearDate,dayDate1,monthDate1,yearDate1;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityDestinationDetailsBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        Intent intent = getIntent();\r\n        destiId = intent.getStringExtra(\"destiId\");\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        if (firebaseAuth.getCurrentUser() != null) {\r\n            checkFavorite();\r\n        }\r\n        loadDetails();\r\n        binding.backDesti.setOnClickListener(v -> onBackPressed());\r\n        binding.destiImage.setOnClickListener(v -> {\r\n            Intent intent1 = new Intent(this, ImageFullscreen.class);\r\n            intent1.putExtra(\"fullImg\", imageUrl);\r\n            startActivity(intent1);\r\n        });\r\n        binding.saveItem.setOnClickListener(v -> {\r\n            if (firebaseAuth.getCurrentUser() == null) {\r\n                Toast.makeText(DestinationDetails.this, \"You are not logged in!\", Toast.LENGTH_SHORT).show();\r\n            } else {\r\n                if (inFavorite) {\r\n                    MyApplication.removeFavorite(DestinationDetails.this, destiId);\r\n                } else {\r\n                    MyApplication.addtoFavorite(DestinationDetails.this, destiId);\r\n                }\r\n            }\r\n        });\r\n        binding.addItenary.setOnClickListener(v ->{\r\n            showAddItineraryDialog();\r\n        });\r\n    }\r\n\r\n    private void showAddItineraryDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        View view = LayoutInflater.from(this).inflate(R.layout.dialog_add_to_itinerary, null);\r\n        builder.setView(view);\r\n        EditText dateEt,startEt,endEt;\r\n        ImageButton dateBtn,startBtn,endBtn;\r\n        Button addItinerary;\r\n        dateEt = view.findViewById(R.id.date_et);\r\n        startEt = view.findViewById(R.id.starttime_et);\r\n        endEt = view.findViewById(R.id.endtime_et);\r\n        dateBtn = view.findViewById(R.id.datepicker_btn);\r\n        startBtn = view.findViewById(R.id.startpicker_btn);\r\n        endBtn = view.findViewById(R.id.endpicker_btn);\r\n        addItinerary = view.findViewById(R.id.additinerary_btn);\r\n\r\n        startBtn.setOnClickListener(v -> {\r\n            Calendar calendar = Calendar.getInstance();\r\n            startHour = calendar.get(Calendar.HOUR_OF_DAY);\r\n            startMinute = calendar.get(Calendar.MINUTE);\r\n            MaterialTimePicker.Builder mybuilder = new MaterialTimePicker.Builder()\r\n                    .setTimeFormat(TimeFormat.CLOCK_12H)\r\n                    .setHour(startHour)\r\n                    .setMinute(startMinute)\r\n                    .setTitleText(\"Select start time\")\r\n                    .setInputMode(MaterialTimePicker.INPUT_MODE_CLOCK);\r\n            MaterialTimePicker dialog = mybuilder.build();\r\n            dialog.addOnPositiveButtonClickListener(timeview -> {\r\n                startHour = dialog.getHour();\r\n                startMinute = dialog.getMinute();\r\n                if (startHour <= 12) {\r\n                    startEt.setText(String.format(Locale.getDefault(), \"%d:%02d am\", startHour, startMinute));\r\n                } else {\r\n                    startEt.setText(String.format(Locale.getDefault(), \"%d:%02d pm\", startHour - 12, startMinute));\r\n                }\r\n            });\r\n            dialog.show(getSupportFragmentManager(), \"startTimePicker\");\r\n        });\r\n        startEt.setOnClickListener(v -> {\r\n            Calendar calendar = Calendar.getInstance();\r\n            startHour1 = calendar.get(Calendar.HOUR_OF_DAY);\r\n            startMinute1 = calendar.get(Calendar.MINUTE);\r\n            MaterialTimePicker.Builder mybuilder = new MaterialTimePicker.Builder()\r\n                    .setTimeFormat(TimeFormat.CLOCK_12H)\r\n                    .setHour(startHour1)\r\n                    .setMinute(startMinute1)\r\n                    .setTitleText(\"Select start time\")\r\n                    .setInputMode(MaterialTimePicker.INPUT_MODE_CLOCK);\r\n            MaterialTimePicker dialog = mybuilder.build();\r\n            dialog.addOnPositiveButtonClickListener(timeview -> {\r\n                startHour1 = dialog.getHour();\r\n                startMinute1 = dialog.getMinute();\r\n                if (startHour1 <= 12) {\r\n                    startEt.setText(String.format(Locale.getDefault(), \"%d:%02d am\", startHour1, startMinute1));\r\n                } else {\r\n                    startEt.setText(String.format(Locale.getDefault(), \"%d:%02d pm\", startHour1 - 12, startMinute1));\r\n                }\r\n            });\r\n            dialog.show(getSupportFragmentManager(), \"startTimePicker\");\r\n        });\r\n        endBtn.setOnClickListener(v -> {\r\n            Calendar calendar = Calendar.getInstance();\r\n            endHour = calendar.get(Calendar.HOUR_OF_DAY);\r\n            endMinute = calendar.get(Calendar.MINUTE);\r\n            MaterialTimePicker.Builder mybuilder = new MaterialTimePicker.Builder()\r\n                    .setTimeFormat(TimeFormat.CLOCK_12H)\r\n                    .setHour(endHour)\r\n                    .setMinute(endMinute)\r\n                    .setTitleText(\"Select start time\")\r\n                    .setInputMode(MaterialTimePicker.INPUT_MODE_CLOCK);\r\n            MaterialTimePicker dialog = mybuilder.build();\r\n            dialog.addOnPositiveButtonClickListener(timeview -> {\r\n                endHour = dialog.getHour();\r\n                endMinute = dialog.getMinute();\r\n                if (endHour <= 12) {\r\n                    endEt.setText(String.format(Locale.getDefault(), \"%d:%02d am\", endHour, endMinute));\r\n                } else {\r\n                    endEt.setText(String.format(Locale.getDefault(), \"%d:%02d pm\", endHour - 12, endMinute));\r\n                }\r\n            });\r\n            dialog.show(getSupportFragmentManager(), \"startTimePicker\");\r\n        });\r\n        endEt.setOnClickListener(v -> {\r\n            Calendar calendar = Calendar.getInstance();\r\n            endHour1 = calendar.get(Calendar.HOUR_OF_DAY);\r\n            endMinute1 = calendar.get(Calendar.MINUTE);\r\n            MaterialTimePicker.Builder mybuilder = new MaterialTimePicker.Builder()\r\n                    .setTimeFormat(TimeFormat.CLOCK_12H)\r\n                    .setHour(endHour1)\r\n                    .setMinute(endMinute1)\r\n                    .setTitleText(\"Select start time\")\r\n                    .setInputMode(MaterialTimePicker.INPUT_MODE_CLOCK);\r\n            MaterialTimePicker dialog = mybuilder.build();\r\n            dialog.addOnPositiveButtonClickListener(timeview -> {\r\n                endHour1 = dialog.getHour();\r\n                endMinute1 = dialog.getMinute();\r\n                if (endHour1 <= 12) {\r\n                    endEt.setText(String.format(Locale.getDefault(), \"%d:%02d am\", endHour1, endMinute1));\r\n                } else {\r\n                    endEt.setText(String.format(Locale.getDefault(), \"%d:%02d pm\", endHour1 - 12, endMinute1));\r\n                }\r\n            });\r\n            dialog.show(getSupportFragmentManager(), \"startTimePicker\");\r\n        });\r\n        dateBtn.setOnClickListener(v -> {\r\n            Calendar calendar = Calendar.getInstance();\r\n            yearDate = calendar.get(Calendar.YEAR);\r\n            monthDate = calendar.get(Calendar.MONTH);\r\n            dayDate = calendar.get(Calendar.DAY_OF_MONTH);\r\n            DatePickerDialog dialog;\r\n            dialog = new DatePickerDialog(this, (dateView, year, month, dayOfMonth) -> {\r\n                yearDate = year;\r\n                monthDate = month;\r\n                dayDate = dayOfMonth;\r\n                SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\r\n                String dateString = format.format(new Date(yearDate - 1900, monthDate, dayDate));\r\n                dateEt.setText(dateString);\r\n            }, yearDate, monthDate, dayDate);\r\n            dialog.getWindow().setBackgroundDrawableResource(R.color.palette_4);\r\n            dialog.show();\r\n        });\r\n        dateEt.setOnClickListener(v -> {\r\n            Calendar calendar = Calendar.getInstance();\r\n            yearDate1 = calendar.get(Calendar.YEAR);\r\n            monthDate1 = calendar.get(Calendar.MONTH);\r\n            dayDate1 = calendar.get(Calendar.DAY_OF_MONTH);\r\n            DatePickerDialog dialog;\r\n            dialog = new DatePickerDialog(this, (dateView, year, month, dayOfMonth) -> {\r\n                yearDate1 = year;\r\n                monthDate1 = month;\r\n                dayDate1 = dayOfMonth;\r\n                SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\r\n                String dateString = format.format(new Date(yearDate1 - 1900, monthDate1, dayDate1));\r\n                dateEt.setText(dateString);\r\n            }, yearDate1, monthDate1, dayDate1);\r\n            dialog.getWindow().setBackgroundDrawableResource(R.color.palette_4);\r\n            dialog.show();\r\n        });\r\n        addItinerary.setOnClickListener(v -> {\r\n            validateData(dateEt, startEt, endEt);\r\n        });\r\n        AlertDialog dialog = builder.create();\r\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\r\n        dialog.show();\r\n    }\r\n\r\n    private String date = \"\", startTime = \"\", endTime = \"\";\r\n\r\n    private void validateData(EditText dateEt, EditText startTimeEt, EditText endTimeEt) {\r\n        date = dateEt.getText().toString().trim();\r\n        startTime = startTimeEt.getText().toString().trim();\r\n        endTime = endTimeEt.getText().toString().trim();\r\n        boolean allFieldsFilled = true;\r\n\r\n        if (TextUtils.isEmpty(date)) {\r\n            dateEt.setError(\"Please choose a date!\");\r\n            allFieldsFilled = false;\r\n        } else {\r\n            dateEt.setError(null);\r\n        }\r\n\r\n        if (TextUtils.isEmpty(startTime)) {\r\n            startTimeEt.setError(\"Please choose a starting time!\");\r\n            allFieldsFilled = false;\r\n        } else {\r\n            startTimeEt.setError(null);\r\n        }\r\n\r\n        if (TextUtils.isEmpty(endTime)) {\r\n            endTimeEt.setError(\"Please choose an end time!\");\r\n            allFieldsFilled = false;\r\n        } else {\r\n            endTimeEt.setError(null);\r\n        }\r\n\r\n        if (allFieldsFilled) {\r\n            uploadToDB(date, startTime, endTime);\r\n            Toast.makeText(this, \"Destination Added!\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n    }\r\n\r\n    private void uploadToDB(String date, String startTime, String endTime) {\r\n        String uid = firebaseAuth.getUid();\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\r\n        reference.child(destiId).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                String placeID = \"\" + snapshot.child(\"placeId\").getValue();\r\n                Log.d(TAG, \"placeID: \" + placeID);\r\n                HashMap<String, Object> hashMap = new HashMap<>();\r\n                hashMap.put(\"startTime\", startTime);\r\n                hashMap.put(\"endTime\", endTime);\r\n                hashMap.put(\"date\", date);\r\n                hashMap.put(\"placeId\", placeID);\r\n                DatabaseReference itineraryRef = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Users\");\r\n                itineraryRef.child(uid).child(\"itinerary\").child(destiId).setValue(hashMap).addOnSuccessListener(aVoid -> {\r\n                    if (progressDialog != null) {\r\n                        progressDialog.dismiss();\r\n                    }\r\n                    Toast.makeText(getApplicationContext(), \"Itinerary uploaded successfully\", Toast.LENGTH_LONG).show();\r\n                }).addOnFailureListener(e -> {\r\n                    if (progressDialog != null) {\r\n                        progressDialog.dismiss();\r\n                    }\r\n                    Log.d(TAG, \"on Failure : \" + e.getMessage());\r\n                    Toast.makeText(DestinationDetails.this, \"Data upload failed due to \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                });\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void loadDetails() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\r\n        reference.child(destiId)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot){\r\n                        String title = \"\" + snapshot.child(\"title\").getValue();\r\n                        String description = \"\" + snapshot.child(\"description\").getValue();\r\n                        String address = \"\" + snapshot.child(\"address\").getValue();\r\n                        String categoryId = \"\" + snapshot.child(\"categoryId\").getValue();\r\n                        String url = \"\" + snapshot.child(\"url\").getValue();\r\n                        String phone = \"\" + snapshot.child(\"phoneNumber\").getValue();\r\n                        double latitude = Double.parseDouble(snapshot.child(\"latitude\").getValue().toString());\r\n                        double longitude = Double.parseDouble(snapshot.child(\"longitude\").getValue().toString());\r\n                        binding.destiName.setText(title);\r\n                        binding.destiDesc.setText(description);\r\n                        binding.destiAddress.setText(address);\r\n                        binding.destiPhone.setText(\"Phone Number: \" + phone);\r\n                        imageUrl = url;\r\n                        Map<String, String> openingHoursMap = new HashMap<>();\r\n                        for (DataSnapshot hourSnapshot : snapshot.child(\"openingHours\").getChildren()) {\r\n                            String dayOfWeek = hourSnapshot.getKey();\r\n                            String openingHours = hourSnapshot.getValue(String.class);\r\n                            openingHoursMap.put(dayOfWeek, openingHours);\r\n                        }\r\n\r\n                        for (Map.Entry<String, String> entry : openingHoursMap.entrySet()) {\r\n                            String dayOfWeek = entry.getKey();\r\n                            String openingHours = entry.getValue();\r\n                            System.out.println(dayOfWeek + \": \" + openingHours);\r\n                        }\r\n                        List<OpeningHours> openingHoursList = new ArrayList<>();\r\n                        for (Map.Entry<String, String> entry : openingHoursMap.entrySet()) {\r\n                            String dayOfWeek = entry.getKey();\r\n                            String openingHours = entry.getValue();\r\n                            openingHoursList.add(new OpeningHours(dayOfWeek, openingHours));\r\n                        }\r\n\r\n                        OpeningHoursAdapter hoursAdapter = new OpeningHoursAdapter(openingHoursList);\r\n                        binding.openingRv.setAdapter(hoursAdapter);\r\n\r\n                        List<Review> reviews = new ArrayList<>();\r\n                        for (DataSnapshot reviewSnapshot : snapshot.child(\"reviews\").getChildren()) {\r\n                            String authorName = reviewSnapshot.child(\"authorName\").getValue(String.class);\r\n                            int rating = reviewSnapshot.child(\"rating\").getValue(int.class);\r\n                            String text = reviewSnapshot.child(\"text\").getValue(String.class);\r\n                            reviews.add(new Review(authorName, rating, text));\r\n                        }\r\n                        ReviewAdapter reviewAdapter = new ReviewAdapter(reviews);\r\n                        binding.reviewRv.setAdapter(reviewAdapter);\r\n\r\n                        binding.reviewRv.setAdapter(new ReviewAdapter(reviews));\r\n\r\n                        String filePath = getIntent().getStringExtra(\"imageFilePath\");\r\n                        if (filePath != null){\r\n                            Bitmap bitmap = BitmapFactory.decodeFile(filePath);\r\n                            Drawable drawable = new BitmapDrawable(getResources(), bitmap);\r\n                            binding.destiImage.setBackground(drawable);\r\n                        }\r\n                        SupportMapFragment fragment = (SupportMapFragment) getSupportFragmentManager()\r\n                                .findFragmentById(R.id.map);\r\n                        fragment.getMapAsync(googleMap -> {\r\n                            LatLng coordinate = new LatLng(latitude, longitude);\r\n                            MarkerOptions marker = new MarkerOptions();\r\n                            marker.position(coordinate);\r\n                            marker.title(title);\r\n                            googleMap.addMarker(marker);\r\n                            CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\r\n                            googleMap.moveCamera(cameraUpdate);\r\n                        });\r\n                    }\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void checkFavorite(){\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Users\");\r\n        reference.child(firebaseAuth.getUid()).child(\"Favorites\").child(destiId)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        inFavorite = snapshot.exists();\r\n                        if(inFavorite){\r\n                            binding.saveItem.setCompoundDrawablesWithIntrinsicBounds(0,R.drawable.bookmark,0,0);\r\n                            binding.saveItem.setText(\"Remove from Bookmark\");\r\n                        }else{\r\n                            binding.saveItem.setCompoundDrawablesWithIntrinsicBounds(0,R.drawable.remove_bookmark,0,0);\r\n                            binding.saveItem.setText(\"Bookmark Place\");\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetails.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetails.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetails.java	(revision e342e50b8592d937474ac4fc93dc1562d271bded)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetails.java	(date 1681104774490)
@@ -293,7 +293,7 @@
                 hashMap.put("date", date);
                 hashMap.put("placeId", placeID);
                 DatabaseReference itineraryRef = FirebaseDatabase.getInstance("https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/").getReference("Users");
-                itineraryRef.child(uid).child("itinerary").child(destiId).setValue(hashMap).addOnSuccessListener(aVoid -> {
+                itineraryRef.child(uid).child("itinerary").push().setValue(hashMap).addOnSuccessListener(aVoid -> {
                     if (progressDialog != null) {
                         progressDialog.dismiss();
                     }

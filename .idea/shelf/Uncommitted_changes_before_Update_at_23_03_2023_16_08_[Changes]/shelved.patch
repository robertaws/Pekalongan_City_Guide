Index: app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.binus.pekalongancityguide.R;\r\nimport com.binus.pekalongancityguide.databinding.ActivityAddDestinationBinding;\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.libraries.places.api.Places;\r\nimport com.google.android.libraries.places.api.model.AutocompleteSessionToken;\r\nimport com.google.android.libraries.places.api.model.Place;\r\nimport com.google.android.libraries.places.api.model.TypeFilter;\r\nimport com.google.android.libraries.places.api.net.FindAutocompletePredictionsRequest;\r\nimport com.google.android.libraries.places.api.net.FindAutocompletePredictionsResponse;\r\nimport com.google.android.libraries.places.api.net.PlacesClient;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\nimport static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;\r\n\r\npublic class AddDestination extends AppCompatActivity {\r\n    private ActivityAddDestinationBinding binding;\r\n    private FirebaseAuth firebaseAuth;\r\n    private Uri imageUri = null;\r\n    private static final int PICK_IMAGE_REQUEST = 1;\r\n\r\n    private ProgressDialog progressDialog;\r\n    ArrayList<String> categoriesTitleArrayList, categoryIdArrayList;\r\n    public static final String TAG = \"ADD_IMAGE_TAG\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        Places.initialize(getApplicationContext(), MAPS_API_KEY);\r\n        binding = ActivityAddDestinationBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        loadCategory();\r\n        progressDialog = new ProgressDialog(this);\r\n        progressDialog.setTitle(\"Please wait\");\r\n        progressDialog.setCanceledOnTouchOutside(false);\r\n\r\n        binding.backtoAdmin.setOnClickListener(v -> onBackPressed());\r\n        binding.addPicture.setOnClickListener(v -> addPhoto());\r\n        binding.categoryPick.setOnClickListener(v -> showCategoryDialog());\r\n        binding.addBtn.setOnClickListener(v -> {\r\n            InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            imm.hideSoftInputFromWindow(binding.getRoot().getWindowToken(), 0);\r\n            validateData();\r\n        });\r\n\r\n    }\r\n    private String title=\"\",desc=\"\",address=\"\",desLat=\"\",desLong=\"\";\r\n    private void validateData() {\r\n        Log.d(TAG,\"validate data : validating data \");\r\n        title = binding.titleEt.getText().toString().trim();\r\n        desc = binding.descEt.getText().toString().trim();\r\n        address = binding.addressEt.getText().toString().trim();\r\n        desLat = binding.latEt.getText().toString().trim();\r\n        desLong = binding.longEt.getText().toString().trim();\r\n        if(TextUtils.isEmpty(title)){\r\n            binding.titleEt.setError(\"Enter destination title!\");\r\n        }else if(TextUtils.isEmpty((desc))){\r\n            binding.descEt.setError(\"Enter destination description!\");\r\n        }else if(TextUtils.isEmpty((address))){\r\n            binding.descEt.setError(\"Enter destination Address!\");\r\n        }else if(TextUtils.isEmpty((desLat))){\r\n            binding.descEt.setError(\"Enter destination Latitude!\");\r\n        }else if(TextUtils.isEmpty((desLong))){\r\n            binding.descEt.setError(\"Enter destination Longitude!\");\r\n        }else if(TextUtils.isEmpty(selectedCategoryTitle)){\r\n            binding.categoryPick.setError(\"Pick a category!\");\r\n        }else if(imageUri==null){\r\n            Toast.makeText(this, \"Pick an image!\", Toast.LENGTH_SHORT).show();\r\n        }else {\r\n            PlacesClient placesClient = Places.createClient(this);\r\n            List<Place.Field> placeFields = Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.ADDRESS);\r\n            AutocompleteSessionToken token = AutocompleteSessionToken.newInstance();\r\n            FindAutocompletePredictionsRequest request = FindAutocompletePredictionsRequest.builder()\r\n                    .setTypeFilter(TypeFilter.ESTABLISHMENT)\r\n                    .setSessionToken(token)\r\n                    .setQuery(title)\r\n                    .build();\r\n            Task<FindAutocompletePredictionsResponse> task = placesClient.findAutocompletePredictions(request);\r\n            task.addOnSuccessListener(response -> {\r\n                if (!response.getAutocompletePredictions().isEmpty()) {\r\n                    // Get the place ID from the first prediction\r\n                    String placeId = response.getAutocompletePredictions().get(0).getPlaceId();\r\n                    Log.d(TAG, \"Place ID: \" + placeId);\r\n                    // Call a method to upload the data to the database\r\n                    uploadtoStorage(placeId);\r\n                } else {\r\n                    Toast.makeText(this, \"No location found for the given title\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n            task.addOnFailureListener(e -> {\r\n                Log.e(TAG, \"Error getting place ID: \" + e.getMessage());\r\n                Toast.makeText(this, \"Error getting location from title: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    private void uploadtoStorage(String placeId) {\r\n        Log.d(TAG, \"uploadtoStorage : uploading to storage\");\r\n        progressDialog.setMessage(\"Uploading image\");\r\n        progressDialog.show();\r\n        long timestamp = System.currentTimeMillis();\r\n        String filePathandName = \"Destination/\" + timestamp;\r\n        StorageReference storageReference = FirebaseStorage.getInstance(\"gs://pekalongan-city-guide-5bf2e.appspot.com\").getReference(filePathandName);\r\n        storageReference.putFile(imageUri)\r\n                .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                        Log.d(TAG,\"on success : Image uploaded to Storage\");\r\n                        Log.d(TAG,\"on success : getting image url\");\r\n                        Task<Uri> uriTask = taskSnapshot.getStorage().getDownloadUrl();\r\n                        while (!uriTask.isSuccessful());\r\n                        String uploadedImageUrl = \"\"+uriTask.getResult();\r\n                        uploadtoDB(uploadedImageUrl, timestamp, placeId);\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        progressDialog.dismiss();\r\n                        Log.d(TAG, \"on Failure : Image upload failed due to \" + e.getMessage());\r\n                        Toast.makeText(AddDestination.this, \"Image upload failed due to \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    private void uploadtoDB(String uploadedImageUrl, long timestamp, String placeId) {\r\n        Log.d(TAG, \"uploadtoDB : uploading image to firebase DB\");\r\n        progressDialog.setMessage(\"Uploading image info\");\r\n        String uid = firebaseAuth.getUid();\r\n        HashMap<String, Object> hashMap = new HashMap<>();\r\n        hashMap.put(\"uid\", \"\" + uid);\r\n        hashMap.put(\"id\", \"\" + timestamp);\r\n        hashMap.put(\"title\", \"\" + title);\r\n        hashMap.put(\"description\", \"\" + desc);\r\n        hashMap.put(\"address\", \"\" + address);\r\n        hashMap.put(\"latitude\", \"\" + desLat);\r\n        hashMap.put(\"longitude\",\"\" + desLong);\r\n        hashMap.put(\"categoryId\", \"\" + selectedCategoryId);\r\n        hashMap.put(\"url\", \"\" + uploadedImageUrl);\r\n        hashMap.put(\"timestamp\", timestamp);\r\n        hashMap.put(\"placeId\", placeId);\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\r\n        reference.child(\"\"+timestamp)\r\n                .setValue(hashMap)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(getApplicationContext(), \"Image uploaded successfully\", Toast.LENGTH_LONG).show();\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(getApplicationContext(), \"\" + e.getMessage(), Toast.LENGTH_LONG).show();\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void loadCategory(){\r\n        Log.d(TAG,\"load Category : load Category \");\r\n        categoriesTitleArrayList = new ArrayList<>();\r\n        categoryIdArrayList = new ArrayList<>();\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Categories\");\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                categoriesTitleArrayList.clear();\r\n                categoryIdArrayList.clear();\r\n                for(DataSnapshot dataSnapshot : snapshot.getChildren()){\r\n                    String categoryId = \"\"+dataSnapshot.child(\"id\").getValue();\r\n                    String categoryTitle = \"\"+dataSnapshot.child(\"category\").getValue();\r\n                    categoriesTitleArrayList.add(categoryTitle);\r\n                    categoryIdArrayList.add(categoryId);\r\n                }\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n    private String selectedCategoryId,selectedCategoryTitle;\r\n    private void showCategoryDialog(){\r\n        Log.d(TAG,\"Category dialog : showing dialog \");\r\n        String [] categoryArray = new String[categoriesTitleArrayList.size()];\r\n        for(int i=0;i<categoriesTitleArrayList.size();i++){\r\n            categoryArray[i] = categoriesTitleArrayList.get(i);\r\n        }\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Pick Category\")\r\n                .setItems(categoryArray, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        selectedCategoryTitle = categoriesTitleArrayList.get(which);\r\n                        selectedCategoryId = categoryIdArrayList.get(which);\r\n                        binding.categoryPick.setText(selectedCategoryTitle);\r\n                        Log.d(TAG,\"on Click : Selected Category :\"+selectedCategoryId+\" \"+selectedCategoryTitle);\r\n                    }\r\n                })\r\n                .show();\r\n\r\n    }\r\n    private void addPhoto(){\r\n        Log.d(TAG,\"imageIntent : Start pick destination image\");\r\n        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);\r\n        intent.setType(\"image/*\");\r\n        startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), PICK_IMAGE_REQUEST);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(requestCode == PICK_IMAGE_REQUEST && resultCode == RESULT_OK && data != null && data.getData() != null) {\r\n            Log.d(TAG, \"onActivityResult : Image picked\");\r\n            imageUri = data.getData();\r\n            Log.d(TAG, \"onActivityResult : URI : \" + imageUri);\r\n            Glide.with(AddDestination.this)\r\n                    .load(imageUri)\r\n                    .placeholder(R.drawable.person)\r\n                    .centerCrop()\r\n                    .into(binding.addPicture);\r\n        }\r\n        else{\r\n            Log.d(TAG,\"onActivityResult : Cancelled pick image\");\r\n            Toast.makeText(this, \"Cancelled pick image\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java	(revision 15efb7c76fd2e0db3bbafd7188c17db62223c7d0)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddDestination.java	(date 1679562481631)
@@ -19,6 +19,7 @@
 import com.binus.pekalongancityguide.R;
 import com.binus.pekalongancityguide.databinding.ActivityAddDestinationBinding;
 import com.bumptech.glide.Glide;
+import com.google.android.gms.maps.model.LatLng;
 import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
@@ -26,6 +27,7 @@
 import com.google.android.libraries.places.api.model.AutocompleteSessionToken;
 import com.google.android.libraries.places.api.model.Place;
 import com.google.android.libraries.places.api.model.TypeFilter;
+import com.google.android.libraries.places.api.net.FetchPlaceRequest;
 import com.google.android.libraries.places.api.net.FindAutocompletePredictionsRequest;
 import com.google.android.libraries.places.api.net.FindAutocompletePredictionsResponse;
 import com.google.android.libraries.places.api.net.PlacesClient;
@@ -82,26 +84,33 @@
         Log.d(TAG,"validate data : validating data ");
         title = binding.titleEt.getText().toString().trim();
         desc = binding.descEt.getText().toString().trim();
-        address = binding.addressEt.getText().toString().trim();
-        desLat = binding.latEt.getText().toString().trim();
-        desLong = binding.longEt.getText().toString().trim();
+//        address = binding.addressEt.getText().toString().trim();
+//        desLat = binding.latEt.getText().toString().trim();
+//        desLong = binding.longEt.getText().toString().trim();
         if(TextUtils.isEmpty(title)){
             binding.titleEt.setError("Enter destination title!");
         }else if(TextUtils.isEmpty((desc))){
             binding.descEt.setError("Enter destination description!");
-        }else if(TextUtils.isEmpty((address))){
-            binding.descEt.setError("Enter destination Address!");
-        }else if(TextUtils.isEmpty((desLat))){
-            binding.descEt.setError("Enter destination Latitude!");
-        }else if(TextUtils.isEmpty((desLong))){
-            binding.descEt.setError("Enter destination Longitude!");
-        }else if(TextUtils.isEmpty(selectedCategoryTitle)){
-            binding.categoryPick.setError("Pick a category!");
-        }else if(imageUri==null){
+        }
+//        else if(TextUtils.isEmpty((address))){
+//            binding.descEt.setError("Enter destination Address!");
+//        }else if(TextUtils.isEmpty((desLat))){
+//            binding.descEt.setError("Enter destination Latitude!");
+//        }else if(TextUtils.isEmpty((desLong))){
+//            binding.descEt.setError("Enter destination Longitude!");
+//        }else if(TextUtils.isEmpty(selectedCategoryTitle)){
+//            binding.categoryPick.setError("Pick a category!");
+//        }
+        else if(imageUri==null){
             Toast.makeText(this, "Pick an image!", Toast.LENGTH_SHORT).show();
         }else {
             PlacesClient placesClient = Places.createClient(this);
-            List<Place.Field> placeFields = Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.ADDRESS);
+            List<Place.Field> placeFields = Arrays.asList(
+                    Place.Field.ID,
+                    Place.Field.NAME,
+                    Place.Field.ADDRESS,
+                    Place.Field.LAT_LNG
+            );
             AutocompleteSessionToken token = AutocompleteSessionToken.newInstance();
             FindAutocompletePredictionsRequest request = FindAutocompletePredictionsRequest.builder()
                     .setTypeFilter(TypeFilter.ESTABLISHMENT)
@@ -114,8 +123,28 @@
                     // Get the place ID from the first prediction
                     String placeId = response.getAutocompletePredictions().get(0).getPlaceId();
                     Log.d(TAG, "Place ID: " + placeId);
-                    // Call a method to upload the data to the database
-                    uploadtoStorage(placeId);
+                    // Get the Place object for the place ID
+                    List<Place.Field> fields = Arrays.asList(
+                            Place.Field.ID,
+                            Place.Field.NAME,
+                            Place.Field.ADDRESS,
+                            Place.Field.LAT_LNG
+                    );
+                    FetchPlaceRequest placeRequest = FetchPlaceRequest.builder(placeId, fields).build();
+                    placesClient.fetchPlace(placeRequest).addOnSuccessListener(placeResponse -> {
+                        Place place = placeResponse.getPlace();
+                        // Get the address, latitude, and longitude
+                        String placeId = place.getId();
+                        String address = place.getAddress();
+                        LatLng latLng = place.getLatLng();
+                        String latitude = String.valueOf(latLng.latitude);
+                        String longitude = String.valueOf(latLng.longitude);
+                        // Call a method to upload the data to the database
+                        uploadtoStorage(placeId, address, latitude, longitude);
+                    }).addOnFailureListener(e -> {
+                        Log.e(TAG, "Error fetching place: " + e.getMessage());
+                        Toast.makeText(this, "Error getting location details: " + e.getMessage(), Toast.LENGTH_SHORT).show();
+                    });
                 } else {
                     Toast.makeText(this, "No location found for the given title", Toast.LENGTH_SHORT).show();
                 }
@@ -124,11 +153,10 @@
                 Log.e(TAG, "Error getting place ID: " + e.getMessage());
                 Toast.makeText(this, "Error getting location from title: " + e.getMessage(), Toast.LENGTH_SHORT).show();
             });
-
         }
     }
 
-    private void uploadtoStorage(String placeId) {
+    private void uploadtoStorage(String placeId,String address, String latitude, String longitude) {
         Log.d(TAG, "uploadtoStorage : uploading to storage");
         progressDialog.setMessage("Uploading image");
         progressDialog.show();
@@ -144,7 +172,7 @@
                         Task<Uri> uriTask = taskSnapshot.getStorage().getDownloadUrl();
                         while (!uriTask.isSuccessful());
                         String uploadedImageUrl = ""+uriTask.getResult();
-                        uploadtoDB(uploadedImageUrl, timestamp, placeId);
+                        uploadtoDB(uploadedImageUrl, timestamp, placeId,address,latitude,longitude);
                     }
                 })
                 .addOnFailureListener(new OnFailureListener() {
@@ -158,7 +186,7 @@
 
     }
 
-    private void uploadtoDB(String uploadedImageUrl, long timestamp, String placeId) {
+    private void uploadtoDB(String uploadedImageUrl, long timestamp, String placeId, String address, String latitude, String longitude) {
         Log.d(TAG, "uploadtoDB : uploading image to firebase DB");
         progressDialog.setMessage("Uploading image info");
         String uid = firebaseAuth.getUid();
@@ -168,12 +196,12 @@
         hashMap.put("title", "" + title);
         hashMap.put("description", "" + desc);
         hashMap.put("address", "" + address);
-        hashMap.put("latitude", "" + desLat);
-        hashMap.put("longitude","" + desLong);
         hashMap.put("categoryId", "" + selectedCategoryId);
         hashMap.put("url", "" + uploadedImageUrl);
         hashMap.put("timestamp", timestamp);
         hashMap.put("placeId", placeId);
+        hashMap.put("latitude", latitude);
+        hashMap.put("placeId", longitude);
         DatabaseReference reference = FirebaseDatabase.getInstance("https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/").getReference("Destination");
         reference.child(""+timestamp)
                 .setValue(hashMap)
Index: app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Adapter;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Filter;\r\nimport android.widget.Filterable;\r\nimport android.widget.ImageButton;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.binus.pekalongancityguide.Layout.DestinationDetailAdmin;\r\nimport com.binus.pekalongancityguide.Layout.EditDestination;\r\nimport com.binus.pekalongancityguide.ItemTemplate.DestinationAdmin;\r\nimport com.binus.pekalongancityguide.Misc.FilterDestiAdmin;\r\nimport com.binus.pekalongancityguide.Misc.MyApplication;\r\nimport com.binus.pekalongancityguide.databinding.ListDestiAdminBinding;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\nimport static com.binus.pekalongancityguide.Misc.Constants.MAX_BYTES_IMAGE;\r\n\r\npublic class AdminDestinationAdapter extends RecyclerView.Adapter<AdminDestinationAdapter.HolderAdminDestination> implements Filterable {\r\n    private Context context;\r\n    public ArrayList<DestinationAdmin> destinationAdminArrayList,filterList;\r\n    public static final String TAG = \"DESTINATION_ADAPTER_TAG\";\r\n    private FilterDestiAdmin filterDestiAdmin;\r\n    private ListDestiAdminBinding binding;\r\n    private ProgressDialog dialog;\r\n    public AdminDestinationAdapter(Context context, ArrayList<DestinationAdmin> destinationAdminArrayList) {\r\n        this.context = context;\r\n        this.destinationAdminArrayList = destinationAdminArrayList;\r\n        this.filterList = destinationAdminArrayList;\r\n        dialog = new ProgressDialog(context);\r\n        dialog.setTitle(\"Please Wait\");\r\n        dialog.setCanceledOnTouchOutside(false);\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public HolderAdminDestination onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        binding = ListDestiAdminBinding.inflate(LayoutInflater.from(context),parent,false);\r\n\r\n        return new HolderAdminDestination(binding.getRoot());\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull HolderAdminDestination holder, int position) {\r\n\r\n        DestinationAdmin destinationAdmin = destinationAdminArrayList.get(position);\r\n        String destiId = destinationAdmin.getId();\r\n        String categoryId = destinationAdmin.getCategoryId();\r\n        String imageUrl = destinationAdmin.getUrl();\r\n        String title = destinationAdmin.getTitle();\r\n        String description = destinationAdmin.getDescription();\r\n        String address = destinationAdmin.getAddress();\r\n        String latitude = destinationAdmin.getLatitude();\r\n        String longitude = destinationAdmin.getLongitude();\r\n        holder.title.setText(title);\r\n        holder.description.setText(description);\r\n        holder.rating.setText(\"4.5\");\r\n        holder.address.setText(address);\r\n        holder.latitude.setText(String.valueOf(latitude));\r\n        holder.longitude.setText(String.valueOf(longitude));\r\n        loadImage(destinationAdmin, holder);\r\n        holder.options.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showOptionsDialog(destinationAdmin, holder);\r\n            }\r\n        });\r\n        holder.itemView.setOnClickListener(v -> {\r\n            Drawable drawable = holder.layoutImage.getBackground();\r\n            BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;\r\n            Bitmap bitmap = bitmapDrawable.getBitmap();\r\n            ByteArrayOutputStream stream = new ByteArrayOutputStream();\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 25, stream);\r\n            byte[] byteArray = stream.toByteArray();\r\n\r\n            String filePath = context.getFilesDir().getPath() + \"/image.png\";\r\n            FileOutputStream fos = null;\r\n            try {\r\n                fos = new FileOutputStream(filePath);\r\n            } catch (FileNotFoundException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            try {\r\n                fos.write(byteArray);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            try {\r\n                fos.close();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            Intent intent = new Intent(context, DestinationDetailAdmin.class);\r\n            intent.putExtra(\"destiId\",destiId);\r\n            intent.putExtra(\"imageFilePath\", filePath);\r\n            context.startActivity(intent);\r\n        });\r\n    }\r\n\r\n    private void showOptionsDialog(DestinationAdmin destinationAdmin, HolderAdminDestination holder){\r\n        String destiId = destinationAdmin.getId();\r\n        String destiUrl = destinationAdmin.getUrl();\r\n        String destiTitle = destinationAdmin.getTitle();\r\n        String[] options = {\"Edit\",\"Delete\"};\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(context);\r\n        builder.setTitle(\"Choose Options\")\r\n                .setItems(options, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        if(which==0){\r\n                            Intent intent = new Intent(context, EditDestination.class);\r\n                            intent.putExtra(\"destiId\",destiId);\r\n                            context.startActivity(intent);\r\n                        }else{\r\n                            MyApplication.deleteDesti(\r\n                                    context,\r\n                                    \"\"+destiId,\r\n                                    \"\"+destiUrl,\r\n                                    \"\"+destiTitle\r\n                            );\r\n                        }\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n\r\n\r\n//    private void loadCategory(DestinationAdmin destinationAdmin, HolderAdminDestination holder) {\r\n//        String categoryId = destinationAdmin.getCategoryId();\r\n//        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference();\r\n//        reference.child(categoryId)\r\n//                .addValueEventListener(new ValueEventListener() {\r\n//                    @Override\r\n//                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n//                        String categorytext = \"\"+snapshot.child(\"category\").getValue();\r\n//                        holder.category.setText(categorytext);\r\n//                    }\r\n//\r\n//                    @Override\r\n//                    public void onCancelled(@NonNull DatabaseError error) {\r\n//\r\n//                    }\r\n//                });\r\n//    }\r\n\r\n    public void loadImage(DestinationAdmin destinationAdmin, HolderAdminDestination holder){\r\n        String imageUrl = destinationAdmin.getUrl();\r\n        StorageReference reference = FirebaseStorage.getInstance().getReferenceFromUrl(imageUrl);\r\n        reference.getBytes(MAX_BYTES_IMAGE)\r\n                .addOnSuccessListener(new OnSuccessListener<byte[]>() {\r\n                    @Override\r\n                    public void onSuccess(byte[] bytes) {\r\n                        Log.d(TAG, \"on Success: \" + destinationAdmin.getTitle() + \"successfully got the file\");\r\n                        Bitmap bitmap = BitmapFactory.decodeByteArray(bytes, 0, bytes.length);\r\n                        BitmapDrawable drawable = new BitmapDrawable(holder.itemView.getResources(), bitmap);\r\n                        drawable.setGravity(Gravity.FILL);\r\n                        holder.layoutImage.setBackground(drawable);\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.d(TAG,\"on Failure: failed to getting file from url due to\"+e.getMessage());\r\n                    }\r\n                });\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return destinationAdminArrayList.size();\r\n    }\r\n\r\n    @Override\r\n    public Filter getFilter() {\r\n        if(filterDestiAdmin==null){\r\n            filterDestiAdmin = new FilterDestiAdmin(filterList,this);\r\n\r\n        }\r\n        return filterDestiAdmin;\r\n    }\r\n\r\n    public class HolderAdminDestination extends RecyclerView.ViewHolder {\r\n        RelativeLayout layoutImage;\r\n        TextView title, description, address, latitude, longitude, rating;\r\n        ImageButton options;\r\n\r\n        public HolderAdminDestination(@NonNull View itemView) {\r\n            super(itemView);\r\n            layoutImage = binding.adminlayoutImage;\r\n            title = binding.adminlocTitle;\r\n            description = binding.adminlocDesc;\r\n            address = binding.adminlocAddress;\r\n            latitude = binding.adminlocLat;\r\n            longitude = binding.adminlocLong;\r\n            rating = binding.adminlocRat;\r\n            options = binding.optionBtn;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java b/app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java	(revision 15efb7c76fd2e0db3bbafd7188c17db62223c7d0)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Adapter/AdminDestinationAdapter.java	(date 1679562058187)
@@ -75,15 +75,15 @@
         String imageUrl = destinationAdmin.getUrl();
         String title = destinationAdmin.getTitle();
         String description = destinationAdmin.getDescription();
-        String address = destinationAdmin.getAddress();
-        String latitude = destinationAdmin.getLatitude();
-        String longitude = destinationAdmin.getLongitude();
+//        String address = destinationAdmin.getAddress();
+//        String latitude = destinationAdmin.getLatitude();
+//        String longitude = destinationAdmin.getLongitude();
         holder.title.setText(title);
         holder.description.setText(description);
         holder.rating.setText("4.5");
-        holder.address.setText(address);
-        holder.latitude.setText(String.valueOf(latitude));
-        holder.longitude.setText(String.valueOf(longitude));
+//        holder.address.setText(address);
+//        holder.latitude.setText(String.valueOf(latitude));
+//        holder.longitude.setText(String.valueOf(longitude));
         loadImage(destinationAdmin, holder);
         holder.options.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -208,7 +208,8 @@
 
     public class HolderAdminDestination extends RecyclerView.ViewHolder {
         RelativeLayout layoutImage;
-        TextView title, description, address, latitude, longitude, rating;
+        TextView title, description, rating;
+//                TextView address, latitude, longitude;
         ImageButton options;
 
         public HolderAdminDestination(@NonNull View itemView) {
@@ -216,9 +217,9 @@
             layoutImage = binding.adminlayoutImage;
             title = binding.adminlocTitle;
             description = binding.adminlocDesc;
-            address = binding.adminlocAddress;
-            latitude = binding.adminlocLat;
-            longitude = binding.adminlocLong;
+//            address = binding.adminlocAddress;
+//            latitude = binding.adminlocLat;
+//            longitude = binding.adminlocLong;
             rating = binding.adminlocRat;
             options = binding.optionBtn;
         }
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetailAdmin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\n\r\nimport com.binus.pekalongancityguide.Misc.MyApplication;\r\nimport com.binus.pekalongancityguide.R;\r\nimport com.binus.pekalongancityguide.databinding.ActivityDestinationDetailAdminBinding;\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class DestinationDetailAdmin extends AppCompatActivity {\r\n    private ActivityDestinationDetailAdminBinding binding;\r\n    String destiId;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityDestinationDetailAdminBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        Intent intent = getIntent();\r\n        destiId = intent.getStringExtra(\"destiId\");\r\n\r\n        loadDetails();\r\n        binding.backDestinAdmin.setOnClickListener(v -> onBackPressed());\r\n\r\n    }\r\n\r\n    private void loadDetails(){\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\r\n        reference.child(destiId)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        String title = \"\"+snapshot.child(\"title\").getValue();\r\n                        String description = \"\"+snapshot.child(\"description\").getValue();\r\n                        String address = \"\"+snapshot.child(\"address\").getValue();\r\n                        String categoryId = \"\"+snapshot.child(\"categoryId\").getValue();\r\n                        String url = \"\"+snapshot.child(\"url\").getValue();\r\n                        String desLat = \"\"+snapshot.child(\"latitude\").getValue();\r\n                        String desLong = \"\"+snapshot.child(\"longitude\").getValue();\r\n                        double latitude = Double.parseDouble(desLat);\r\n                        double longitude = Double.parseDouble(desLong);\r\n                        binding.destiAdminName.setText(title);\r\n                        binding.destiAdminDesc.setText(description);\r\n                        binding.destiAdminAddress.setText(address);\r\n                        String filePath = getIntent().getStringExtra(\"imageFilePath\");\r\n                        if (filePath != null) {\r\n                            Bitmap bitmap = BitmapFactory.decodeFile(filePath);\r\n                            Drawable drawable = new BitmapDrawable(getResources(), bitmap);\r\n                            binding.destiAdminImage.setBackground(drawable);\r\n                        }\r\n                        SupportMapFragment fragment = (SupportMapFragment) getSupportFragmentManager()\r\n                                .findFragmentById(R.id.admin_map    );\r\n                        fragment.getMapAsync(googleMap ->{\r\n                            LatLng coordinate = new LatLng(latitude, longitude);\r\n                            MarkerOptions marker = new MarkerOptions();\r\n                            marker = marker.position(coordinate);\r\n                            marker = marker.title(title);\r\n                            googleMap.addMarker(marker);\r\n                            CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\r\n                            googleMap.moveCamera(cameraUpdate);\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetailAdmin.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetailAdmin.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetailAdmin.java	(revision 15efb7c76fd2e0db3bbafd7188c17db62223c7d0)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/DestinationDetailAdmin.java	(date 1679562107233)
@@ -66,7 +66,7 @@
                             binding.destiAdminImage.setBackground(drawable);
                         }
                         SupportMapFragment fragment = (SupportMapFragment) getSupportFragmentManager()
-                                .findFragmentById(R.id.admin_map    );
+                                .findFragmentById(R.id.admin_map);
                         fragment.getMapAsync(googleMap ->{
                             LatLng coordinate = new LatLng(latitude, longitude);
                             MarkerOptions marker = new MarkerOptions();
Index: app/src/main/res/layout/activity_add_destination.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <data>\r\n\r\n    </data>\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/addDesti\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"@drawable/background_batik\"\r\n            android:backgroundTint=\"@color/palette_4\"\r\n            android:backgroundTintMode=\"screen\"\r\n            android:orientation=\"vertical\"\r\n            tools:context=\".Layout.AddDestination\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <ImageButton\r\n                    android:id=\"@+id/backtoAdmin\"\r\n                    android:contentDescription=\"Back to Admin Home\"\r\n                    android:layout_gravity=\"start\"\r\n                    android:layout_width=\"48dp\"\r\n                    android:layout_height=\"48dp\"\r\n                    android:background=\"#0000\"\r\n                    android:src=\"@drawable/back_icon\" />\r\n\r\n            </RelativeLayout>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/add_picture\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"150dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:src=\"@drawable/insert_photo\"\r\n                android:layout_marginHorizontal=\"40dp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/title_et\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:padding=\"15dp\"\r\n                android:background=\"@drawable/et_style\"\r\n                android:layout_marginHorizontal=\"30dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:hint=\"Add New Destination\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/desc_et\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:padding=\"15dp\"\r\n                android:background=\"@drawable/et_style\"\r\n                android:layout_marginHorizontal=\"30dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:hint=\"Destination Description\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/address_et\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:padding=\"15dp\"\r\n                android:background=\"@drawable/et_style\"\r\n                android:layout_marginHorizontal=\"30dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:hint=\"Destination Address\" />\r\n            <EditText\r\n                android:id=\"@+id/lat_et\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:padding=\"15dp\"\r\n                android:background=\"@drawable/et_style\"\r\n                android:layout_marginHorizontal=\"30dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:hint=\"Destination Lattitude\" />\r\n            <EditText\r\n                android:id=\"@+id/long_et\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:padding=\"15dp\"\r\n                android:background=\"@drawable/et_style\"\r\n                android:layout_marginHorizontal=\"30dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:hint=\"Destination Longitude\" />\r\n            <TextView\r\n                android:id=\"@+id/category_pick\"\r\n                android:drawablePadding=\"10dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@drawable/et_style\"\r\n                android:hint=\"Pick Category\"\r\n                android:drawableStart=\"@drawable/category\"\r\n                android:padding=\"10dp\"\r\n                android:layout_marginHorizontal=\"30dp\"\r\n                android:drawableEnd=\"@drawable/dropdown_icon\"\r\n                android:textStyle=\"bold\"\r\n                android:textSize=\"20dp\"\r\n                android:gravity=\"center\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/add_btn\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Add ITEM\"\r\n                android:layout_marginHorizontal=\"30dp\" />\r\n\r\n        </LinearLayout>\r\n\r\n    </ScrollView>\r\n\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_add_destination.xml b/app/src/main/res/layout/activity_add_destination.xml
--- a/app/src/main/res/layout/activity_add_destination.xml	(revision 15efb7c76fd2e0db3bbafd7188c17db62223c7d0)
+++ b/app/src/main/res/layout/activity_add_destination.xml	(date 1679562058131)
@@ -63,33 +63,33 @@
                 android:layout_height="wrap_content"
                 android:hint="Destination Description" />
 
-            <EditText
-                android:id="@+id/address_et"
-                android:layout_marginTop="20dp"
-                android:padding="15dp"
-                android:background="@drawable/et_style"
-                android:layout_marginHorizontal="30dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:hint="Destination Address" />
-            <EditText
-                android:id="@+id/lat_et"
-                android:layout_marginTop="20dp"
-                android:padding="15dp"
-                android:background="@drawable/et_style"
-                android:layout_marginHorizontal="30dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:hint="Destination Lattitude" />
-            <EditText
-                android:id="@+id/long_et"
-                android:layout_marginTop="20dp"
-                android:padding="15dp"
-                android:background="@drawable/et_style"
-                android:layout_marginHorizontal="30dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:hint="Destination Longitude" />
+<!--            <EditText-->
+<!--                android:id="@+id/address_et"-->
+<!--                android:layout_marginTop="20dp"-->
+<!--                android:padding="15dp"-->
+<!--                android:background="@drawable/et_style"-->
+<!--                android:layout_marginHorizontal="30dp"-->
+<!--                android:layout_width="match_parent"-->
+<!--                android:layout_height="wrap_content"-->
+<!--                android:hint="Destination Address" />-->
+<!--            <EditText-->
+<!--                android:id="@+id/lat_et"-->
+<!--                android:layout_marginTop="20dp"-->
+<!--                android:padding="15dp"-->
+<!--                android:background="@drawable/et_style"-->
+<!--                android:layout_marginHorizontal="30dp"-->
+<!--                android:layout_width="match_parent"-->
+<!--                android:layout_height="wrap_content"-->
+<!--                android:hint="Destination Lattitude" />-->
+<!--            <EditText-->
+<!--                android:id="@+id/long_et"-->
+<!--                android:layout_marginTop="20dp"-->
+<!--                android:padding="15dp"-->
+<!--                android:background="@drawable/et_style"-->
+<!--                android:layout_marginHorizontal="30dp"-->
+<!--                android:layout_width="match_parent"-->
+<!--                android:layout_height="wrap_content"-->
+<!--                android:hint="Destination Longitude" />-->
             <TextView
                 android:id="@+id/category_pick"
                 android:drawablePadding="10dp"

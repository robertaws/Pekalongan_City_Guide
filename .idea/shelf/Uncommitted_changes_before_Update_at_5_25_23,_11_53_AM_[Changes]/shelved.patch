Index: app/src/main/res/values-in/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    #INDONESIAN STRING\n    <string name=\"app_name\">Pekalongan City Guide</string>\n    #home fragment\n    <string name=\"short_explain\">Pekalongan adalah sebuah kota di Jawa Tengah, Indonesia. Dulunya kota ini merupakan pusat pemerintahan Kabupaten Pekalongan di pesisir utara provinsi ini, namun sekarang menjadi kota mandiri di dalam provinsi ini. Kota ini merupakan pelabuhan terpenting di Jawa Tengah, dan terkenal dengan batiknya.</string>\n    <string name=\"spotlight\">Sorotan</string>\n    <string name=\"history\">Sejarah</string>\n    <string name=\"history_txt\">Daerah pesisir di sekitar Pekalongan merupakan bagian dari kerajaan Holing (Kalingga) kuno. Prasasti Sojomerto dari abad ke-7, yang ditemukan di Kabupaten Batang, Jawa Tengah, dihubungkan dengan Kalingga dan juga nenek moyang orang Sailendra.</string>\n    <string name=\"read_more\">Baca selengkapnya</string>\n    <string name=\"culinary\">Hidangan Lokal</string>\n    <string name=\"breaking_news\">Berita Terkini</string>\n\n    #history detail activity\n    <string name=\"history_header\">Sejarah Kota Pekalongan</string>\n    <string name=\"history_body\">\\t\\t\\t\\t\\tDaerah pesisir di sekitar Pekalongan merupakan bagian dari kerajaan Holing (Kalingga) kuno. Prasasti Sojomerto dari abad ke-7, yang ditemukan di Kabupaten Batang, Jawa Tengah, dihubungkan dengan Kalingga dan juga nenek moyang bangsa Sailendra. Lokasi pasti ibu kota Kalingga masih belum jelas, namun diperkirakan terletak di suatu tempat antara Pekalongan dan Jepara. Namun kemungkinan besar Kalingga terletak di Pekalongan dan bukan di Jepara, karena ada kemiripan nama antara Kalingga dan Pekalongan. Nama ini mungkin sedikit berubah selama berabad-abad, dari Kalingga, Kaling, Kalong, dan kemudian ditambah dengan imbuhan pe- menjadi \\'Pekalongan\\'.\\n\\n\\t\\t\\t\\t\\tSejarah Pekalongan dimulai pada awal abad ke-12. Sebuah buku yang ditulis pada tahun 1178 oleh seorang pejabat dinasti Song telah mencatat Pekalongan, yang saat itu dikenal oleh para pedagang Cina sebagai \\'Pukalong\\', yang saat itu merupakan pelabuhan di Jawa (saat itu dikenal dengan nama Dvapa); raja Jawa tinggal di Pukalong, mengikat rambutnya di bagian belakang kepalanya, sementara rakyatnya berambut pendek dan membungkus tubuh mereka dengan kain tenun yang penuh warna. Kapal dagang Cina berlayar dari Kanton pada bulan November, dengan bantuan angin yang baik berlayar tanpa henti siang dan malam, tiba di Pukalong dalam waktu sekitar satu bulan. Orang-orang membuat arak dari kelapa, menghasilkan gula tebu merah dan putih yang sangat lezat, kerajaan membuat koin dari perunggu dan tembaga, 60 koin tembaga ditukar dengan satu tael emas. Hasil bumi lokal termasuk lada, cengkeh, cendana, kayu cendana, kayu elang dan kapulaga putih.\\n\\n\\t\\t\\t\\t\\tPekalongan menjadi bagian dari kerajaan Kesultanan Mataram melalui perjanjian dan aliansi pernikahan pada awal abad ke-17. Daerah ini berada di pinggiran geografis kerajaan, yang berpusat di pedalaman Jawa Tengah. Namun, daerah ini merupakan daerah yang kaya, dan pada akhir abad ke-17, uang dan hasil bumi yang banyak dikirim ke pusat menjadikannya bagian penting dari wilayah kekuasaan Mataram. Daerah ini mengalami kemunduran ekonomi selama abad ke-18, dan Perusahaan Hindia Timur Belanda mulai mendapatkan pengaruh yang besar atas kehidupan politik dan ekonomi di daerah tersebut. Belanda membangun benteng di kota ini pada tahun 1753; benteng ini masih berdiri hingga sekarang.\\n\\n\\t\\t\\t\\t\\tSejak tahun 1830-an, daerah Pekalongan menjadi penghasil utama gula. Tebu telah ditanam di daerah ini sejak awal abad ke-12, seperti yang tercatat dalam buku-buku sejarah Tiongkok, tetapi produksi meningkat secara substansial selama pertengahan abad ke-19 karena upaya Belanda. Awalnya, produksi didorong melalui kerja rodi; pemerintah kolonial Belanda mengambil keuntungan dari harapan masyarakat Jawa yang sudah lama ada bahwa petani menyumbangkan sebagian tenaga kerja mereka kepada negara. Antara tahun 1860-an dan 1890-an, sistem ini dihapuskan, dan para pekerja dibayar secara langsung. Industri gula kolonial runtuh selama Depresi Besar pada tahun 1930-an, tetapi gula tetap menjadi ekspor utama di masa Indonesia merdeka.\\n\\n\\t\\t\\t\\t\\tPada tanggal 8 Oktober 1945, sebuah gerakan anti \\'Swapraja\\'/anti feodalisme yang disebut \\'Gerakan Tiga Daerah\\' didirikan di Tegal, Pekalongan, dan Brebes. Tujuan dari gerakan ini adalah untuk menggantikan bupati berdarah biru (yang memiliki hubungan darah dengan raja-raja dari Jogyakarta dan Surakarta) dengan rakyat biasa. Menurut para pemimpin gerakan ini, para bupati lama telah bekerja sama dengan Jepang selama Perang Dunia II dan mengirim orang ke kamp kerja paksa Jepang.Pemimpin utama gerakan ini adalah Sarjiyo yang kemudian menjadi bupati Pekalongan yang baru. Pemimpin lain dari gerakan ini adalah Kutil, K. Mijaya, dan Ir. Sakirman. Ir Sakirman adalah pemimpin lokal Partai Komunis Indonesia (PKI).\\n\\n\\t\\t\\t\\t\\tPara bupati lama ditangkap, ditelanjangi, dan diseret ke dalam penjara. Pejabat pemerintah dan polisi lainnya diculik dan dibantai di jembatan Talang. Gerakan ini juga memicu kerusuhan rasial terhadap etnis Tionghoa di Brebes.Pemerintah Republik Indonesia (RI) di Jogyakarta tidak setuju dengan gerakan ini dan menyatakannya sebagai gerakan ilegal.  Pada tanggal 4 November 1945, gerakan ini menyerang markas besar tentara Indonesia dan kantor bupati di Pekalongan.\\n\\n\\t\\t\\t\\t\\tPara pemberontak dikalahkan oleh tentara Indonesia dalam pertempuran sengit pada tanggal 21 Desember 1945. Sebagian besar pemimpin gerakan ini ditangkap dan dijebloskan ke dalam penjara. Pemberontakan ini dikenal dengan sebutan Pemberontakan Tiga Daerah.</string>\n    <string name=\"general_info\">Informasi Umum</string>\n    <string name=\"info_body\">Nama lain Pekalongan :\\n- Hanacaraka : ꦥꦼꦏꦭꦺꦴꦁꦔꦤ꧀ \\n- Pegon : ڤٓكالَوڠان \\n- Tionghoa : 北加隆岸\\n\\nJulukan : Kota Batik\\n\\nMotto Pekalongan Kota BATIK (Bersih, Aman, Disiplin, Indah, Komunikatif)\\n\\nWalikota : Saelany Mahfudz Luas Wilayah : 45,25 km2 (17,47 mil persegi)\\n\\nJumlah Penduduk per 2019 : 307.097\\nKepadatan : 6.800/km2 (18.000/km2)\\n\\nZona waktu : UTC +7 (Waktu Indonesia Barat)\\n\\nKode area : (+62) 285\\n\\nPost Code :51100\\n\\nSitus web : pekalongankota.go.id</string>\n    <string name=\"important_numbers\">Nomor-nomor Penting</string>\n    <string name=\"numbers\">Panggilan Darurat : 112\\n\\nKepolisian Kota Pekalongan : (0285) 421692\\n\\nPemadam Kebakaran : (0285) 435301\\n\\nKantor PLN Pekalongan : (0285) 434785\\n\\nKantor Pelayanan Pajak Pratama : (0285) 422491\\n\\nRumah Sakit Bendan Pekalongan : (0285) 437222\\n\\nStasiun Kereta Api : (0285) 421161</string>\n    <string name=\"coat_arms_old\">Lambang Kota Pekalongan \\ndari tahun 1930-an pada masa penjajahan</string>\n    <string name=\"coat_arms_new\">Lambang Kota \\n(Sekarang)</string>\n    <string name=\"city_flag\">Bendera Kota</string>\n    #culinary detail\n    <string name=\"culinary_header\">Kuliner Lokal</string>\n    <string name=\"culinary_image\">Galeri Kuliner</string>\n    #destination fragment\n    <string name=\"search_hint\">Cari Destinasi Tujuan</string>\n    #destination details\n    <string name=\"detail_header\">Rincian Tujuan</string>\n    <string name=\"bookmark_text\">Simpan Tempat</string>\n    <string name=\"unbookmark_text\">Hapus dari Penanda</string>\n    #bookmark fragment\n    <string name=\"bookmark_list\">\"Daftar Destinasi Favorit  \"</string>\n    #convo fragment\n    <string name=\"convo_header\">Contoh Percakapan Harian</string>\n    <string name=\"phrases_header\">Frasa yang Sering digunakan</string>\n    #profile fragment\n    <string name=\"user_txt\">Nama pengguna</string>\n    <string name=\"email_txt\">Alamat email</string>\n    <string name=\"time_txt\">Tanggal Bergabung</string>\n    <string name=\"type_txt\">Tipe Pengguna</string>\n    <string name=\"logout_text\">Keluar</string>\n    #edit profile\n    <string name=\"edit_header\">Ubah Profil</string>\n    <string name=\"update_text\">Perbarui</string>\n    #login activity\n    <string name=\"email_hint\">Masukkan E-mail</string>\n    <string name=\"pass_hint\">Masukkan Kata Sandi</string>\n    <string name=\"login_text\">Masuk</string>\n    <string name=\"without_text\">Lanjutkan tanpa login</string>\n    <string name=\"donthave_text\">Belum punya akun?</string>\n    <string name=\"toRegister_text\">DAFTAR SEKARANG</string>\n    #register activity\n    <string name=\"regisuser_text\">Masukkan Nama Pengguna</string>\n    <string name=\"regisemail_text\">Masukkan E-mail</string>\n    <string name=\"regispass_text\">Masukkan Kata Sandi</string>\n    <string name=\"regiscfmpass_text\">Konfirmasikan Kata Sandi</string>\n    <string name=\"regisbtn_text\">Daftar</string>\n    <string name=\"change_lang\">Setelan Bahasa</string>\n    <string name=\"change_password\">Ubah Kata Sandi</string>\n    <string name=\"curr_pass\">Kata Sandi saat ini</string>\n    <string name=\"edit_pass\">Kata Sandi baru</string>\n    <string name=\"cfmeditpass\">Pastikan Kata Sandi</string>\n    <string name=\"update_pass\">Perbarui Sandi</string>\n    <string name=\"itinerary_profile\">Daftar Rencana\\nPerjalanan</string>\n    <string name=\"show_routes\">Lihat Rute</string>\n    <string name=\"search_bookmark\">\"Cari Destinasi Favorit\"</string>\n    <string name=\"add_to_itinerary\">Tambah Rencana Perjalanan</string>\n    <string name=\"select_date_iter\">Pilih Tanggal</string>\n    <string name=\"select_start_time_iter\">Pilih Waktu Mulai</string>\n    <string name=\"select_end_time_iter\">Pilih Waktu Selesai</string>\n    <string name=\"add_to_itinerary_btn\">Tambah Rencana</string>\n    <string name=\"search_destination_admin\">Cari Destinasi</string>\n    <string name=\"destination_admin\">Destinasi</string>\n    <string name=\"category_admin\">Kategori</string>\n    <string name=\"detail_news\">Detil Berita</string>\n    <string name=\"itinerary_list_header\">Daftar Rencana Perjalanan</string>\n    <string name=\"enter_new_username\">Masukkan nama pengguna baru</string>\n    <string name=\"edit_destination_header\">Ubah Destinasi</string>\n    <string name=\"edit_destination_name\">Nama Destinasi</string>\n    <string name=\"edit_destination_description\">Deskripsi Destinasi</string>\n    <string name=\"edit_pick_category\">Pilih Kategori</string>\n    <string name=\"update_destination_btn\">Perbarui Destinasi</string>\n    <string name=\"opening_hours_detail\">Jam Buka</string>\n    <string name=\"place_reviews_detail\">Ulasan Tempat</string>\n    <string name=\"logout_confirm\">Apakah anda ingin keluar dari akun?</string>\n    <string name=\"yes_txt\">Ya</string>\n    <string name=\"no_txt\">Tidak</string>\n    <string name=\"gpsnotEnabled\">GPS nonaktif</string>\n    <string name=\"enable_gps_confirm\">Apakah anda ingin menyalakan GPS?</string>\n    <string name=\"enter_name_edit\">Masukkan nama baru</string>\n    <string name=\"enter_cur_pass\">Masukkan kata sandi saat ini!</string>\n    <string name=\"pass8chara\">Kata sandi harus lebih dari 8 karakter!</string>\n    <string name=\"pass1num\">Pada Kata sandi harus terdapat minimal 1 angka!</string>\n    <string name=\"pass1Symbol\">Pada Kata sandi harus terdapat minimal 1 simbol!</string>\n    <string name=\"enternewPass\">Masukkan kata sandi baru!</string>\n    <string name=\"passcantSame\">Kata sandi tidak boleh sama dengan yang dulu!</string>\n    <string name=\"cfmpassEnter\">Masukkan kembali kata sandi!</string>\n    <string name=\"passnotMatch\">Kata sandi tidak cocok!</string>\n    <string name=\"pass_updated_txt\">Kata sandi berhasil diubah!</string>\n    <string name=\"failed_update_pass\">Gagal mengubah kata sandi1</string>\n    <string name=\"failed_authentic\">Gagal mengautentikasi ulang pengguna...</string>\n    <string name=\"removed_bookmark\">Destinasi dihapus</string>\n    <string name=\"added_bookmark\">Berhasil Menambahkan ke favorit</string>\n    <string name=\"notLogin\">Anda harus login dahulu!</string>\n    <string name=\"select_language\">Pilih Bahasa</string>\n    <string name=\"english_opt\">Bahasa Inggris</string>\n    <string name=\"indo_opt\">Bahasa Indonesia</string>\n    <string name=\"no_internet\">Tidak Ada Koneksi Internet</string>\n    <string name=\"error_connect_database\">Tidak dapat menghubungkan ke Database</string>\n    <string name=\"choose_date\">Pilih tanggal perjalanan!</string>\n    <string name=\"choose_start\">Pilih waktu mulai!</string>\n    <string name=\"choose_end\">Pilih waktu selesai!</string>\n    <string name=\"added_to_iter\">Berhasil Menambah destinasi ke rencana perjalanan!</string>\n    <string name=\"sort_txt\">Sortir</string>\n    <string name=\"cancel_txt\">Batal</string>\n    <string name=\"sort_by\">Sortir Berdasarkan :</string>\n    <string name=\"rating_txt\">Rating</string>\n    <string name=\"distance_txt\">Jarak</string>\n    <string name=\"press_back\">Tekan sekali lagi untuk keluar</string>\n    <string name=\"no_map_app\">Google Maps tidak terinstall pada handphone. Membuka melalui halaman web . . .</string>\n    <string name=\"no_desttination_iter\">Tidak ada destinasi pada rencana perjalanan</string>\n    <string name=\"add_comment\">Tambahkan Komentar</string>\n    <string name=\"comment_text\">Komentar</string>\n    <string name=\"submit_text\">Tambahkan</string>\n    <string name=\"comment_empty\">Masukkan komentar anda!</string>\n    <string name=\"please_wait\">Mohon Tunggu</string>\n    <string name=\"adding_comment\">Menambahkan komentar...</string>\n    <string name=\"failed_add_comment\">Gagal menambahkan komen karena</string>\n    <string name=\"success_add_comment\">Komentar berhasil ditambahkan...</string>\n    <string name=\"delete_comment\">Hapus Komentar</string>\n    <string name=\"delete_confirm\">Apakah anda yakin untuk menghapus komentar ini?</string>\n    <string name=\"delete_opt\">Hapus</string>\n    <string name=\"cancel_opt\">Batal</string>\n    <string name=\"comment_deleted\">Komentar berhasil dihapus!</string>\n    <string name=\"failed_delete_comment\">Gagal menghapus komentar karena</string>\n    <string name=\"edit_comment\">Edit Comment</string>\n    <string name=\"edit_success\">Berhasil mengubah komentar!</string>\n    <string name=\"failed_edit_comment\">Gagal mengubah komentar karena</string>\n    <string name=\"login_try\">Mencoba masuk...</string>\n    <string name=\"check_user\">Cek User...</string>\n    <string name=\"wrong_pass\">Kata sandi Salah!</string>\n    <string name=\"empty_username\">Username tidak boleh kosong!</string>\n    <string name=\"user_length\">Username harus berisi 3 - 12 karakter!</string>\n    <string name=\"empty_email\">Email tidak boleh kosong!</string>\n    <string name=\"wrong_email\">Alamat email salah!</string>\n    <string name=\"empty_pass\">Kata sandi tidak boleh kosong!</string>\n    <string name=\"pass_length\">Kata sandi harus lebih dari 8 karakter!</string>\n    <string name=\"pass_1num\">kata sandi harus terdiri dari minimal 1 angka!</string>\n    <string name=\"create_account\">Membuat akun...</string>\n    <string name=\"saving_user_info\">Menyimpan info pengguna</string>\n    <string name=\"updating_profile\">Memperbarui profil pengguna...</string>\n    <string name=\"updating_image\">Memperbarui foto pengguna...</string>\n    <string name=\"dashboard_admin\">Dasbor Admin</string>\n    <string name=\"search_category\">Cari Kategori</string>\n    <string name=\"add_category\">Tambah Kategori</string>\n    <string name=\"add_new_destination_category\">Tambahkan Kategori Baru</string>\n    <string name=\"destination_description\">Deskripsi destinasi</string>\n    <string name=\"add_new_destination\">Tambah Destinasi Baru</string>\n    <string name=\"add_item\">Tambah item</string>\n    <string name=\"basic_javanese_characters\">Aksara Jawa Dasar</string>\n    <string name=\"city_logo\">Logo Kota\\n(2014-2017)</string>\n    <string name=\"remove_bookmark\">Hapus Favorit</string>\n    <string name=\"remove_confirm\">Apakah anda yakin untuk menghapus kategori</string>\n    <string name=\"carakan_letters_n_ngelgena\">AKSARA CARAKAN\\n(Ngelgena)</string>\n    <string name=\"couple_letters_n_mati\">AKSARA PASANGAN\\n(Mati)</string>\n    <string name=\"used_email\">Alamat email telah digunakan!</string>\n    <string name=\"deleted_category\">Kategori berhasil dihapus!</string>\n    <string name=\"cat_destination_deleted\">Destinasi berhasil dihapus!</string>\n    <string name=\"deleting_item\">Menghapus item...</string>\n    <string name=\"acount_created\">Akun berhasil dibuat!</string>\n    <string name=\"suces_register\">Registrasi berhasil!</string>\n    <string name=\"delete_desti_confirm\">Apakah anda yakin ingin menghapus</string>\n    <string name=\"delete_confirmation\">Konfirmasi</string>\n    <string name=\"error_news\">Gagal mengambil berita karena</string>\n    <string name=\"empty_bookmark\">Penanda Kosong</string>\n    <string name=\"add_itinerary\">Add Itinerary</string>\n    <string name=\"choose_location\">Pilih Lokasi</string>\n    <string name=\"your_location\">Lokasi anda</string>\n    <string name=\"use_current_location\">Gunakan lokasi sekarang</string>\n    <string name=\"update_itinerary\">Perbarui Rencana Perjalanan</string>\n    <string name=\"empty_itinerary\">Itinerari Kosong</string>\n    <string name=\"confirm_delete\">Konfirmasi untuk hapus</string>\n    <string name=\"delete_item\">Apakah anda yakin untuk menghapus item ini?</string>\n    <string name=\"yes_myapp\">Ya</string>\n    <string name=\"wait\">Mohon tunggu</string>\n    <string name=\"deleting\">Menghapus...</string>\n    <string name=\"delete_iter\">Itinerari berhasil dihapus</string>\n    <string name=\"fail_deteltIter\">Gagal menghapus itinerari karena</string>\n    <string name=\"noMyapp\">Tidak</string>\n    <string name=\"iter_notdeleted\">Itinerari tidak dihapus</string>\n    <string name=\"set_location\">Atur lokasi</string>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-in/strings.xml b/app/src/main/res/values-in/strings.xml
--- a/app/src/main/res/values-in/strings.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/res/values-in/strings.xml	(date 1684922538134)
@@ -174,7 +174,7 @@
     <string name="delete_confirmation">Konfirmasi</string>
     <string name="error_news">Gagal mengambil berita karena</string>
     <string name="empty_bookmark">Penanda Kosong</string>
-    <string name="add_itinerary">Add Itinerary</string>
+    <string name="add_itinerary">Tambah Itinerari</string>
     <string name="choose_location">Pilih Lokasi</string>
     <string name="your_location">Lokasi anda</string>
     <string name="use_current_location">Gunakan lokasi sekarang</string>
@@ -190,5 +190,37 @@
     <string name="noMyapp">Tidak</string>
     <string name="iter_notdeleted">Itinerari tidak dihapus</string>
     <string name="set_location">Atur lokasi</string>
+    <string name="select_start_date">pilih tanggal mulai</string>
+    <string name="select_end_date">Pilih tanggal akhir</string>
+    <string name="add_date">Tambah tanggal</string>
+    <string name="data_saved">Tanggal disimpan</string>
+    <string name="item_selected">" "item dipilih</string>
+    <string name="items_selected">" "item dipilih</string>
+    <string name="pick_start">Pilih lokasi awal</string>
+    <string name="below_are">Di bawah ini tempat-tempat terdekat dari lokasi sekarang</string>
+    <string name="pick_next">Pilih lokasi selanjutnya</string>
+    <string name="place_near_to">Di bawah ini tempat-tempat terdekat dari </string>
+    <string name="next_txt">Berikutnya</string>
+    <string name="pick_aPlace">Tolong pilih tempat</string>
+    <string name="not_found">Tidak ditemukan</string>
+    <string name="forty5_minute">45 menit - 2 jam</string>
+    <string name="based_on">Subjektif dan menurut keinginan pribadi</string>
+    <string name="one_two_hour">1 - 2 jam</string>
+    <string name="depend_onNeeds">Sangat tergantung kebutuhan</string>
+    <string name="thirty_oneHour">30 menit - 1 jam</string>
+    <string name="thirty2Hour">30 menit - 2 jam</string>
+    <string name="pickTheTime">Pilih waktu</string>
+    <string name="rekomen_time">Rekomendasi waktu:""</string>
+    <string name="data_not_found">Data jam buka tidak ditemukan</string>
+    <string name="allowAnyTime">Dapat memilih jam berapapun</string>
+    <string name="outside_business">Waktu yang dipilih diluar jam kerja</string>
+    <string name="justnotAvail">Jam buka tidak tersedia</string>
+    <string name="invalidTimeSlot">Slot waktu salah</string>
+    <string name="invalid_opening_format">Format jam buka salah</string>
+    <string name="itinerary_updated">Itinerari diubah</string>
+    <string name="iterUploadSuccess">Itinerari berhasil diunggah</string>
+    <string name="failIterUpload">Gagal mengunggah itinerari karena</string>
+    <string name="iterUpdateSuccess">Itinerari berhasil diubah</string>
+    <string name="iterFailUpdate">Gagal merubah itinerari karena</string>
 
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.app.AlertDialog;\nimport android.app.DatePickerDialog;\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.location.Location;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.text.Editable;\nimport android.text.TextUtils;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.ContextThemeWrapper;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.LinearLayout;\nimport android.widget.RelativeLayout;\nimport android.widget.TextView;\nimport android.widget.TimePicker;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.cardview.widget.CardView;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.android.volley.Request;\nimport com.android.volley.RequestQueue;\nimport com.android.volley.toolbox.JsonObjectRequest;\nimport com.android.volley.toolbox.Volley;\nimport com.binus.pekalongancityguide.Adapter.IterAdapter;\nimport com.binus.pekalongancityguide.ItemTemplate.Destination;\nimport com.binus.pekalongancityguide.Misc.ToastUtils;\nimport com.binus.pekalongancityguide.R;\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.target.SimpleTarget;\nimport com.bumptech.glide.request.transition.Transition;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Collections;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Locale;\n\nimport static android.content.ContentValues.TAG;\nimport static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;\nimport static com.binus.pekalongancityguide.Misc.Constants.FIREBASE_DATABASE_URL;\n\npublic class AddItinerary extends Fragment implements IterAdapter.OnItemLongClickListener {\n    private String categoryId, category, startDate, endDate, openingHours, startTime, endTime, selectedItemName, title, subtitle, placeDate, selectedItemId, placeCategory;\n    private int startHour, startMinute, endHour, endMinute, selectedItemsInitialSize, startYear, startMonth, startDay, dialogCount, selectedItemIndex;\n    private double latitude, longitude;\n    private long startDateMillis, endDateMillis;\n    private boolean cardViewSelected = false;\n    public IterAdapter iterAdapter;\n    private RecyclerView iterRV;\n    private Button addIter;\n    private CardView cardView;\n    private SimpleDateFormat format;\n    private EditText startEt, endEt, dateEt;\n    private ImageButton startBtn, endBtn, dateBtn;\n    private RelativeLayout selectLayout;\n    private LinearLayout containerLayout;\n    private TextView selectTv;\n    private ImageButton selectCancel;\n    public ArrayList<Destination> destinationArrayList, selectedItems;\n    private final List<String> openHours = new ArrayList<>();\n    private final List<String> closeHours = new ArrayList<>();\n    private View view;\n    private Calendar calendar;\n    private AlertDialog dialog;\n    private FirebaseDatabase database;\n    private FirebaseAuth firebaseAuth;\n    private ItineraryPager itineraryPager;\n\n\n    public AddItinerary() {\n    }\n\n    public static AddItinerary newInstance(String categoryId, String categoryName, String categoryUid, String startDate, String endDate, Double latitude, Double longitude) {\n        AddItinerary fragment = new AddItinerary();\n        Bundle args = new Bundle();\n        args.putString(\"categoryId\", categoryId);\n        args.putString(\"category\", categoryName);\n        args.putString(\"uid\", categoryUid);\n        args.putString(\"startDate\", startDate);\n        args.putString(\"endDate\", endDate);\n        args.putDouble(\"latitude\", latitude);\n        args.putDouble(\"longitude\", longitude);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    public static AddItinerary getInstance() {\n        return new AddItinerary();\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        database = FirebaseDatabase.getInstance(FIREBASE_DATABASE_URL);\n        ToastUtils.setToastEnabled(true);\n        if (getArguments() != null) {\n            categoryId = getArguments().getString(\"categoryId\");\n            category = getArguments().getString(\"category\");\n            startDate = getArguments().getString(\"startDate\");\n            endDate = getArguments().getString(\"endDate\");\n            latitude = getArguments().getDouble(\"latitude\");\n            longitude = getArguments().getDouble(\"longitude\");\n\n            Log.d(TAG, \"newInstance: categoryId=\" + categoryId + \", startDate=\" + startDate + \", endDate=\" + endDate + \"\\n latitude, longitude\" + latitude + longitude);\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        view = inflater.inflate(R.layout.fragment_add_itinerary, container, false);\n        firebaseAuth = FirebaseAuth.getInstance();\n        init();\n        checkSelect();\n        EditText iterSearch = view.findViewById(R.id.search_iter);\n        iterSearch.addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n                try {\n                    iterAdapter.getFilter().filter(s);\n                }catch (Exception e){\n                    Log.d(TAG,\"onTextChanged :\"+e.getMessage());\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n        if (category.equals(\"All\")) {\n            loadDestinations();\n        } else {\n            loadCategoriedDestination();\n        }\n        addIter.setOnClickListener(v -> {\n            showInputDialog();\n        });\n        selectCancel.setOnClickListener(v -> iterAdapter.exitSelectMode());\n        return view;\n    }\n\n    private void showInputDialog() {\n        ToastUtils.setToastEnabled(true);\n        selectedItems = iterAdapter.getSelectedItems();\n        selectedItemsInitialSize = selectedItems.size();\n        dialogCount++;\n        if (dialogCount == 1) {\n            title = \"Pick starting location\";\n            subtitle = \"Below are the places nearest to your current location\";\n        } else {\n            title = \"Pick the next location\";\n            subtitle = \"Below are the places nearest to \" + selectedItemName;\n        }\n\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n\n        View view = LayoutInflater.from(getContext()).inflate(R.layout.dialog_input_details, null);\n        builder.setView(view);\n\n        containerLayout = view.findViewById(R.id.container_layout);\n        RelativeLayout timePickerLayout = view.findViewById(R.id.time_picker_container);\n\n        containerLayout.setVisibility(View.VISIBLE);\n        timePickerLayout.setVisibility(View.GONE);\n\n        Button addBtn = view.findViewById(R.id.add_iter_button);\n        TextView titleText = view.findViewById(R.id.dialog_title);\n        TextView subtitleText = view.findViewById(R.id.dialog_subtitle);\n\n        RelativeLayout.LayoutParams containerLayoutParams = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);\n        containerLayoutParams.addRule(RelativeLayout.BELOW, subtitleText.getId());\n        containerLayout.setLayoutParams(containerLayoutParams);\n\n        RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);\n        layoutParams.addRule(RelativeLayout.BELOW, containerLayout.getId());\n        layoutParams.width = ViewGroup.LayoutParams.MATCH_PARENT;\n        layoutParams.height = ViewGroup.LayoutParams.WRAP_CONTENT;\n        addBtn.setLayoutParams(layoutParams);\n\n        addBtn.setText(\"Next\");\n        titleText.setText(title);\n        subtitleText.setText(subtitle);\n\n        Collections.sort(selectedItems, (d1, d2) -> {\n            double distance1 = calculateDistance(latitude, longitude, Double.parseDouble(d1.getLatitude()), Double.parseDouble(d1.getLongitude()));\n            double distance2 = calculateDistance(latitude, longitude, Double.parseDouble(d2.getLatitude()), Double.parseDouble(d2.getLongitude()));\n            return Double.compare(distance1, distance2);\n        });\n\n        int maxItems = Math.min(selectedItems.size(), 3);\n        for (int i = 0; i < maxItems; i++) {\n            Destination destination = selectedItems.get(i);\n            View itemView = createItemView(destination);\n            containerLayout.addView(itemView);\n        }\n\n        AlertDialog dialog = builder.create();\n        dialog.setOnDismissListener(dialog1 -> cardViewSelected = false);\n        addBtn.setOnClickListener(v -> {\n            if (cardViewSelected) {\n                dialog.dismiss();\n                showTimePickerDialog();\n            } else {\n                ToastUtils.showToast(getContext(), \"Please pick a place\", Toast.LENGTH_SHORT);\n            }\n        });\n\n        dialog.show();\n    }\n\n    private View createItemView(Destination destination) {\n        View itemView = LayoutInflater.from(getContext()).inflate(R.layout.item_input_details, null);\n\n        CardView cardView = itemView.findViewById(R.id.add_item_cardview);\n        LinearLayout layoutBG = itemView.findViewById(R.id.layout_bg);\n        TextView placeText = itemView.findViewById(R.id.placeNameTextView);\n        TextView distanceTv = itemView.findViewById(R.id.distanceTextView);\n        TextView durationTv = itemView.findViewById(R.id.durationTextView);\n\n        double destinationLatitude = Double.parseDouble(destination.getLatitude());\n        double destinationLongitude = Double.parseDouble(destination.getLongitude());\n        placeText.setText(destination.getTitle());\n        float distance = calculateDistance(latitude, longitude, destinationLatitude, destinationLongitude);\n        String distanceString = (distance < 1) ? ((int) (distance * 1000)) + \" m\" : String.format(Locale.getDefault(), \"%.2f km\", distance);\n        distanceTv.setText(distanceString);\n\n        calculateDuration(latitude, longitude, destinationLatitude, destinationLongitude, (durationText, durationTextView) -> durationTextView.setText(durationText), durationTv);\n\n        RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(\n                RelativeLayout.LayoutParams.MATCH_PARENT,\n                RelativeLayout.LayoutParams.WRAP_CONTENT\n        );\n        layoutParams.setMargins(0, 10, 0, 10);\n        cardView.setLayoutParams(layoutParams);\n\n        loadImage(destination, layoutBG);\n\n        cardView.setOnClickListener(v -> {\n            for (int i = 0; i < containerLayout.getChildCount(); i++) {\n                View childView = containerLayout.getChildAt(i);\n                unselectItem(childView);\n            }\n            selectedItemIndex = containerLayout.indexOfChild(itemView);\n            selectedItemId = selectItem(itemView, destination.getId());\n            latitude = Double.parseDouble(destination.getLatitude());\n            longitude = Double.parseDouble(destination.getLongitude());\n            placeCategory = destination.getCategoryId();\n        });\n\n        return itemView;\n    }\n\n    private String selectItem(View itemView, String id) {\n        cardView = itemView.findViewById(R.id.add_item_cardview);\n        LinearLayout layoutBG = itemView.findViewById(R.id.layout_bg);\n        TextView placeText = itemView.findViewById(R.id.placeNameTextView);\n        selectedItemName = placeText.getText().toString();\n\n        cardViewSelected = true;\n        cardView.setBackground(ContextCompat.getDrawable(itemView.getContext(), R.drawable.selected_item_background));\n        layoutBG.setBackgroundTintList(ContextCompat.getColorStateList(itemView.getContext(), R.color.grayishTint));\n        return id;\n    }\n\n    private void unselectItem(View itemView) {\n        cardView = itemView.findViewById(R.id.add_item_cardview);\n        LinearLayout layoutBG = itemView.findViewById(R.id.layout_bg);\n\n        cardViewSelected = false;\n        cardView.setBackground(ContextCompat.getDrawable(itemView.getContext(), R.drawable.unselected_item_background));\n        layoutBG.setBackgroundTintList(null);\n    }\n\n    private void handleSelectedItem(ArrayList<Destination> selectedItems) {\n        if (selectedItems.size() > 0) {\n            showInputDialog();\n        } else {\n            iterAdapter.exitSelectMode();\n        }\n    }\n\n    private void showTimePickerDialog() {\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n\n        View view = LayoutInflater.from(getContext()).inflate(R.layout.dialog_input_details, null);\n        builder.setView(view);\n\n        containerLayout = view.findViewById(R.id.container_layout);\n        RelativeLayout timePickerLayout = view.findViewById(R.id.time_picker_container);\n        Button addBtn = view.findViewById(R.id.add_iter_button);\n        TextView titleText = view.findViewById(R.id.dialog_title);\n        TextView subtitleText = view.findViewById(R.id.dialog_subtitle);\n\n        containerLayout.setVisibility(View.GONE);\n        timePickerLayout.setVisibility(View.VISIBLE);\n\n        RelativeLayout.LayoutParams pickerLayoutParams = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);\n        pickerLayoutParams.addRule(RelativeLayout.BELOW, subtitleText.getId());\n        timePickerLayout.setLayoutParams(pickerLayoutParams);\n\n        RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);\n        layoutParams.addRule(RelativeLayout.BELOW, timePickerLayout.getId());\n        layoutParams.width = ViewGroup.LayoutParams.MATCH_PARENT;\n        layoutParams.height = ViewGroup.LayoutParams.WRAP_CONTENT;\n        addBtn.setLayoutParams(layoutParams);\n\n        dateEt = view.findViewById(R.id.date_et);\n        startEt = view.findViewById(R.id.starttime_et);\n        endEt = view.findViewById(R.id.endtime_et);\n        dateBtn = view.findViewById(R.id.datepicker_btn);\n        startBtn = view.findViewById(R.id.startpicker_btn);\n        endBtn = view.findViewById(R.id.endpicker_btn);\n\n        if (startDate.equals(endDate)) {\n            dateEt.setText(startDate);\n            dateEt.setEnabled(false);\n            dateBtn.setEnabled(false);\n            startBtn.setEnabled(true);\n            startEt.setEnabled(true);\n            getDateOfWeek(selectedItems.get(selectedItemIndex));\n        } else {\n            startBtn.setEnabled(false);\n            startEt.setEnabled(false);\n            endBtn.setEnabled(false);\n            endEt.setEnabled(false);\n        }\n\n        dateBtn.setOnClickListener(v -> showCalendar());\n        dateEt.setOnClickListener(v -> showCalendar());\n        startBtn.setOnClickListener(v -> showStartTimer());\n        startEt.setOnClickListener(v -> showStartTimer());\n        endBtn.setOnClickListener(v -> showEndTimer());\n        endEt.setOnClickListener(v -> showEndTimer());\n\n        if (placeCategory.equals(\"1680077442322\")) {\n            subtitle = \"30 Minutes - 2 Hour\";\n        } else if (placeCategory.equals(\"1680077753090\") || placeCategory.equals(\"1681812366209\")) {\n            subtitle = \"30 Minutes - 1 Hour\";\n        } else if (placeCategory.equals(\"1680166171816\") || placeCategory.equals(\"1681807033132\")) {\n            subtitle = \"Vary depend on needs\";\n        } else if (placeCategory.equals(\"1680167384847\") || placeCategory.equals(\"1681811119599\")) {\n            subtitle = \"1 Hour - 2 Hour\";\n        } else if (placeCategory.equals(\"1682060935295\") || placeCategory.equals(\"1680077486439\")) {\n            subtitle = \"Subjective and can vary based on personal preferences\";\n        } else if (placeCategory.equals(\"1682061580514\")) {\n            subtitle = \"45 Minutes - 2 Hour\";\n        } else {\n            subtitle = \"Not Found\";\n        }\n\n        addBtn.setText(\"Add to Itinerary\");\n        titleText.setText(\"Pick the time\");\n        subtitleText.setText(\"Recommended time: \" + subtitle);\n\n        dialog = builder.create();\n        dialog.setOnDismissListener(dialog1 -> {\n            openHours.clear();\n            closeHours.clear();\n        });\n        addBtn.setOnClickListener(v -> validateData(dateEt, startEt, endEt));\n\n        dialog.show();\n    }\n\n    private void getDateOfWeek(Destination destination) {\n        try {\n            Date startDateObj = format.parse(startDate);\n            Calendar calendar = Calendar.getInstance();\n            calendar.setTime(startDateObj);\n            int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);\n            getOpeningHours(dayOfWeek, destination);\n            openHours.clear();\n            closeHours.clear();\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n    }\n\n    private void getOpeningHours(int dayOfWeek, Destination destination) {\n        DatabaseReference openingHoursRef = database.getReference(\"Destination\");\n        selectedItemId = destination.getId();\n        Log.d(TAG, \"SELECTED ITEM ID: \" + selectedItemId);\n        openingHoursRef.child(selectedItemId).child(\"openingHours\").addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                openHours.clear();\n                closeHours.clear();\n                int newDoW = dayOfWeek - 2;\n                if (newDoW == -1) {\n                    newDoW = 6;\n                }\n                if (dataSnapshot.exists()) {\n                    openingHours = dataSnapshot.child(String.valueOf(newDoW)).getValue(String.class);\n                    Log.d(TAG, \"CHECK DAY: \" + (newDoW));\n                    Log.d(TAG, \"OPENING HOURS: \" + openingHours);\n\n                    if (openingHours != null) {\n                        String[] parts = openingHours.split(\": \");\n                        if (parts.length == 2) {\n                            String timeRange = parts[1];\n\n                            if (timeRange.equals(\"Open 24 hours\")) {\n                                startTime = \"12:00 AM\";\n                                endTime = \"11:59 PM\";\n                                openHours.add(startTime);\n                                closeHours.add(endTime);\n                            } else if (timeRange.equals(\"Closed\")) {\n                                startTime = \"\";\n                                endTime = \"\";\n                                openingHours = \"Closed\";\n                                ToastUtils.showToast(getContext(), \"Opening hours not available\", Toast.LENGTH_SHORT);\n                                openHours.add(startTime);\n                                closeHours.add(endTime);\n                            } else {\n                                String[] timeSlots = timeRange.split(\", \");\n\n                                for (String slot : timeSlots) {\n                                    String[] times = slot.split(\" – \");\n\n                                    if (times.length == 2) {\n                                        String startTimeSlot = times[0];\n                                        String endTimeSlot = times[1];\n\n                                        openHours.add(startTimeSlot);\n                                        closeHours.add(endTimeSlot);\n                                    } else {\n                                        ToastUtils.showToast(getContext(), \"Invalid time slot: \" + slot, Toast.LENGTH_SHORT);\n                                    }\n                                }\n                            }\n                        } else {\n                            ToastUtils.showToast(getContext(), \"Invalid opening hours format\", Toast.LENGTH_SHORT);\n                        }\n                    } else {\n                        startTime = \"\";\n                        endTime = \"\";\n                        openingHours = \"Closed\";\n                        ToastUtils.showToast(getContext(), \"Opening hours not available\", Toast.LENGTH_SHORT);\n                        openHours.add(startTime);\n                        closeHours.add(endTime);\n                    }\n                    Log.d(TAG, \"Open hour: \" + openHours);\n                    Log.d(TAG, \"Close hour: \" + closeHours);\n                } else {\n                    startTime = \"12:00 AM\";\n                    endTime = \"11:59 PM\";\n                    openingHours = \"Not Found\";\n                    ToastUtils.showToast(getContext(), \"Opening hours data not found\", Toast.LENGTH_SHORT);\n                    new Handler().postDelayed(() -> {\n                        ToastUtils.showToast(getContext(), \"Allowing any time to be selected\", Toast.LENGTH_SHORT);\n                        openHours.add(startTime);\n                        closeHours.add(endTime);\n                    }, 2000);\n                }\n                Log.d(TAG, destination.getTitle() + \" OPENING HOURS: \" + openingHours);\n                destination.setOpen(openingHours == null || !openingHours.equals(\"Closed\"));\n                Log.d(TAG, \"PLACE NAME: \" + destination.getTitle() + \" DESTI ID: \" + destination.getId() + \" IS OPEN: \" + destination.isOpen() + \" OPENING HOURS: \" + openingHours);\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n            }\n        });\n    }\n\n    private void showCalendar() {\n        dateEt.setText(\"\");\n        startYear = calendar.get(Calendar.YEAR);\n        startMonth = calendar.get(Calendar.MONTH);\n        startDay = calendar.get(Calendar.DAY_OF_MONTH);\n\n        DatePickerDialog dialog = new DatePickerDialog(getContext(), (dateView, year, month, dayOfMonth) -> {\n            startYear = year;\n            startMonth = month;\n            startDay = dayOfMonth;\n            calendar.set(startYear, startMonth, startDay);\n\n            placeDate = format.format(calendar.getTime());\n            Log.d(TAG, \"showCalendar: \" + placeDate);\n\n            dateEt.setText(placeDate);\n            startBtn.setEnabled(true);\n            startEt.setEnabled(true);\n\n            int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);\n\n            getOpeningHours(dayOfWeek, selectedItems.get(selectedItemIndex));\n        }, startYear, startMonth, startDay);\n\n        try {\n            Date startDateDate = format.parse(startDate);\n            startDateMillis = startDateDate.getTime();\n            Date endDateDate = format.parse(endDate);\n            endDateMillis = endDateDate.getTime();\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n\n        dialog.getDatePicker().setMinDate(startDateMillis);\n        dialog.getDatePicker().setMaxDate(endDateMillis);\n\n        dialog.getWindow().setBackgroundDrawableResource(R.color.palette_4);\n        dialog.show();\n    }\n\n    private void showStartTimer() {\n        startEt.setText(\"\");\n        if (openHours.isEmpty()) {\n            ToastUtils.showToast(getContext(), \"Opening hours data is not available\", Toast.LENGTH_SHORT);\n            return;\n        }\n\n        LayoutInflater inflater = LayoutInflater.from(getContext());\n        View customView = inflater.inflate(R.layout.dialog_custom_title, null);\n        TextView dialogRealTitle = customView.findViewById(R.id.dialog_title);\n        TextView dialogTitle = customView.findViewById(R.id.dialog_subtitle);\n        ViewGroup timePickerContainer = customView.findViewById(R.id.time_picker_container);\n        dialogRealTitle.setText(\"Select start time\");\n\n        String dialogTitleText = String.format(Locale.getDefault(), \"Opening Hour: %s\", openingHours);\n        dialogTitle.setText(dialogTitleText);\n\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext())\n                .setView(customView)\n                .setNegativeButton(\"Cancel\", null);\n\n        TimePicker timePicker = new TimePicker(new ContextThemeWrapper(getContext(), R.style.TimePickerStyle));\n        timePicker.setIs24HourView(false);\n\n        timePickerContainer.addView(timePicker);\n\n        builder.setPositiveButton(\"OK\", (dialogInterface, which) -> {\n            int selectedHour = timePicker.getCurrentHour();\n            int selectedMinute = timePicker.getCurrentMinute();\n\n            boolean withinOpeningHours = false;\n\n            for (int i = 0; i < openHours.size(); i++) {\n                String openingTime = openHours.get(i);\n                String closingTime = closeHours.get(i);\n\n                if (openingTime == null || closingTime == null) {\n                    ToastUtils.showToast(getContext(), \"Opening hours data is not available\", Toast.LENGTH_SHORT);\n                    return;\n                }\n\n                int openingHour = convertTo24HourFormat(openingTime);\n                int openingMinute = Integer.parseInt(openingTime.split(\":\")[1].split(\" \")[0]);\n\n                int closingHour = convertTo24HourFormat(closingTime);\n                int closingMinute = Integer.parseInt(closingTime.split(\":\")[1].split(\" \")[0]);\n\n                if (closingHour < openingHour || (closingHour == openingHour && closingMinute < openingMinute)) {\n                    if (selectedHour > openingHour || (selectedHour == openingHour && selectedMinute >= openingMinute)) {\n                        withinOpeningHours = true;\n                        break;\n                    }\n                    if (selectedHour < closingHour || (selectedHour == closingHour && selectedMinute <= closingMinute)) {\n                        withinOpeningHours = true;\n                        break;\n                    }\n                } else {\n                    if (selectedHour > openingHour || (selectedHour == openingHour && selectedMinute >= openingMinute)) {\n                        if (selectedHour < closingHour || (selectedHour == closingHour && selectedMinute <= closingMinute)) {\n                            withinOpeningHours = true;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (withinOpeningHours) {\n                startHour = selectedHour;\n                startMinute = selectedMinute;\n\n                if (startHour < 12) {\n                    startEt.setText(String.format(Locale.getDefault(), \"%d:%02d AM\", startHour, startMinute));\n                } else if (startHour == 12) {\n                    startEt.setText(String.format(Locale.getDefault(), \"12:%02d PM\", startMinute));\n                } else {\n                    startEt.setText(String.format(Locale.getDefault(), \"%d:%02d PM\", startHour - 12, startMinute));\n                }\n\n                endEt.setEnabled(true);\n                endBtn.setEnabled(true);\n            } else {\n                ToastUtils.showToast(getContext(), \"Selected time is outside business hours\", Toast.LENGTH_SHORT);\n            }\n        });\n\n        AlertDialog alertDialog = builder.create();\n        alertDialog.show();\n    }\n\n    private void showEndTimer() {\n        endEt.setText(\"\");\n        if (openHours.isEmpty()) {\n            ToastUtils.showToast(getContext(), \"Opening hours data is not available\", Toast.LENGTH_SHORT);\n            return;\n        }\n\n        LayoutInflater inflater = LayoutInflater.from(getContext());\n        View customView = inflater.inflate(R.layout.dialog_custom_title, null);\n        TextView dialogRealTitle = customView.findViewById(R.id.dialog_title);\n        TextView dialogTitle = customView.findViewById(R.id.dialog_subtitle);\n        ViewGroup timePickerContainer = customView.findViewById(R.id.time_picker_container);\n        dialogRealTitle.setText(\"Select end time\");\n\n        String dialogTitleText = String.format(Locale.getDefault(), \"Opening Hour: %s\", openingHours);\n        dialogTitle.setText(dialogTitleText);\n\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext())\n                .setView(customView)\n                .setNegativeButton(\"Cancel\", null);\n\n        TimePicker timePicker = new TimePicker(new ContextThemeWrapper(getContext(), R.style.TimePickerStyle));\n        timePicker.setIs24HourView(false);\n\n        timePickerContainer.addView(timePicker);\n\n        builder.setPositiveButton(\"OK\", (dialogInterface, which) -> {\n            int selectedHour = timePicker.getCurrentHour();\n            int selectedMinute = timePicker.getCurrentMinute();\n\n            boolean withinOpeningHours = false;\n\n            for (int i = 0; i < openHours.size(); i++) {\n                String openingTime = openHours.get(i);\n                String closingTime = closeHours.get(i);\n\n                if (openingTime == null || closingTime == null) {\n                    ToastUtils.showToast(getContext(), \"Opening hours data is not available\", Toast.LENGTH_SHORT);\n                    return;\n                }\n\n                int closingHour = convertTo24HourFormat(closingTime);\n                int closingMinute = Integer.parseInt(closingTime.split(\":\")[1].split(\" \")[0]);\n\n                if (closingHour < startHour || (closingHour == startHour && closingMinute < startMinute)) {\n                    if (selectedHour > startHour || (selectedHour == startHour && selectedMinute >= startMinute)) {\n                        withinOpeningHours = true;\n                        break;\n                    }\n                    if (selectedHour < closingHour || (selectedHour == closingHour && selectedMinute <= closingMinute)) {\n                        withinOpeningHours = true;\n                        break;\n                    }\n                } else {\n                    if (selectedHour > startHour || (selectedHour == startHour && selectedMinute >= startMinute)) {\n                        if (selectedHour < closingHour || (selectedHour == closingHour && selectedMinute <= closingMinute)) {\n                            withinOpeningHours = true;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (withinOpeningHours) {\n                endHour = selectedHour;\n                endMinute = selectedMinute;\n\n                if (endHour < 12) {\n                    endEt.setText(String.format(Locale.getDefault(), \"%d:%02d AM\", endHour, endMinute));\n                } else if (endHour == 12) {\n                    endEt.setText(String.format(Locale.getDefault(), \"12:%02d PM\", endMinute));\n                } else {\n                    endEt.setText(String.format(Locale.getDefault(), \"%d:%02d PM\", endHour - 12, endMinute));\n                }\n            } else {\n\n                ToastUtils.showToast(getContext(), \"Selected time is outside business hours\", Toast.LENGTH_SHORT);\n            }\n        });\n\n        AlertDialog alertDialog = builder.create();\n        alertDialog.show();\n    }\n\n    private int convertTo24HourFormat(String time) {\n        if (time == null) {\n            return 0;\n        }\n\n        String[] parts = time.split(\":\");\n        if (parts.length < 2) {\n            return 0;\n        }\n\n        int hour = Integer.parseInt(parts[0]);\n\n        if (parts[1].contains(\" \")) {\n            String amPm = parts[1].split(\" \")[1];\n            if (amPm.equalsIgnoreCase(\"PM\") && hour != 12) {\n                hour += 12;\n            } else if (amPm.equalsIgnoreCase(\"AM\") && hour == 12) {\n                hour = 0;\n            }\n        }\n\n        return hour;\n    }\n\n    private void loadImage(Destination destination, LinearLayout layoutBG) {\n        String imageUrl = destination.getUrl();\n        Glide.with(layoutBG.getContext())\n                .asBitmap()\n                .load(imageUrl)\n                .placeholder(R.drawable.logo)\n                .into(new SimpleTarget<Bitmap>() {\n                    @Override\n                    public void onResourceReady(@NonNull Bitmap resource, @Nullable Transition<? super Bitmap> transition) {\n                        BitmapDrawable drawable = new BitmapDrawable(layoutBG.getResources(), resource);\n                        layoutBG.setBackground(drawable);\n                    }\n\n                    @Override\n                    public void onLoadFailed(@Nullable Drawable errorDrawable) {\n                        super.onLoadFailed(errorDrawable);\n                        Log.d(TAG, \"on Failure: failed to get file from URL\");\n                    }\n                });\n    }\n\n    private void init() {\n        calendar = Calendar.getInstance();\n        iterRV = view.findViewById(R.id.recycler_view);\n        addIter = view.findViewById(R.id.add_iter_btn);\n        selectTv = view.findViewById(R.id.select_tv);\n        selectLayout = view.findViewById(R.id.select_layout);\n        selectCancel = view.findViewById(R.id.select_cancel);\n        format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n        dialogCount = 0;\n    }\n\n    private void loadDestinations() {\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(FIREBASE_DATABASE_URL).getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                destinationArrayList.clear();\n                openHours.clear();\n                closeHours.clear();\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                    Destination destination = dataSnapshot.getValue(Destination.class);\n                    destination.setOpen(true);\n                    if (startDate.equals(endDate)) {\n                        getDateOfWeek(destination);\n                        ToastUtils.setToastEnabled(false);\n                    }\n                    destinationArrayList.add(destination);\n                    sortDestination(destinationArrayList);\n                }\n                if (iterAdapter == null) {\n                    initIterAdapter();\n                } else {\n                    iterAdapter.notifyDataSetChanged();\n                }\n            }\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n                Log.e(TAG, \"Error: \" + error.getMessage());\n            }\n        });\n    }\n\n    private void loadCategoriedDestination(){\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(FIREBASE_DATABASE_URL).getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.orderByChild(\"categoryId\").equalTo(categoryId)\n                .addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        destinationArrayList.clear();\n                        openHours.clear();\n                        closeHours.clear();\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                            Destination destination = dataSnapshot.getValue(Destination.class);\n                            if (startDate.equals(endDate)) {\n                                getDateOfWeek(destination);\n                                ToastUtils.setToastEnabled(false);\n                            }\n                            destinationArrayList.add(destination);\n                            sortDestination(destinationArrayList);\n                            openHours.clear();\n                            closeHours.clear();\n                        }\n                        if (iterAdapter == null) {\n                            initIterAdapter();\n                        } else {\n                            iterAdapter.notifyDataSetChanged();\n                        }\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n\n                    }\n                });\n    }\n\n    private void sortDestination(ArrayList<Destination> destinationArrayList) {\n        Collections.sort(destinationArrayList, (destination1, destination2) -> {\n            String title1 = destination1.getTitle().toLowerCase();\n            String title2 = destination2.getTitle().toLowerCase();\n            return title1.compareTo(title2);\n        });\n    }\n\n    public void checkSelect() {\n        if (iterAdapter != null) {\n            selectedItems = iterAdapter.getSelectedItems();\n            int counter;\n            if (selectedItems.size() < 1) {\n                selectLayout.setVisibility(View.GONE);\n                addIter.setVisibility(View.INVISIBLE);\n            } else if (selectedItems.size() == 1) {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" item selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            } else {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" items selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            }\n        } else {\n            addIter.setVisibility(View.INVISIBLE);\n            selectLayout.setVisibility(View.GONE);\n        }\n    }\n\n    private void validateData(EditText dateEt, EditText startTimeEt, EditText endTimeEt) {\n        placeDate = dateEt.getText().toString().trim();\n        startTime = startTimeEt.getText().toString().trim();\n        endTime = endTimeEt.getText().toString().trim();\n        boolean allFieldsFilled = true;\n\n        if (TextUtils.isEmpty(placeDate)) {\n            dateEt.setError(getContext().getString(R.string.choose_date));\n            allFieldsFilled = false;\n        } else {\n            dateEt.setError(null);\n        }\n\n        if (TextUtils.isEmpty(startTime)) {\n            startTimeEt.setError(getContext().getString(R.string.choose_start));\n            allFieldsFilled = false;\n        } else {\n            startTimeEt.setError(null);\n        }\n\n        if (TextUtils.isEmpty(endTime)) {\n            endTimeEt.setError(getContext().getString(R.string.choose_end));\n            allFieldsFilled = false;\n        } else {\n            endTimeEt.setError(null);\n        }\n\n        if (allFieldsFilled) {\n            dialog.dismiss();\n            uploadToDB(placeDate, startTime, endTime);\n            ToastUtils.showToast(getContext(), \"itinerary updated\", Toast.LENGTH_SHORT);\n        }\n    }\n\n    private void uploadToDB(String date, String startTime, String endTime) {\n        String uid = firebaseAuth.getUid();\n        DatabaseReference reference = FirebaseDatabase.getInstance(FIREBASE_DATABASE_URL)\n                .getReference(\"Destination\");\n        reference.child(selectedItemId).addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                String placeID = \"\" + snapshot.child(\"placeId\").getValue();\n                Log.d(TAG, \"placeID: \" + placeID);\n                HashMap<String, Object> hashMap = new HashMap<>();\n                hashMap.put(\"startTime\", startTime);\n                hashMap.put(\"endTime\", endTime);\n                hashMap.put(\"date\", date);\n                hashMap.put(\"destiId\", selectedItemId);\n                DatabaseReference itineraryRef = FirebaseDatabase.getInstance(FIREBASE_DATABASE_URL)\n                        .getReference(\"Users\")\n                        .child(uid)\n                        .child(\"itinerary\");\n\n                String itineraryId = itineraryRef.push().getKey();\n\n                hashMap.put(\"itineraryId\", itineraryId);\n\n                itineraryRef.child(itineraryId).setValue(hashMap)\n                        .addOnSuccessListener(aVoid -> {\n                            selectedItems.remove(selectedItemIndex);\n                            handleSelectedItem(selectedItems);\n                            ToastUtils.showToast(getContext(), \"Itinerary uploaded successfully\", Toast.LENGTH_LONG);\n                        })\n                        .addOnFailureListener(e -> {\n                            ToastUtils.showToast(getContext(), \"Data upload failed due to \" + e.getMessage(), Toast.LENGTH_SHORT);\n                            Log.d(TAG, \"on Failure: \" + e.getMessage());\n                        });\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n            }\n        });\n    }\n\n    public void initIterAdapter() {\n        iterAdapter = new IterAdapter(getContext(), destinationArrayList, this, this, itineraryPager);\n        iterRV.setAdapter(iterAdapter);\n    }\n\n    @Override\n    public void onItemLongClick(Destination destination) {\n    }\n\n    private float calculateDistance(double lat1, double lon1, double lat2, double lon2) {\n        float[] results = new float[1];\n        Location location1 = new Location(\"\");\n        location1.setLatitude(lat1);\n        location1.setLongitude(lon1);\n        Location location2 = new Location(\"\");\n        location2.setLatitude(lat2);\n        location2.setLongitude(lon2);\n        Location.distanceBetween(location1.getLatitude(), location1.getLongitude(),\n                location2.getLatitude(), location2.getLongitude(), results);\n        return results[0] / 1000;\n    }\n\n    private void calculateDuration(double lat1, double lon1, double lat2, double lon2, AddItinerary.DurationCallback callback, TextView durationTv) {\n        String url = \"https://maps.googleapis.com/maps/api/directions/json?origin=\" + lat1 + \",\" + lon1 + \"&destination=\" + lat2 + \",\" + lon2 + \"&key=\" + MAPS_API_KEY;\n\n        if (isAdded() && getContext() != null) {\n            RequestQueue queue = Volley.newRequestQueue(getContext().getApplicationContext());\n            JsonObjectRequest request = new JsonObjectRequest(Request.Method.GET, url, null, response -> {\n                try {\n                    JSONArray routes = response.getJSONArray(\"routes\");\n                    if (routes.length() > 0) {\n                        JSONObject route = routes.getJSONObject(0);\n                        JSONArray legs = route.getJSONArray(\"legs\");\n                        JSONObject leg = legs.getJSONObject(0);\n                        JSONObject duration = leg.getJSONObject(\"duration\");\n                        String durationText = duration.getString(\"text\");\n                        Log.d(TAG, \"Duration: \" + durationText);\n                        callback.onDurationReceived(durationText, durationTv);\n                    } else {\n                        Log.e(TAG, \"No routes found\");\n                        callback.onDurationReceived(\"No routes found\", durationTv);\n                    }\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }, error -> {\n                Log.e(TAG, \"Error calculating travel duration: \" + error.getMessage());\n                callback.onDurationReceived(\"Error calculating travel duration\", durationTv);\n            });\n            queue.add(request);\n        }\n    }\n\n    public interface DurationCallback {\n        void onDurationReceived(String durationText, TextView durationTv);\n    }\n\n    public String getStartDate() {\n        return startDate;\n    }\n\n    public String getEndDate() {\n        return endDate;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(date 1684921675374)
@@ -180,11 +180,11 @@
         selectedItemsInitialSize = selectedItems.size();
         dialogCount++;
         if (dialogCount == 1) {
-            title = "Pick starting location";
-            subtitle = "Below are the places nearest to your current location";
+            title = getString(R.string.pick_start);
+            subtitle = getString(R.string.below_are);
         } else {
-            title = "Pick the next location";
-            subtitle = "Below are the places nearest to " + selectedItemName;
+            title = getString(R.string.pick_next);
+            subtitle = getString(R.string.place_near_to) + selectedItemName;
         }
 
         AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
@@ -212,7 +212,7 @@
         layoutParams.height = ViewGroup.LayoutParams.WRAP_CONTENT;
         addBtn.setLayoutParams(layoutParams);
 
-        addBtn.setText("Next");
+        addBtn.setText(R.string.next_txt);
         titleText.setText(title);
         subtitleText.setText(subtitle);
 
@@ -236,7 +236,7 @@
                 dialog.dismiss();
                 showTimePickerDialog();
             } else {
-                ToastUtils.showToast(getContext(), "Please pick a place", Toast.LENGTH_SHORT);
+                ToastUtils.showToast(getContext(), getString(R.string.pick_aPlace), Toast.LENGTH_SHORT);
             }
         });
 
@@ -368,24 +368,24 @@
         endEt.setOnClickListener(v -> showEndTimer());
 
         if (placeCategory.equals("1680077442322")) {
-            subtitle = "30 Minutes - 2 Hour";
+            subtitle = getString(R.string.thirty2Hour);
         } else if (placeCategory.equals("1680077753090") || placeCategory.equals("1681812366209")) {
-            subtitle = "30 Minutes - 1 Hour";
+            subtitle = getString(R.string.thirty_oneHour);
         } else if (placeCategory.equals("1680166171816") || placeCategory.equals("1681807033132")) {
-            subtitle = "Vary depend on needs";
+            subtitle = getString(R.string.depend_onNeeds);
         } else if (placeCategory.equals("1680167384847") || placeCategory.equals("1681811119599")) {
-            subtitle = "1 Hour - 2 Hour";
+            subtitle = getString(R.string.one_two_hour);
         } else if (placeCategory.equals("1682060935295") || placeCategory.equals("1680077486439")) {
-            subtitle = "Subjective and can vary based on personal preferences";
+            subtitle = getString(R.string.based_on);
         } else if (placeCategory.equals("1682061580514")) {
-            subtitle = "45 Minutes - 2 Hour";
+            subtitle = getString(R.string.forty5_minute);
         } else {
-            subtitle = "Not Found";
+            subtitle = getString(R.string.not_found);
         }
 
-        addBtn.setText("Add to Itinerary");
-        titleText.setText("Pick the time");
-        subtitleText.setText("Recommended time: " + subtitle);
+        addBtn.setText(getString(R.string.add_to_itinerary_btn));
+        titleText.setText(R.string.pickTheTime);
+        subtitleText.setText(getString(R.string.rekomen_time) + subtitle);
 
         dialog = builder.create();
         dialog.setOnDismissListener(dialog1 -> {
@@ -443,7 +443,7 @@
                                 startTime = "";
                                 endTime = "";
                                 openingHours = "Closed";
-                                ToastUtils.showToast(getContext(), "Opening hours not available", Toast.LENGTH_SHORT);
+                                ToastUtils.showToast(getContext(), getString(R.string.justnotAvail), Toast.LENGTH_SHORT);
                                 openHours.add(startTime);
                                 closeHours.add(endTime);
                             } else {
@@ -459,18 +459,18 @@
                                         openHours.add(startTimeSlot);
                                         closeHours.add(endTimeSlot);
                                     } else {
-                                        ToastUtils.showToast(getContext(), "Invalid time slot: " + slot, Toast.LENGTH_SHORT);
+                                        ToastUtils.showToast(getContext(), getString(R.string.invalidTimeSlot) + slot, Toast.LENGTH_SHORT);
                                     }
                                 }
                             }
                         } else {
-                            ToastUtils.showToast(getContext(), "Invalid opening hours format", Toast.LENGTH_SHORT);
+                            ToastUtils.showToast(getContext(), getString(R.string.invalid_opening_format), Toast.LENGTH_SHORT);
                         }
                     } else {
                         startTime = "";
                         endTime = "";
                         openingHours = "Closed";
-                        ToastUtils.showToast(getContext(), "Opening hours not available", Toast.LENGTH_SHORT);
+                        ToastUtils.showToast(getContext(),getString(R.string.justnotAvail), Toast.LENGTH_SHORT);
                         openHours.add(startTime);
                         closeHours.add(endTime);
                     }
@@ -480,9 +480,9 @@
                     startTime = "12:00 AM";
                     endTime = "11:59 PM";
                     openingHours = "Not Found";
-                    ToastUtils.showToast(getContext(), "Opening hours data not found", Toast.LENGTH_SHORT);
+                    ToastUtils.showToast(getContext(), getString(R.string.data_not_found), Toast.LENGTH_SHORT);
                     new Handler().postDelayed(() -> {
-                        ToastUtils.showToast(getContext(), "Allowing any time to be selected", Toast.LENGTH_SHORT);
+                        ToastUtils.showToast(getContext(), getString(R.string.allowAnyTime), Toast.LENGTH_SHORT);
                         openHours.add(startTime);
                         closeHours.add(endTime);
                     }, 2000);
@@ -541,7 +541,7 @@
     private void showStartTimer() {
         startEt.setText("");
         if (openHours.isEmpty()) {
-            ToastUtils.showToast(getContext(), "Opening hours data is not available", Toast.LENGTH_SHORT);
+            ToastUtils.showToast(getContext(),getString(R.string.data_not_found), Toast.LENGTH_SHORT);
             return;
         }
 
@@ -550,14 +550,14 @@
         TextView dialogRealTitle = customView.findViewById(R.id.dialog_title);
         TextView dialogTitle = customView.findViewById(R.id.dialog_subtitle);
         ViewGroup timePickerContainer = customView.findViewById(R.id.time_picker_container);
-        dialogRealTitle.setText("Select start time");
+        dialogRealTitle.setText(R.string.select_start_time_iter);
 
         String dialogTitleText = String.format(Locale.getDefault(), "Opening Hour: %s", openingHours);
         dialogTitle.setText(dialogTitleText);
 
         AlertDialog.Builder builder = new AlertDialog.Builder(getContext())
                 .setView(customView)
-                .setNegativeButton("Cancel", null);
+                .setNegativeButton(R.string.cancel_opt, null);
 
         TimePicker timePicker = new TimePicker(new ContextThemeWrapper(getContext(), R.style.TimePickerStyle));
         timePicker.setIs24HourView(false);
@@ -575,7 +575,7 @@
                 String closingTime = closeHours.get(i);
 
                 if (openingTime == null || closingTime == null) {
-                    ToastUtils.showToast(getContext(), "Opening hours data is not available", Toast.LENGTH_SHORT);
+                    ToastUtils.showToast(getContext(), getString(R.string.data_not_found), Toast.LENGTH_SHORT);
                     return;
                 }
 
@@ -619,7 +619,7 @@
                 endEt.setEnabled(true);
                 endBtn.setEnabled(true);
             } else {
-                ToastUtils.showToast(getContext(), "Selected time is outside business hours", Toast.LENGTH_SHORT);
+                ToastUtils.showToast(getContext(), getString(R.string.outside_business), Toast.LENGTH_SHORT);
             }
         });
 
@@ -630,7 +630,7 @@
     private void showEndTimer() {
         endEt.setText("");
         if (openHours.isEmpty()) {
-            ToastUtils.showToast(getContext(), "Opening hours data is not available", Toast.LENGTH_SHORT);
+            ToastUtils.showToast(getContext(),getString(R.string.data_not_found), Toast.LENGTH_SHORT);
             return;
         }
 
@@ -639,14 +639,14 @@
         TextView dialogRealTitle = customView.findViewById(R.id.dialog_title);
         TextView dialogTitle = customView.findViewById(R.id.dialog_subtitle);
         ViewGroup timePickerContainer = customView.findViewById(R.id.time_picker_container);
-        dialogRealTitle.setText("Select end time");
+        dialogRealTitle.setText(R.string.select_end_time_iter);
 
         String dialogTitleText = String.format(Locale.getDefault(), "Opening Hour: %s", openingHours);
         dialogTitle.setText(dialogTitleText);
 
         AlertDialog.Builder builder = new AlertDialog.Builder(getContext())
                 .setView(customView)
-                .setNegativeButton("Cancel", null);
+                .setNegativeButton(R.string.cancel_opt, null);
 
         TimePicker timePicker = new TimePicker(new ContextThemeWrapper(getContext(), R.style.TimePickerStyle));
         timePicker.setIs24HourView(false);
@@ -664,7 +664,7 @@
                 String closingTime = closeHours.get(i);
 
                 if (openingTime == null || closingTime == null) {
-                    ToastUtils.showToast(getContext(), "Opening hours data is not available", Toast.LENGTH_SHORT);
+                    ToastUtils.showToast(getContext(),getString(R.string.data_not_found), Toast.LENGTH_SHORT);
                     return;
                 }
 
@@ -702,8 +702,7 @@
                     endEt.setText(String.format(Locale.getDefault(), "%d:%02d PM", endHour - 12, endMinute));
                 }
             } else {
-
-                ToastUtils.showToast(getContext(), "Selected time is outside business hours", Toast.LENGTH_SHORT);
+                ToastUtils.showToast(getContext(),getString(R.string.outside_business), Toast.LENGTH_SHORT);
             }
         });
 
@@ -853,14 +852,14 @@
                 addIter.setVisibility(View.INVISIBLE);
             } else if (selectedItems.size() == 1) {
                 counter = selectedItems.size();
-                selectTv.setText(counter + " item selected");
-                addIter.setText("Add to itinerary");
+                selectTv.setText(counter + getString(R.string.item_selected));
+                addIter.setText(getString(R.string.add_to_itinerary_btn));
                 addIter.setVisibility(View.VISIBLE);
                 selectLayout.setVisibility(View.VISIBLE);
             } else {
                 counter = selectedItems.size();
-                selectTv.setText(counter + " items selected");
-                addIter.setText("Add to itinerary");
+                selectTv.setText(counter + getString(R.string.items_selected));
+                addIter.setText(getString(R.string.add_to_itinerary_btn));
                 addIter.setVisibility(View.VISIBLE);
                 selectLayout.setVisibility(View.VISIBLE);
             }
@@ -900,7 +899,7 @@
         if (allFieldsFilled) {
             dialog.dismiss();
             uploadToDB(placeDate, startTime, endTime);
-            ToastUtils.showToast(getContext(), "itinerary updated", Toast.LENGTH_SHORT);
+            ToastUtils.showToast(getContext(), getString(R.string.itinerary_updated), Toast.LENGTH_SHORT);
         }
     }
 
@@ -931,10 +930,10 @@
                         .addOnSuccessListener(aVoid -> {
                             selectedItems.remove(selectedItemIndex);
                             handleSelectedItem(selectedItems);
-                            ToastUtils.showToast(getContext(), "Itinerary uploaded successfully", Toast.LENGTH_LONG);
+                            ToastUtils.showToast(getContext(), getString(R.string.iterUploadSuccess), Toast.LENGTH_LONG);
                         })
                         .addOnFailureListener(e -> {
-                            ToastUtils.showToast(getContext(), "Data upload failed due to " + e.getMessage(), Toast.LENGTH_SHORT);
+                            ToastUtils.showToast(getContext(), getString(R.string.failIterUpload) + e.getMessage(), Toast.LENGTH_SHORT);
                             Log.d(TAG, "on Failure: " + e.getMessage());
                         });
             }
Index: app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Adapter;\n\nimport android.Manifest;\nimport android.app.Activity;\nimport android.app.AlertDialog;\nimport android.app.DatePickerDialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.pm.PackageManager;\nimport android.graphics.drawable.Drawable;\nimport android.location.Location;\nimport android.location.LocationManager;\nimport android.net.Uri;\nimport android.os.Handler;\nimport android.text.TextUtils;\nimport android.util.Log;\nimport android.view.ContextThemeWrapper;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\nimport android.widget.TimePicker;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.binus.pekalongancityguide.ItemTemplate.Itinerary;\nimport com.binus.pekalongancityguide.Layout.Home;\nimport com.binus.pekalongancityguide.Misc.AlphaTransformation;\nimport com.binus.pekalongancityguide.Misc.MyApplication;\nimport com.binus.pekalongancityguide.R;\nimport com.binus.pekalongancityguide.databinding.DialogAddToItineraryBinding;\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.load.resource.bitmap.CenterCrop;\nimport com.bumptech.glide.request.RequestOptions;\nimport com.bumptech.glide.request.target.CustomTarget;\nimport com.bumptech.glide.request.transition.Transition;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Locale;\n\nimport static android.content.ContentValues.TAG;\n\npublic class ItineraryAdapter extends RecyclerView.Adapter<ItineraryAdapter.ItineraryViewHolder> {\n    private static final int MAPS_PERMIT = 1;\n    private final Context context;\n    private final List<Itinerary> itineraryList;\n    private List<String> openHours = new ArrayList<>();\n    private List<String> closeHours = new ArrayList<>();\n    private final FragmentManager fragmentManager;\n    private FirebaseDatabase database;\n    private EditText startEt, endEt, dateEt;\n    private ImageButton dateBtn, startBtn, endBtn;\n    private Calendar calendar;\n    private AlertDialog dialog;\n    private String startDate, startTime, endTime, date, openingHours;\n    String destiID;\n    private int startHour, startMinute, endHour, endMinute, startDay, startMonth, startYear;\n\n    public ItineraryAdapter(Context context, List<Itinerary> itineraryList, FragmentManager fragmentManager) {\n        this.context = context;\n        this.itineraryList = itineraryList;\n        this.fragmentManager = fragmentManager;\n    }\n\n    @Override\n    public ItineraryViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_itinerary, parent, false);\n        database = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\");\n        return new ItineraryViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(ItineraryViewHolder holder, int position) {\n        Itinerary itinerary = itineraryList.get(position);\n        loadImage(itinerary, holder);\n        holder.startTimeTextView.setText(itinerary.getStartTime());\n        holder.endTimeTextView.setText(itinerary.getEndTime());\n        holder.placeNameTextView.setText(itinerary.getPlaceName());\n        float distance = itinerary.getDistance();\n        String distanceString;\n        if (distance < 1) {\n            int distanceInMeters = (int) (distance * 1000);\n            distanceString = distanceInMeters + \" m\";\n\n        } else {\n            distanceString = String.format(Locale.getDefault(), \"%.2f km\", distance);\n        }\n        holder.distanceTextView.setText(distanceString);\n        holder.durationTextView.setText(itinerary.getDurationText());\n        holder.optionBtn.setOnClickListener(v -> {\n            showOptionsDialog(itinerary, holder);\n        });\n        holder.itemView.setOnClickListener(v -> {\n            if (holder.isImageLoaded) {\n                double latitude = itinerary.getLatitude();\n                double longitude = itinerary.getLongitude();\n                String origin = getMyLocation();\n                String url = \"https://www.google.com/maps/dir/?api=1&origin=\" + origin + \"&itinerary=\" + latitude + \",\" + longitude + \"&travelmode=driving\";\n                Intent mapIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n                mapIntent.setPackage(\"com.google.android.apps.maps\");\n                if (mapIntent.resolveActivity(context.getPackageManager()) != null) {\n                    context.startActivity(mapIntent);\n                } else {\n                    Intent webIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n                    context.startActivity(webIntent);\n                }\n            }\n        });\n    }\n\n    private void showOptionsDialog(Itinerary itinerary, ItineraryViewHolder holder) {\n        String DESTIID = itinerary.getDestiId();\n        destiID = DESTIID;\n        String[] options = {\"Edit\", \"Delete\"};\n        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n        builder.setTitle(\"Choose Options\")\n                .setItems(options, (dialog, which) -> {\n                    if (which == 0) {\n                        showEditDialog(fragmentManager);\n                    } else {\n                        MyApplication.deleteIter(\n                                context, \"\" + DESTIID, this, holder.getAdapterPosition()\n                        );\n                    }\n                })\n                .show();\n    }\n\n\n    private void showEditDialog(FragmentManager fragmentManager){\n        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n        LayoutInflater inflater = LayoutInflater.from(context);\n        calendar = Calendar.getInstance();\n        DialogAddToItineraryBinding addToItineraryBinding = DialogAddToItineraryBinding.inflate(inflater);\n        builder.setView(addToItineraryBinding.getRoot());\n        Button addItinerary;\n        dateEt = addToItineraryBinding.dateEt;\n        startEt = addToItineraryBinding.starttimeEt;\n        endEt = addToItineraryBinding.endtimeEt;\n        dateBtn = addToItineraryBinding.datepickerBtn;\n        startBtn = addToItineraryBinding.startpickerBtn;\n        endBtn = addToItineraryBinding.endpickerBtn;\n        addItinerary = addToItineraryBinding.additineraryBtn;\n\n        startBtn.setEnabled(false);\n        startEt.setEnabled(false);\n        endBtn.setEnabled(false);\n        endEt.setEnabled(false);\n\n        startBtn.setOnClickListener(v -> showStartTimer());\n        startEt.setOnClickListener(v -> showStartTimer());\n        endBtn.setOnClickListener(v -> showEndTimer());\n        endEt.setOnClickListener(v -> showEndTimer());\n        dateBtn.setOnClickListener(v -> showCalendar());\n        dateEt.setOnClickListener(v -> showCalendar());\n        dialog = builder.create();\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\n        dialog.show();\n        dialog.setOnDismissListener(dialog1 -> {\n            openHours.clear();\n            closeHours.clear();\n        });\n        addItinerary.setOnClickListener(v -> {\n            validateData(dateEt, startEt, endEt);\n        });\n    }\n\n    private void showCalendar() {\n        dateEt.setText(\"\");\n        startYear = calendar.get(Calendar.YEAR);\n        startMonth = calendar.get(Calendar.MONTH);\n        startDay = calendar.get(Calendar.DAY_OF_MONTH);\n\n        DatePickerDialog dialog = new DatePickerDialog(context, (dateView, year, month, dayOfMonth) -> {\n            startYear = year;\n            startMonth = month;\n            startDay = dayOfMonth;\n            calendar.set(startYear, startMonth, startDay); // Set the selected date to the Calendar object\n\n            SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n            startDate = format.format(calendar.getTime());\n            Log.d(TAG, \"showCalendar: \" + startDate);\n            dateEt.setText(startDate);\n            startBtn.setEnabled(true);\n            startEt.setEnabled(true);\n\n            // Get the day of the week for the selected date\n            int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);\n\n            // Retrieve the opening hours for the selected day\n            getOpeningHours(dayOfWeek);\n        }, startYear, startMonth, startDay);\n\n        // Set the minimum date to today's date\n        dialog.getDatePicker().setMinDate(System.currentTimeMillis() - 1000);\n\n        dialog.getWindow().setBackgroundDrawableResource(R.color.palette_4);\n        dialog.show();\n    }\n\n    private void getOpeningHours(int dayOfWeek) {\n        DatabaseReference openingHoursRef = database.getReference(\"Destination\");\n        openingHoursRef.child(destiID).child(\"openingHours\").addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                openHours.clear();\n                closeHours.clear();\n                int newDoW = dayOfWeek - 2;\n                if (newDoW == -1) {\n                    newDoW = 6;\n                }\n                if (dataSnapshot.exists()) {\n                    openingHours = dataSnapshot.child(String.valueOf(newDoW)).getValue(String.class);\n                    Log.d(TAG, \"CHECK DAY: \" + (newDoW));\n                    Log.d(TAG, \"OPENING HOURS: \" + openingHours);\n\n                    if (openingHours != null) {\n                        String[] parts = openingHours.split(\": \");\n                        if (parts.length == 2) {\n                            String timeRange = parts[1];\n\n                            if (timeRange.equals(\"Open 24 hours\")) {\n                                startTime = \"12:00 AM\";\n                                endTime = \"11:59 PM\";\n                                openHours.add(startTime);\n                                closeHours.add(endTime);\n                            } else if (timeRange.equals(\"Closed\")) {\n                                startTime = \"\";\n                                endTime = \"\";\n                                openingHours = \"Closed\";\n                                Toast.makeText(context, \"Opening hours not available\", Toast.LENGTH_SHORT).show();\n                                openHours.add(startTime);\n                                closeHours.add(endTime);\n                            } else {\n                                String[] timeSlots = timeRange.split(\", \");\n\n                                for (String slot : timeSlots) {\n                                    String[] times = slot.split(\" – \");\n\n                                    if (times.length == 2) {\n                                        String startTimeSlot = times[0];\n                                        String endTimeSlot = times[1];\n\n                                        openHours.add(startTimeSlot);\n                                        closeHours.add(endTimeSlot);\n                                    } else {\n                                        Toast.makeText(context, \"Invalid time slot: \" + slot, Toast.LENGTH_SHORT).show();\n                                    }\n                                }\n                            }\n                        } else {\n                            Toast.makeText(context, \"Invalid opening hours format\", Toast.LENGTH_SHORT).show();\n                        }\n                    } else {\n                        startTime = \"\";\n                        endTime = \"\";\n                        openingHours = \"Closed\";\n                        Toast.makeText(context, \"Opening hours not available\", Toast.LENGTH_SHORT).show();\n                        openHours.add(startTime);\n                        closeHours.add(endTime);\n                    }\n                    Log.d(TAG, \"Open hour: \" + openHours);\n                    Log.d(TAG, \"Close hour: \" + closeHours);\n                } else {\n                    startTime = \"12:00 AM\";\n                    endTime = \"11:59 PM\";\n                    openingHours = \"Not Found\";\n                    Toast.makeText(context, \"Opening hours data not found\", Toast.LENGTH_SHORT).show();\n                    new Handler().postDelayed(() -> {\n                        Toast.makeText(context, \"Allowing any time to be selected\", Toast.LENGTH_SHORT).show();\n                        openHours.add(startTime);\n                        closeHours.add(endTime);\n                    }, 2000);\n                }\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n            }\n        });\n    }\n\n    private void showStartTimer() {\n        startEt.setText(\"\");\n        if (openHours.isEmpty()) {\n            // Handle the case when opening hours data is not available\n            Toast.makeText(context, \"Opening hours data is not available\", Toast.LENGTH_SHORT).show();\n            return;\n        }\n\n        // Custom dialog layout\n        LayoutInflater inflater = LayoutInflater.from(context);\n        View customView = inflater.inflate(R.layout.dialog_custom_title, null);\n        TextView dialogRealTitle = customView.findViewById(R.id.dialog_title);\n        TextView dialogTitle = customView.findViewById(R.id.dialog_subtitle);\n        ViewGroup timePickerContainer = customView.findViewById(R.id.time_picker_container);\n        dialogRealTitle.setText(\"Select start time\");\n\n        String dialogTitleText = String.format(Locale.getDefault(), \"Opening Hour: %s\", openingHours);\n        dialogTitle.setText(dialogTitleText);\n\n        AlertDialog.Builder builder = new AlertDialog.Builder(context)\n                .setView(customView)\n                .setNegativeButton(\"Cancel\", null);\n\n        // Use a single TimePicker\n        TimePicker timePicker = new TimePicker(new ContextThemeWrapper(context, R.style.TimePickerStyle));\n        timePicker.setIs24HourView(false); // Set the desired time format\n\n        timePickerContainer.addView(timePicker);\n\n        builder.setPositiveButton(\"OK\", (dialogInterface, which) -> {\n            int selectedHour = timePicker.getCurrentHour(); // Retrieve the selected hour\n            int selectedMinute = timePicker.getCurrentMinute(); // Retrieve the selected minute\n\n            boolean withinOpeningHours = false;\n\n            // Check if the selected time is within any of the opening and closing hour/minute ranges\n            for (int i = 0; i < openHours.size(); i++) {\n                String openingTime = openHours.get(i);\n                String closingTime = closeHours.get(i);\n\n                if (openingTime == null || closingTime == null) {\n                    // Handle the case when opening or closing time is null\n                    Toast.makeText(context, \"Opening hours data is not available\", Toast.LENGTH_SHORT).show();\n                    return;\n                }\n\n                int openingHour = convertTo24HourFormat(openingTime);\n                int openingMinute = Integer.parseInt(openingTime.split(\":\")[1].split(\" \")[0]);\n\n                int closingHour = convertTo24HourFormat(closingTime);\n                int closingMinute = Integer.parseInt(closingTime.split(\":\")[1].split(\" \")[0]);\n\n                if (closingHour < openingHour || (closingHour == openingHour && closingMinute < openingMinute)) {\n                    // The business operates into the next day\n                    if (selectedHour > openingHour || (selectedHour == openingHour && selectedMinute >= openingMinute)) {\n                        // Selected time is after the opening time on the first day\n                        withinOpeningHours = true;\n                        break;\n                    }\n                    if (selectedHour < closingHour || (selectedHour == closingHour && selectedMinute <= closingMinute)) {\n                        // Selected time is before the closing time on the second day\n                        withinOpeningHours = true;\n                        break;\n                    }\n                } else {\n                    // The business operates within the same day\n                    if (selectedHour > openingHour || (selectedHour == openingHour && selectedMinute >= openingMinute)) {\n                        if (selectedHour < closingHour || (selectedHour == closingHour && selectedMinute <= closingMinute)) {\n                            withinOpeningHours = true;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (withinOpeningHours) {\n                startHour = selectedHour;\n                startMinute = selectedMinute;\n\n                if (startHour < 12) {\n                    startEt.setText(String.format(Locale.getDefault(), \"%d:%02d AM\", startHour, startMinute));\n                } else if (startHour == 12) {\n                    startEt.setText(String.format(Locale.getDefault(), \"12:%02d PM\", startMinute));\n                } else {\n                    startEt.setText(String.format(Locale.getDefault(), \"%d:%02d PM\", startHour - 12, startMinute));\n                }\n\n                endEt.setEnabled(true);\n                endBtn.setEnabled(true);\n            } else {\n                // If the selected time is outside all opening and closing hour/minute ranges, show an error message\n                Toast.makeText(context, \"Selected time is outside business hours\", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n        AlertDialog alertDialog = builder.create();\n        alertDialog.show();\n    }\n\n    private void showEndTimer() {\n        endEt.setText(\"\");\n        if (openHours.isEmpty()) {\n            // Handle the case when opening hours data is not available\n            Toast.makeText(context, \"Opening hours data is not available\", Toast.LENGTH_SHORT).show();\n            return;\n        }\n\n        // Custom dialog layout\n        LayoutInflater inflater = LayoutInflater.from(context);\n        View customView = inflater.inflate(R.layout.dialog_custom_title, null);\n        TextView dialogRealTitle = customView.findViewById(R.id.dialog_title);\n        TextView dialogTitle = customView.findViewById(R.id.dialog_subtitle);\n        ViewGroup timePickerContainer = customView.findViewById(R.id.time_picker_container);\n        dialogRealTitle.setText(\"Select end time\");\n\n        String dialogTitleText = String.format(Locale.getDefault(), \"Opening Hour: %s\", openingHours);\n        dialogTitle.setText(dialogTitleText);\n\n        AlertDialog.Builder builder = new AlertDialog.Builder(context)\n                .setView(customView)\n                .setNegativeButton(\"Cancel\", null);\n\n        // Use a single TimePicker\n        TimePicker timePicker = new TimePicker(new ContextThemeWrapper(context, R.style.TimePickerStyle));\n        timePicker.setIs24HourView(false); // Set the desired time format\n\n        timePickerContainer.addView(timePicker);\n\n        builder.setPositiveButton(\"OK\", (dialogInterface, which) -> {\n            int selectedHour = timePicker.getCurrentHour(); // Retrieve the selected hour\n            int selectedMinute = timePicker.getCurrentMinute(); // Retrieve the selected minute\n\n            boolean withinOpeningHours = false;\n\n            // Check if the selected time is within any of the opening and closing hour/minute ranges\n            for (int i = 0; i < openHours.size(); i++) {\n                String openingTime = openHours.get(i);\n                String closingTime = closeHours.get(i);\n\n                if (openingTime == null || closingTime == null) {\n                    // Handle the case when opening or closing time is null\n                    Toast.makeText(context, \"Opening hours data is not available\", Toast.LENGTH_SHORT).show();\n                    return;\n                }\n\n                int closingHour = convertTo24HourFormat(closingTime);\n                int closingMinute = Integer.parseInt(closingTime.split(\":\")[1].split(\" \")[0]);\n\n                if (closingHour < startHour || (closingHour == startHour && closingMinute < startMinute)) {\n                    // The business operates into the next day\n                    if (selectedHour > startHour || (selectedHour == startHour && selectedMinute >= startMinute)) {\n                        // Selected time is after the opening time on the first day\n                        withinOpeningHours = true;\n                        break;\n                    }\n                    if (selectedHour < closingHour || (selectedHour == closingHour && selectedMinute <= closingMinute)) {\n                        // Selected time is before the closing time on the second day\n                        withinOpeningHours = true;\n                        break;\n                    }\n                } else {\n                    // The business operates within the same day\n                    if (selectedHour > startHour || (selectedHour == startHour && selectedMinute >= startMinute)) {\n                        if (selectedHour < closingHour || (selectedHour == closingHour && selectedMinute <= closingMinute)) {\n                            withinOpeningHours = true;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (withinOpeningHours) {\n                endHour = selectedHour;\n                endMinute = selectedMinute;\n\n                if (endHour < 12) {\n                    endEt.setText(String.format(Locale.getDefault(), \"%d:%02d AM\", endHour, endMinute));\n                } else if (endHour == 12) {\n                    endEt.setText(String.format(Locale.getDefault(), \"12:%02d PM\", endMinute));\n                } else {\n                    endEt.setText(String.format(Locale.getDefault(), \"%d:%02d PM\", endHour - 12, endMinute));\n                }\n            } else {\n                // If the selected time is outside all opening and closing hour/minute ranges, show an error message\n                Toast.makeText(context, \"Selected time is outside business hours\", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n        AlertDialog alertDialog = builder.create();\n        alertDialog.show();\n    }\n\n    private int convertTo24HourFormat(String time) {\n        if (time == null) {\n            // Handle the case when the time is null\n            return 0; // Or any other default value that makes sense in your context\n        }\n\n        String[] parts = time.split(\":\");\n        if (parts.length < 2) {\n            // Handle the case when the time doesn't have the expected format\n            return 0; // Or any other default value that makes sense in your context\n        }\n\n        int hour = Integer.parseInt(parts[0]);\n\n        if (parts[1].contains(\" \")) {\n            String amPm = parts[1].split(\" \")[1];\n            if (amPm.equalsIgnoreCase(\"PM\") && hour != 12) {\n                hour += 12;\n            } else if (amPm.equalsIgnoreCase(\"AM\") && hour == 12) {\n                hour = 0;\n            }\n        }\n\n        return hour;\n    }\n\n    private void validateData(EditText dateEt, EditText startTimeEt, EditText endTimeEt) {\n        date = dateEt.getText().toString().trim();\n        startTime = startTimeEt.getText().toString().trim();\n        endTime = endTimeEt.getText().toString().trim();\n        boolean allFieldsFilled = true;\n\n        if (TextUtils.isEmpty(date)) {\n            dateEt.setError(context.getString(R.string.choose_date));\n            allFieldsFilled = false;\n        } else {\n            dateEt.setError(null);\n        }\n\n        if (TextUtils.isEmpty(startTime)) {\n            startTimeEt.setError(context.getString(R.string.choose_start));\n            allFieldsFilled = false;\n        } else {\n            startTimeEt.setError(null);\n        }\n\n        if (TextUtils.isEmpty(endTime)) {\n            endTimeEt.setError(context.getString(R.string.choose_end));\n            allFieldsFilled = false;\n        } else {\n            endTimeEt.setError(null);\n        }\n\n        if (allFieldsFilled) {\n            dialog.dismiss();\n            updateItinerary(date, startTime, endTime);\n            Toast.makeText(context, \"itinerary updated\", Toast.LENGTH_SHORT).show();\n        }\n    }\n\n    private void updateItinerary(String date, String startTime, String endTime) {\n        String uid = FirebaseAuth.getInstance().getUid();\n        HashMap<String,Object> hashMap =new HashMap<>();\n        hashMap.put(\"date\",\"\"+date);\n        hashMap.put(\"startTime\",\"\"+startTime);\n        hashMap.put(\"endTime\",\"\"+endTime);\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Users\");\n        reference.child(uid).child(\"itinerary\").addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                for (DataSnapshot itinerarySnapshot : snapshot.getChildren()) {\n                    String destiId = itinerarySnapshot.child(\"destiId\").getValue(String.class);\n                    if (destiId.equals(destiID)) {\n                        DatabaseReference itineraryRef = itinerarySnapshot.getRef();\n                        itineraryRef.child(\"date\").setValue(date);\n                        itineraryRef.child(\"startTime\").setValue(startTime);\n                        itineraryRef.child(\"endTime\").setValue(endTime)\n                                .addOnSuccessListener(aVoid -> {\n                                    Toast.makeText(context, \"Itinerary updated successfully\", Toast.LENGTH_LONG).show();\n                                    context.startActivity(new Intent(context, Home.class));\n\n                                }).addOnFailureListener(e -> {\n                                    Toast.makeText(context, \"Failed to update itinerary: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\n                                });\n                    }\n                }\n            }\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n            }\n        });\n    }\n\n    private String getMyLocation(){\n    LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);\n    if (ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_FINE_LOCATION)\n            != PackageManager.PERMISSION_GRANTED) {\n        ActivityCompat.requestPermissions((Activity) context,\n                new String[]{Manifest.permission.ACCESS_FINE_LOCATION},\n                MAPS_PERMIT);\n        return null;\n    } else {\n        Location location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);\n        if (location != null) {\n            double latitude = location.getLatitude();\n            double longitude = location.getLongitude();\n            return latitude + \",\" + longitude;\n        } else {\n            return null;\n        }\n    }\n    }\n\n    public interface OnDataChangedListener {\n        void onDataChanged();\n    }\n\n    private OnDataChangedListener mListener;\n\n    public void setOnDataChangedListener(OnDataChangedListener listener) {\n        mListener = listener;\n    }\n\n    @Override\n    public int getItemCount() {\n        return itineraryList.size();\n    }\n\n    private void loadImage(Itinerary itinerary, ItineraryViewHolder holder) {\n        String imageUrl = itinerary.getUrl();\n        RequestOptions requestOptions = new RequestOptions()\n                .transforms(new CenterCrop(), new AlphaTransformation(1f));\n\n        Glide.with(holder.itemView.getContext())\n                .load(imageUrl)\n                .apply(requestOptions)\n                .into(new CustomTarget<Drawable>() {\n                    @Override\n                    public void onResourceReady(@NonNull Drawable resource, @Nullable Transition<? super Drawable> transition) {\n                        holder.itineraryBg.setBackground(resource);\n                        holder.isImageLoaded = true;\n                    }\n\n                    @Override\n                    public void onLoadCleared(@Nullable Drawable placeholder) {\n                    }\n                });\n    }\n\n    public static class ItineraryViewHolder extends RecyclerView.ViewHolder {\n        public LinearLayout itineraryBg;\n        public TextView startTimeTextView;\n        public TextView endTimeTextView;\n        public TextView placeNameTextView;\n        public TextView distanceTextView;\n        public TextView durationTextView;\n        public ImageButton optionBtn;\n        public boolean isImageLoaded;\n\n        public ItineraryViewHolder(View itemView) {\n            super(itemView);\n            startTimeTextView = itemView.findViewById(R.id.startTimeTextView);\n            endTimeTextView = itemView.findViewById(R.id.endTimeTextView);\n            placeNameTextView = itemView.findViewById(R.id.placeNameTextView);\n            distanceTextView = itemView.findViewById(R.id.distanceTextView);\n            durationTextView = itemView.findViewById(R.id.durationTextView);\n            optionBtn = itemView.findViewById(R.id.iter_option);\n            itineraryBg = itemView.findViewById(R.id.itinerary_bg);\n            isImageLoaded = false;\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java b/app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Adapter/ItineraryAdapter.java	(date 1684922201812)
@@ -28,15 +28,19 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.FragmentManager;
+import androidx.fragment.app.FragmentTransaction;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.binus.pekalongancityguide.ItemTemplate.Itinerary;
 import com.binus.pekalongancityguide.Layout.Home;
+import com.binus.pekalongancityguide.Layout.ItineraryList;
 import com.binus.pekalongancityguide.Misc.AlphaTransformation;
 import com.binus.pekalongancityguide.Misc.MyApplication;
+import com.binus.pekalongancityguide.Misc.ToastUtils;
 import com.binus.pekalongancityguide.R;
 import com.binus.pekalongancityguide.databinding.DialogAddToItineraryBinding;
 import com.bumptech.glide.Glide;
@@ -127,6 +131,43 @@
             }
         });
     }
+    private void updateItinerary(String date, String startTime, String endTime) {
+        String uid = FirebaseAuth.getInstance().getUid();
+        HashMap<String,Object> hashMap =new HashMap<>();
+        hashMap.put("date",""+date);
+        hashMap.put("startTime",""+startTime);
+        hashMap.put("endTime",""+endTime);
+        DatabaseReference reference = FirebaseDatabase.getInstance("https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/").getReference("Users");
+        reference.child(uid).child("itinerary").addListenerForSingleValueEvent(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                for (DataSnapshot itinerarySnapshot : snapshot.getChildren()) {
+                    String destiId = itinerarySnapshot.child("destiId").getValue(String.class);
+                    if (destiId.equals(destiID)) {
+                        DatabaseReference itineraryRef = itinerarySnapshot.getRef();
+                        itineraryRef.child("date").setValue(date);
+                        itineraryRef.child("startTime").setValue(startTime);
+                        itineraryRef.child("endTime").setValue(endTime)
+                                .addOnSuccessListener(aVoid -> {
+                                    ItineraryList itineraryList1 = new ItineraryList();
+                                    Toast.makeText(context, R.string.iterUpdateSuccess, Toast.LENGTH_LONG).show();
+//                                    context.startActivity(new Intent(context, Home.class));
+                                    AppCompatActivity appCompatActivity = (AppCompatActivity) context;
+                                    FragmentManager fragmentManager = appCompatActivity.getSupportFragmentManager();
+                                    FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
+                                    fragmentTransaction.replace(R.id.container,itineraryList1);
+                                    fragmentTransaction.commit();
+                                }).addOnFailureListener(e -> {
+                                    Toast.makeText(context,context.getString(R.string.iterFailUpdate) + e.getMessage(), Toast.LENGTH_SHORT).show();
+                                });
+                    }
+                }
+            }
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+            }
+        });
+    }
 
     private void showOptionsDialog(Itinerary itinerary, ItineraryViewHolder holder) {
         String DESTIID = itinerary.getDestiId();
@@ -248,7 +289,7 @@
                                 startTime = "";
                                 endTime = "";
                                 openingHours = "Closed";
-                                Toast.makeText(context, "Opening hours not available", Toast.LENGTH_SHORT).show();
+                                Toast.makeText(context,context.getString(R.string.justnotAvail), Toast.LENGTH_SHORT).show();
                                 openHours.add(startTime);
                                 closeHours.add(endTime);
                             } else {
@@ -264,18 +305,18 @@
                                         openHours.add(startTimeSlot);
                                         closeHours.add(endTimeSlot);
                                     } else {
-                                        Toast.makeText(context, "Invalid time slot: " + slot, Toast.LENGTH_SHORT).show();
+                                        Toast.makeText(context,R.string.invalidTimeSlot + slot, Toast.LENGTH_SHORT).show();
                                     }
                                 }
                             }
                         } else {
-                            Toast.makeText(context, "Invalid opening hours format", Toast.LENGTH_SHORT).show();
+                            Toast.makeText(context, R.string.invalid_opening_format, Toast.LENGTH_SHORT).show();
                         }
                     } else {
                         startTime = "";
                         endTime = "";
                         openingHours = "Closed";
-                        Toast.makeText(context, "Opening hours not available", Toast.LENGTH_SHORT).show();
+                        Toast.makeText(context,context.getString(R.string.justnotAvail), Toast.LENGTH_SHORT).show();
                         openHours.add(startTime);
                         closeHours.add(endTime);
                     }
@@ -285,9 +326,9 @@
                     startTime = "12:00 AM";
                     endTime = "11:59 PM";
                     openingHours = "Not Found";
-                    Toast.makeText(context, "Opening hours data not found", Toast.LENGTH_SHORT).show();
+                    Toast.makeText(context,context.getString(R.string.data_not_found), Toast.LENGTH_SHORT).show();
                     new Handler().postDelayed(() -> {
-                        Toast.makeText(context, "Allowing any time to be selected", Toast.LENGTH_SHORT).show();
+                        Toast.makeText(context,context.getString(R.string.allowAnyTime), Toast.LENGTH_SHORT).show();
                         openHours.add(startTime);
                         closeHours.add(endTime);
                     }, 2000);
@@ -303,46 +344,41 @@
     private void showStartTimer() {
         startEt.setText("");
         if (openHours.isEmpty()) {
-            // Handle the case when opening hours data is not available
-            Toast.makeText(context, "Opening hours data is not available", Toast.LENGTH_SHORT).show();
+            Toast.makeText(context,context.getString(R.string.data_not_found), Toast.LENGTH_SHORT).show();
             return;
         }
-
-        // Custom dialog layout
         LayoutInflater inflater = LayoutInflater.from(context);
         View customView = inflater.inflate(R.layout.dialog_custom_title, null);
         TextView dialogRealTitle = customView.findViewById(R.id.dialog_title);
         TextView dialogTitle = customView.findViewById(R.id.dialog_subtitle);
         ViewGroup timePickerContainer = customView.findViewById(R.id.time_picker_container);
-        dialogRealTitle.setText("Select start time");
+        dialogRealTitle.setText(R.string.select_start_time_iter);
 
         String dialogTitleText = String.format(Locale.getDefault(), "Opening Hour: %s", openingHours);
         dialogTitle.setText(dialogTitleText);
 
         AlertDialog.Builder builder = new AlertDialog.Builder(context)
                 .setView(customView)
-                .setNegativeButton("Cancel", null);
+                .setNegativeButton(R.string.cancel_opt, null);
 
         // Use a single TimePicker
         TimePicker timePicker = new TimePicker(new ContextThemeWrapper(context, R.style.TimePickerStyle));
-        timePicker.setIs24HourView(false); // Set the desired time format
+        timePicker.setIs24HourView(false);
 
         timePickerContainer.addView(timePicker);
 
         builder.setPositiveButton("OK", (dialogInterface, which) -> {
-            int selectedHour = timePicker.getCurrentHour(); // Retrieve the selected hour
-            int selectedMinute = timePicker.getCurrentMinute(); // Retrieve the selected minute
+            int selectedHour = timePicker.getCurrentHour();
+            int selectedMinute = timePicker.getCurrentMinute();
 
             boolean withinOpeningHours = false;
-
             // Check if the selected time is within any of the opening and closing hour/minute ranges
             for (int i = 0; i < openHours.size(); i++) {
                 String openingTime = openHours.get(i);
                 String closingTime = closeHours.get(i);
 
                 if (openingTime == null || closingTime == null) {
-                    // Handle the case when opening or closing time is null
-                    Toast.makeText(context, "Opening hours data is not available", Toast.LENGTH_SHORT).show();
+                    Toast.makeText(context,context.getString(R.string.data_not_found), Toast.LENGTH_SHORT).show();
                     return;
                 }
 
@@ -390,8 +426,7 @@
                 endEt.setEnabled(true);
                 endBtn.setEnabled(true);
             } else {
-                // If the selected time is outside all opening and closing hour/minute ranges, show an error message
-                Toast.makeText(context, "Selected time is outside business hours", Toast.LENGTH_SHORT).show();
+                Toast.makeText(context,context.getString(R.string.outside_business), Toast.LENGTH_SHORT).show();
             }
         });
 
@@ -402,35 +437,32 @@
     private void showEndTimer() {
         endEt.setText("");
         if (openHours.isEmpty()) {
-            // Handle the case when opening hours data is not available
-            Toast.makeText(context, "Opening hours data is not available", Toast.LENGTH_SHORT).show();
+            Toast.makeText(context,context.getString(R.string.data_not_found), Toast.LENGTH_SHORT).show();
             return;
         }
-
-        // Custom dialog layout
         LayoutInflater inflater = LayoutInflater.from(context);
         View customView = inflater.inflate(R.layout.dialog_custom_title, null);
         TextView dialogRealTitle = customView.findViewById(R.id.dialog_title);
         TextView dialogTitle = customView.findViewById(R.id.dialog_subtitle);
         ViewGroup timePickerContainer = customView.findViewById(R.id.time_picker_container);
-        dialogRealTitle.setText("Select end time");
+        dialogRealTitle.setText(R.string.select_end_time_iter);
 
         String dialogTitleText = String.format(Locale.getDefault(), "Opening Hour: %s", openingHours);
         dialogTitle.setText(dialogTitleText);
 
         AlertDialog.Builder builder = new AlertDialog.Builder(context)
                 .setView(customView)
-                .setNegativeButton("Cancel", null);
+                .setNegativeButton(R.string.cancel_opt, null);
 
         // Use a single TimePicker
         TimePicker timePicker = new TimePicker(new ContextThemeWrapper(context, R.style.TimePickerStyle));
-        timePicker.setIs24HourView(false); // Set the desired time format
+        timePicker.setIs24HourView(false);
 
         timePickerContainer.addView(timePicker);
 
         builder.setPositiveButton("OK", (dialogInterface, which) -> {
-            int selectedHour = timePicker.getCurrentHour(); // Retrieve the selected hour
-            int selectedMinute = timePicker.getCurrentMinute(); // Retrieve the selected minute
+            int selectedHour = timePicker.getCurrentHour();
+            int selectedMinute = timePicker.getCurrentMinute();
 
             boolean withinOpeningHours = false;
 
@@ -440,8 +472,7 @@
                 String closingTime = closeHours.get(i);
 
                 if (openingTime == null || closingTime == null) {
-                    // Handle the case when opening or closing time is null
-                    Toast.makeText(context, "Opening hours data is not available", Toast.LENGTH_SHORT).show();
+                    Toast.makeText(context,context.getString(R.string.data_not_found), Toast.LENGTH_SHORT).show();
                     return;
                 }
 
@@ -484,7 +515,7 @@
                 }
             } else {
                 // If the selected time is outside all opening and closing hour/minute ranges, show an error message
-                Toast.makeText(context, "Selected time is outside business hours", Toast.LENGTH_SHORT).show();
+                Toast.makeText(context,context.getString(R.string.outside_business), Toast.LENGTH_SHORT).show();
             }
         });
 
@@ -494,18 +525,15 @@
 
     private int convertTo24HourFormat(String time) {
         if (time == null) {
-            // Handle the case when the time is null
-            return 0; // Or any other default value that makes sense in your context
+            return 0;
         }
-
         String[] parts = time.split(":");
         if (parts.length < 2) {
             // Handle the case when the time doesn't have the expected format
-            return 0; // Or any other default value that makes sense in your context
+            return 0;
         }
 
         int hour = Integer.parseInt(parts[0]);
-
         if (parts[1].contains(" ")) {
             String amPm = parts[1].split(" ")[1];
             if (amPm.equalsIgnoreCase("PM") && hour != 12) {
@@ -514,7 +542,6 @@
                 hour = 0;
             }
         }
-
         return hour;
     }
 
@@ -548,42 +575,11 @@
         if (allFieldsFilled) {
             dialog.dismiss();
             updateItinerary(date, startTime, endTime);
-            Toast.makeText(context, "itinerary updated", Toast.LENGTH_SHORT).show();
+            Toast.makeText(context, R.string.itinerary_updated, Toast.LENGTH_SHORT).show();
         }
     }
 
-    private void updateItinerary(String date, String startTime, String endTime) {
-        String uid = FirebaseAuth.getInstance().getUid();
-        HashMap<String,Object> hashMap =new HashMap<>();
-        hashMap.put("date",""+date);
-        hashMap.put("startTime",""+startTime);
-        hashMap.put("endTime",""+endTime);
-        DatabaseReference reference = FirebaseDatabase.getInstance("https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/").getReference("Users");
-        reference.child(uid).child("itinerary").addListenerForSingleValueEvent(new ValueEventListener() {
-            @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                for (DataSnapshot itinerarySnapshot : snapshot.getChildren()) {
-                    String destiId = itinerarySnapshot.child("destiId").getValue(String.class);
-                    if (destiId.equals(destiID)) {
-                        DatabaseReference itineraryRef = itinerarySnapshot.getRef();
-                        itineraryRef.child("date").setValue(date);
-                        itineraryRef.child("startTime").setValue(startTime);
-                        itineraryRef.child("endTime").setValue(endTime)
-                                .addOnSuccessListener(aVoid -> {
-                                    Toast.makeText(context, "Itinerary updated successfully", Toast.LENGTH_LONG).show();
-                                    context.startActivity(new Intent(context, Home.class));
 
-                                }).addOnFailureListener(e -> {
-                                    Toast.makeText(context, "Failed to update itinerary: " + e.getMessage(), Toast.LENGTH_SHORT).show();
-                                });
-                    }
-                }
-            }
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
-            }
-        });
-    }
 
     private String getMyLocation(){
     LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.Manifest;\nimport android.annotation.SuppressLint;\nimport android.app.AlertDialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.content.pm.PackageManager;\nimport android.location.Address;\nimport android.location.Geocoder;\nimport android.location.Location;\nimport android.location.LocationListener;\nimport android.location.LocationManager;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.provider.Settings;\nimport android.text.Editable;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.CheckBox;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.Fragment;\n\nimport com.binus.pekalongancityguide.Adapter.DestinationAdapter;\nimport com.binus.pekalongancityguide.ItemTemplate.Destination;\nimport com.binus.pekalongancityguide.R;\nimport com.binus.pekalongancityguide.databinding.DialogChangeLocBinding;\nimport com.binus.pekalongancityguide.databinding.DialogSortDestiBinding;\nimport com.binus.pekalongancityguide.databinding.FragmentShowDestinationBinding;\nimport com.google.android.gms.common.api.Status;\nimport com.google.android.gms.location.FusedLocationProviderClient;\nimport com.google.android.gms.location.LocationServices;\nimport com.google.android.gms.maps.CameraUpdate;\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.SupportMapFragment;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.MapStyleOptions;\nimport com.google.android.gms.maps.model.MarkerOptions;\nimport com.google.android.libraries.places.api.Places;\nimport com.google.android.libraries.places.api.model.Place;\nimport com.google.android.libraries.places.api.net.PlacesClient;\nimport com.google.android.libraries.places.widget.AutocompleteSupportFragment;\nimport com.google.android.libraries.places.widget.listener.PlaceSelectionListener;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Locale;\n\nimport static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;\n\npublic class ShowDestinationFragment extends Fragment {\n    private final FirebaseDatabase database = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\");\n    private static final int PERMISSION_REQUEST_LOCATION = 500;\n    private String categoryId;\n    private String category;\n    private ArrayList<Destination> destinationArrayList;\n    private DestinationAdapter destinationAdapter;\n    private static final String TAG = \"DESTI_USER_TAG\";\n    private FragmentShowDestinationBinding binding;\n    private FusedLocationProviderClient fusedLocationClient;\n    private LocationManager locationManager;\n    private LocationListener locationListener;\n    private Geocoder geocoder;\n    private AutocompleteSupportFragment autocompleteFragment;\n    private SupportMapFragment fragment;\n    private LatLng coordinate;\n    private String addressString;\n    private double currentLat, currentLng;\n    private float distance;\n    private boolean isChangeLocDialogShowing = false;\n    private static SharedPreferences prefs;\n\n    public ShowDestinationFragment() {\n    }\n\n    public static ShowDestinationFragment newInstance(String categoryId, String category, String uid) {\n        ShowDestinationFragment fragment = new ShowDestinationFragment();\n        Bundle args = new Bundle();\n        args.putString(\"categoryId\", categoryId);\n        args.putString(\"category\", category);\n        args.putString(\"uid\", uid);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState){\n        super.onCreate(savedInstanceState);\n        geocoder = new Geocoder(getContext(), Locale.getDefault());\n        if(getArguments()!=null){\n            categoryId = getArguments().getString(\"categoryId\");\n            category = getArguments().getString(\"category\");\n        }\n    }\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        prefs = getActivity().getSharedPreferences(\"coordinate\", Context.MODE_PRIVATE);\n        String lastLatitude = prefs.getString(\"lastLatitude\", \"0\");\n        String lastLongitude = prefs.getString(\"lastLongitude\", \"0\");\n        if (!lastLatitude.equals(\"0\") && !lastLongitude.equals(\"0\")) {\n            double latitude = Double.parseDouble(lastLatitude);\n            double longitude = Double.parseDouble(lastLongitude);\n            coordinate = new LatLng(latitude, longitude);\n        }\n//        Log.d(TAG, \"ON START COORDINATES: \" + coordinate);\n        binding = FragmentShowDestinationBinding.inflate(LayoutInflater.from(getContext()), container, false);\n        if (category.equals(\"All\")) {\n            loadDestinations();\n        } else {\n            loadCategoriedDestination();\n        }\n        locationManager = (LocationManager) getContext().getSystemService(Context.LOCATION_SERVICE);\n        locationListener = new LocationListener() {\n            @Override\n            public void onLocationChanged(Location location) {\n                Log.d(\"Location\", \"Latitude: \" + location.getLatitude() + \", Longitude: \" + location.getLongitude());\n            }\n\n            @Override\n            public void onStatusChanged(String provider, int status, Bundle extras) {\n            }\n\n            @Override\n            public void onProviderEnabled(String provider) {\n            }\n\n            @Override\n            public void onProviderDisabled(String provider) {\n            }\n        };\n\n        if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n        } else {\n            startLocationUpdates();\n        }\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(getContext());\n        binding.searchDesti.addTextChangedListener(new TextWatcher(){\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n                try {\n                    destinationAdapter.getFilter().filter(s);\n                }catch (Exception e){\n                    Log.d(TAG,\"onTextChanged :\"+e.getMessage());\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n        binding.sortButton.setOnClickListener(v ->{\n            showSortDialog();\n        });\n        binding.locLayout.setOnClickListener(v -> {\n            if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\n                    ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n            } else {\n                showChangeLocDialog();\n            }\n        });\n\n        return binding.getRoot();\n    }\n\n    private void showChangeLocDialog() {\n        if (isChangeLocDialogShowing) return;\n        isChangeLocDialogShowing = true;\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n        DialogChangeLocBinding locBinding = DialogChangeLocBinding.inflate(getLayoutInflater());\n        builder.setView(locBinding.getRoot());\n        AlertDialog dialog = builder.create();\n        dialog.setOnDismissListener(dialog1 -> {\n            requireActivity().runOnUiThread(() -> {\n                getChildFragmentManager().beginTransaction().remove(fragment).commit();\n                getChildFragmentManager().beginTransaction().remove(autocompleteFragment).commit();\n            });\n            isChangeLocDialogShowing = false;\n        });\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\n        dialog.show();\n        if (!Places.isInitialized()) {\n            Places.initialize(getActivity().getApplicationContext(), MAPS_API_KEY);\n        }\n        new AsyncTask<Void, Void, String>() {\n            @Override\n            protected String doInBackground(Void... voids) {\n                try {\n                    List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\n                    if (addresses.size() > 0) {\n                        return addresses.get(0).getAddressLine(0);\n                    }\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                return null;\n            }\n\n            @Override\n            protected void onPostExecute(String address) {\n                // update the location text view in the UI thread\n                if (address != null) {\n                    addressString = address;\n                    locBinding.locTv.setText(addressString);\n                    autocompleteFragment.setText(addressString);\n                } else {\n                    locBinding.locTv.setText(\"Address not found\");\n                }\n            }\n        }.execute();\n        fragment = (SupportMapFragment) getChildFragmentManager()\n                .findFragmentById(R.id.user_map);\n        fragment.getMapAsync(googleMap -> {\n            coordinate = new LatLng(currentLat, currentLng);\n            MarkerOptions marker = new MarkerOptions();\n            marker.position(coordinate);\n            marker.title(\"Current Location\");\n            googleMap.addMarker(marker);\n            CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\n            googleMap.moveCamera(cameraUpdate);\n            googleMap.setMapStyle(MapStyleOptions.loadRawResourceStyle(getContext(), R.raw.map_style));\n        });\n        PlacesClient placesClient = Places.createClient(getContext());\n        autocompleteFragment = (AutocompleteSupportFragment) getChildFragmentManager().findFragmentById(R.id.autocomplete_fragment);\n        autocompleteFragment.setPlaceFields(Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.ADDRESS, Place.Field.LAT_LNG));\n        autocompleteFragment.setCountries(\"ID\");\n        autocompleteFragment.setOnPlaceSelectedListener(new PlaceSelectionListener() {\n            @Override\n            public void onPlaceSelected(@NonNull Place place) {\n                coordinate = place.getLatLng();\n                fragment = (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.user_map);\n                fragment.getMapAsync(googleMap -> {\n                    googleMap.clear();\n                    MarkerOptions marker = new MarkerOptions();\n                    marker.position(coordinate);\n                    marker.title(place.getName());\n                    googleMap.addMarker(marker);\n                    CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\n                    googleMap.moveCamera(cameraUpdate);\n                });\n                locBinding.locTv.setText(place.getAddress());\n                addressString = place.getAddress();\n            }\n\n            @Override\n            public void onError(@NonNull Status status) {\n                Log.e(TAG, \"An error occurred: \" + status);\n            }\n        });\n        locBinding.useCurLoc.setOnClickListener(v -> {\n            if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\n                    ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n            } else {\n                fusedLocationClient.getLastLocation().addOnSuccessListener(location -> {\n                    if (location != null) {\n                        currentLat = location.getLatitude();\n                        currentLng = location.getLongitude();\n                        coordinate = new LatLng(currentLat, currentLng);\n                        new AsyncTask<Void, Void, String>() {\n                            @Override\n                            protected String doInBackground(Void... voids) {\n                                try {\n                                    List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\n                                    if (addresses.size() > 0) {\n                                        return addresses.get(0).getAddressLine(0);\n                                    }\n                                } catch (IOException e) {\n                                    e.printStackTrace();\n                                }\n                                return null;\n                            }\n\n                            @Override\n                            protected void onPostExecute(String address) {\n                                if (address != null) {\n                                    Log.d(\"ADDRESS IN DIALOG\", address);\n                                    addressString = address;\n                                    locBinding.locTv.setText(addressString);\n                                    autocompleteFragment.setText(addressString);\n                                    fragment.getMapAsync(googleMap -> {\n                                        coordinate = new LatLng(currentLat, currentLng);\n                                        MarkerOptions marker = new MarkerOptions();\n                                        marker.position(coordinate);\n                                        marker.title(\"Current Location\");\n                                        googleMap.addMarker(marker);\n                                        CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\n                                        googleMap.moveCamera(cameraUpdate);\n                                        googleMap.setMapStyle(MapStyleOptions.loadRawResourceStyle(getContext(), R.raw.map_style));\n                                    });\n                                }\n                            }\n                        }.execute();\n                    }\n                });\n            }\n        });\n        locBinding.setLocBtn.setOnClickListener(v -> {\n            binding.changeLoc.setText(addressString);\n            dialog.dismiss();\n            updateDistances();\n            if (coordinate != null) {\n                SharedPreferences.Editor editor = prefs.edit();\n                editor.putString(\"lastLatitude\", String.valueOf(coordinate.latitude));\n                editor.putString(\"lastLongitude\", String.valueOf(coordinate.longitude));\n                editor.apply();\n            }\n            Log.d(TAG, \"COORDINATES: \" + coordinate);\n        });\n    }\n\n    public void showSortDialog(){\n        DialogSortDestiBinding binding1 = DialogSortDestiBinding.inflate(LayoutInflater.from(getContext()));\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n        CheckBox ratingCheck = binding1.ratingSort;\n        CheckBox distanceCheck = binding1.distanceSort;\n        builder.setView(binding1.getRoot());\n        builder.setPositiveButton(R.string.sort_txt, (dialog, which) -> {\n            int start = 0;\n            if (ratingCheck.isChecked() && distanceCheck.isChecked()) {\n                Collections.sort(destinationArrayList, (destination1, destination2) -> {\n                    Double rating1 = Double.parseDouble(destination1.getRating());\n                    Double rating2 = Double.parseDouble(destination2.getRating());\n                    Float distance1 = destination1.getDistance();\n                    Float distance2 = destination2.getDistance();\n                    int distanceCompare = distance1.compareTo(distance2);\n                    if (distanceCompare != 0) {\n                        return distanceCompare;\n                    }\n                    return Double.compare(rating1, rating2);\n                });\n            } else if (ratingCheck.isChecked()) {\n                Collections.sort(destinationArrayList, (destination1, destination2) -> {\n                    Double rating1 = Double.parseDouble(destination1.getRating());\n                    Double rating2 = Double.parseDouble(destination2.getRating());\n                    return Double.compare(rating2, rating1);\n                });\n            } else if (distanceCheck.isChecked()) {\n                Collections.sort(destinationArrayList, (destination1, destination2) -> {\n                    Float distance1 = destination1.getDistance();\n                    Float distance2 = destination2.getDistance();\n                    return distance1.compareTo(distance2);\n                });\n            }\n            String searchText = binding.searchDesti.getText().toString().trim();\n            destinationAdapter.getFilter().filter(searchText);\n            int itemCount = destinationArrayList.size() - start;\n            destinationAdapter.notifyItemRangeChanged(start, itemCount);\n        });\n\n        builder.setNegativeButton(R.string.cancel_txt, (dialog, which) -> {\n            dialog.dismiss();\n        });\n\n        AlertDialog dialog = builder.create();\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\n        dialog.show();\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        locationManager.removeUpdates(locationListener);\n    }\n\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        if (requestCode == PERMISSION_REQUEST_LOCATION) {\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                startLocationUpdates();\n            } else {\n                Toast.makeText(getContext(), \"Location permission denied\", Toast.LENGTH_SHORT).show();\n            }\n        }\n    }\n\n    private void loadDestinations() {\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                destinationArrayList.clear();\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                    Destination destination = dataSnapshot.getValue(Destination.class);\n                    destinationArrayList.add(destination);\n                }\n                updateDistances();\n            }\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n                Log.e(TAG, \"Error: \" + error.getMessage());\n            }\n        });\n    }\n\n    private void loadCategoriedDestination(){\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.orderByChild(\"categoryId\").equalTo(categoryId)\n                .addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        destinationArrayList.clear();\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                            Destination destination = dataSnapshot.getValue(Destination.class);\n                            destinationArrayList.add(destination);\n                        }\n                        updateDistances();\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n\n                    }\n                });\n    }\n\n    private void updateDistances() {\n        for (Destination destination : destinationArrayList) {\n            getDestinationDistance(destination);\n        }\n        if (destinationAdapter == null) {\n            destinationAdapter = new DestinationAdapter(getContext(), destinationArrayList);\n            binding.destiRv.setAdapter(destinationAdapter);\n        } else {\n            destinationAdapter.notifyDataSetChanged();\n        }\n    }\n    private void getDestinationDistance(Destination destination) {\n        database.getReference(\"Destination\").child(destination.getId()).addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                double placeLat = Double.parseDouble(snapshot.child(\"latitude\").getValue().toString());\n                double placeLng = Double.parseDouble(snapshot.child(\"longitude\").getValue().toString());\n                if (coordinate != null) {\n                    currentLat = coordinate.latitude;\n                    currentLng = coordinate.longitude;\n                    distance = calculateDistance(currentLat, currentLng, placeLat, placeLng);\n                    destination.setDistance(distance);\n                    destinationAdapter.notifyDataSetChanged();\n\n                    new AsyncTask<Void, Void, String>() {\n                        @Override\n                        protected String doInBackground(Void... voids) {\n                            try {\n                                List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\n                                if (addresses.size() > 0) {\n                                    return addresses.get(0).getAddressLine(0);\n                                }\n                            } catch (IOException e) {\n                                e.printStackTrace();\n                            }\n                            return null;\n                        }\n\n                        @Override\n                        protected void onPostExecute(String address) {\n                            if (address != null) {\n                                Log.d(\"ADDRESS\", address);\n                                binding.changeLoc.setText(address);\n                            }\n                        }\n                    }.execute();\n                } else {\n                    if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\n                            ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                        ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n                    } else {\n                        fusedLocationClient.getLastLocation().addOnSuccessListener(location -> {\n                            if (location != null) {\n                                currentLat = location.getLatitude();\n                                currentLng = location.getLongitude();\n                                distance = calculateDistance(currentLat, currentLng, placeLat, placeLng);\n                                destination.setDistance(distance);\n                                sortDestination(destinationArrayList);\n                                destinationAdapter.notifyDataSetChanged();\n\n                                new AsyncTask<Void, Void, String>() {\n                                    @Override\n                                    protected String doInBackground(Void... voids) {\n                                        try {\n                                            List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\n                                            if (addresses.size() > 0) {\n                                                return addresses.get(0).getAddressLine(0);\n                                            }\n                                        } catch (IOException e) {\n                                            e.printStackTrace();\n                                        }\n                                        return null;\n                                    }\n\n                                    @Override\n                                    protected void onPostExecute(String address) {\n                                        if (address != null) {\n                                            Log.d(\"ADDRESS\", address);\n                                            binding.changeLoc.setText(address);\n                                        }\n                                    }\n                                }.execute();\n                            }\n                        });\n                    }\n                }\n                Log.d(TAG, \"distance: \" + destination.getDistance());\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n\n            }\n        });\n    };\n    private float calculateDistance(double lat1, double lon1, double lat2, double lon2) {\n        float[] results = new float[1];\n        Location location1 = new Location(\"\");\n        location1.setLatitude(lat1);\n        location1.setLongitude(lon1);\n        Location location2 = new Location(\"\");\n        location2.setLatitude(lat2);\n        location2.setLongitude(lon2);\n        Location.distanceBetween(location1.getLatitude(), location1.getLongitude(),\n                location2.getLatitude(), location2.getLongitude(), results);\n        return results[0] / 1000;\n    }\n\n    private void sortDestination(ArrayList<Destination> destinationArrayList){\n        Collections.sort(destinationArrayList, (destination1, destination2) -> {\n            String title1 = destination1.getTitle().toLowerCase();\n            String title2 = destination2.getTitle().toLowerCase();\n            return title1.compareTo(title2);\n        });\n    }\n\n    @SuppressLint(\"MissingPermission\")\n    private void startLocationUpdates() {\n        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\n            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n            builder.setTitle(R.string.gpsnotEnabled);\n            builder.setMessage(R.string.enable_gps_confirm);\n            builder.setPositiveButton(R.string.yes_txt, (dialog, which) -> {\n                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\n                startActivity(intent);\n            });\n            builder.setNegativeButton(R.string.no_txt, null);\n            builder.show();\n        } else {\n            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 0, locationListener);\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java	(date 1684989993879)
@@ -85,6 +85,7 @@
     private float distance;
     private boolean isChangeLocDialogShowing = false;
     private static SharedPreferences prefs;
+    DestinationPager destinationPager;
 
     public ShowDestinationFragment() {
     }
@@ -112,6 +113,7 @@
     public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         prefs = getActivity().getSharedPreferences("coordinate", Context.MODE_PRIVATE);
+        destinationPager = new DestinationPager();
         String lastLatitude = prefs.getString("lastLatitude", "0");
         String lastLongitude = prefs.getString("lastLongitude", "0");
         if (!lastLatitude.equals("0") && !lastLongitude.equals("0")) {
@@ -119,7 +121,7 @@
             double longitude = Double.parseDouble(lastLongitude);
             coordinate = new LatLng(latitude, longitude);
         }
-//        Log.d(TAG, "ON START COORDINATES: " + coordinate);
+        Log.d(TAG, "ON START COORDINATES: " + coordinate);
         binding = FragmentShowDestinationBinding.inflate(LayoutInflater.from(getContext()), container, false);
         if (category.equals("All")) {
             loadDestinations();
@@ -149,7 +151,7 @@
         if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
             ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, PERMISSION_REQUEST_LOCATION);
         } else {
-            startLocationUpdates();
+            //startLocationUpdates();
         }
         fusedLocationClient = LocationServices.getFusedLocationProviderClient(getContext());
         binding.searchDesti.addTextChangedListener(new TextWatcher(){
@@ -182,7 +184,6 @@
                 showChangeLocDialog();
             }
         });
-
         return binding.getRoot();
     }
 
@@ -215,6 +216,7 @@
                     }
                 } catch (IOException e) {
                     e.printStackTrace();
+                    return "Error: Geocoder service not available";
                 }
                 return null;
             }
@@ -290,6 +292,7 @@
                                     }
                                 } catch (IOException e) {
                                     e.printStackTrace();
+                                    return "Error: Geocoder service not available";
                                 }
                                 return null;
                             }
@@ -391,7 +394,7 @@
         super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         if (requestCode == PERMISSION_REQUEST_LOCATION) {
             if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
-                startLocationUpdates();
+//                startLocationUpdates();
             } else {
                 Toast.makeText(getContext(), "Location permission denied", Toast.LENGTH_SHORT).show();
             }
@@ -476,6 +479,7 @@
                                 }
                             } catch (IOException e) {
                                 e.printStackTrace();
+                                return "Error: Geocoder service not available";
                             }
                             return null;
                         }
@@ -512,6 +516,7 @@
                                             }
                                         } catch (IOException e) {
                                             e.printStackTrace();
+                                            return "Error: Geocoder service not available";
                                         }
                                         return null;
                                     }
@@ -558,21 +563,21 @@
         });
     }
 
-    @SuppressLint("MissingPermission")
-    private void startLocationUpdates() {
-        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
-            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
-            builder.setTitle(R.string.gpsnotEnabled);
-            builder.setMessage(R.string.enable_gps_confirm);
-            builder.setPositiveButton(R.string.yes_txt, (dialog, which) -> {
-                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
-                startActivity(intent);
-            });
-            builder.setNegativeButton(R.string.no_txt, null);
-            builder.show();
-        } else {
-            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 0, locationListener);
-        }
-    }
+//    @SuppressLint("MissingPermission")
+//    private void startLocationUpdates() {
+//        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
+//            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
+//            builder.setTitle(R.string.gpsnotEnabled);
+//            builder.setMessage(R.string.enable_gps_confirm);
+//            builder.setPositiveButton(R.string.yes_txt, (dialog, which) -> {
+//                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
+//                startActivity(intent);
+//            });
+//            builder.setNegativeButton(R.string.no_txt, null);
+//            builder.show();
+//        } else {
+//            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 0, locationListener);
+//        }
+//    }
 
 }
\ No newline at end of file
Index: app/src/main/res/values-en-rUS/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    #ENGLISH STRING\n    #home fragment\n    <string name=\"app_name\">Pekalongan City Guide</string>\n    <string name=\"short_explain\">Pekalongan is a city of Central Java, Indonesia. It was formerly the seat of Pekalongan Regency on the northern coast of the province, but is now an independent municipality within the province. The city is Central Java\\'s most important port, and is known for its batik.</string>\n    <string name=\"spotlight\">Spotlight</string>\n    <string name=\"history\">History</string>\n    <string name=\"history_txt\">The coastal area around Pekalongan was part of the ancient Holing (Kalingga) kingdom. The 7th century Sojomerto inscription, discovered in neighboring Batang Regency, Central Java, is linked with Kalingga as well as the ancestor of the Sailendras.</string>\n    <string name=\"read_more\">Read more</string>\n    <string name=\"culinary\">Local Cuisines</string>\n    <string name=\"breaking_news\">Breaking News</string>\n\n    #history detail activity\n    <string name=\"history_header\">Pekalongan City History</string>\n    <string name=\"history_body\">\\t\\t\\t\\t\\tThe coastal area around Pekalongan was part of the ancient Holing (Kalingga) kingdom. The 7th century Sojomerto inscription, discovered in neighboring Batang Regency, Central Java, is linked with Kalingga as well as the ancestor of the Sailendras. The exact location of the Kalingga capital is unclear however, that it was suggested lies somewhere between Pekalongan and Jepara. However it is most likely that Kalingga was located in Pekalongan instead of Jepara, since there is similarity of names between Kalingga and Pekalongan. The name probably slightly shifted over centuries, from Kalingga, Kaling, Kalong, and later added with pe- -an circumfix forming \\'Pekalongan\\'.\\n\\n\\t\\t\\t\\t\\tThe history of Pekalongan dated back to the early 12th century. A book written in 1178 by a Song dynasty official already had record of Pekalongan, then known to Chinese merchants as \\'Pukalong\\', it was then a seaport of Java (then known as Dvapa); the king of Java lived at Pukalong, knotted his hair at the back of his head, while his people wore short hair and wrapped their body with colorfully weaved cloth. Chinese merchant ship set sail from Canton during November, with the aid of fair wind sailed nonstop day and night, arrived at Pukalong in about one month. The people made wine from coconuts, produced very delicious red and white cane sugar, the kingdom made coins out of bronze and copper, 60 copper coins exchanged for one tael of gold. Local produces included pepper, clove, sandalwood, eaglewood and white round cardamom.\\n\\n  \\t\\t\\t\\t\\tPekalongan became a part of the empire of the Sultanate of Mataram through treaty and marriage alliances by the early 17th century. The area was on the geographic periphery of the empire, which was based in interior central Java. However, it was a wealthy area, and by the end of the 17th century, the substantial money and produce it sent to the center made it a key part of Mataram\\'s realm. The area went into economic decline during the 18th century, and the Dutch East India Company began to gain substantial influence over the area\\'s political and economic life. The Dutch built a fort in the city in 1753; this fort still stands.\\n\\n  \\t\\t\\t\\t\\tFrom the 1830s, the Pekalongan area became a major producer of sugar. Sugarcane had been grown in the area since the early 12th century, as recorded in Chinese history books, but production expanded substantially during the mid-19th century due to Dutch efforts. Initially, production was boosted through compulsory corvée labor; the Dutch colonial government took advantage of longstanding Javanese expectations that the peasantry contributes a part of their labor to the state. Between the 1860s and the 1890s, this system was phased out, and workers were paid directly. The colonial sugar industry collapsed during the Great Depression of the 1930s, but sugar remains a key export of the area in independent Indonesia.\\n\\n  \\t\\t\\t\\t\\t\\tOn October 8, 1945, an anti \\'Swapraja\\'/anti feudalism movement called Three Regions Movement \\'Gerakan Tiga Daerah\\' was established in Tegal, Pekalongan, and Brebes. The goal of this movement was to replace the blue blood regents (related to the kings from Jogyakarta and Surakarta) with ordinary people. According to the leaders of this movement, the old regents had cooperated with Japanese during World War II and sent people to the Japanese slave labor camps.  \\t\\t\\t\\t\\tThe main leader of this movement was Sarjiyo who became the new regent of Pekalongan. Other leaders of this movement were Kutil, K. Mijaya, and Ir. Sakirman. Ir Sakirman was the local leader of Indonesian Communist Party (PKI).\\n\\n  \\t\\t\\t\\t\\tThe old regents were arrested, stripped naked, and dragged into the prisons. Other government officials and police officers were kidnapped and massacred at Talang bridge. This movement also started a racial riot against ethnic Chinese in Brebes. The government of Republic of Indonesia (RI) in Jogyakarta disagree with this movement and declared it as an illegal movement.  On November 4, 1945, the movement attacked Indonesian army HQ and the regent office in Pekalongan. The rebels were defeated by Indonesian army in a fierce battle on December 21, 1945. Most leaders of this movement were arrested and thrown into the prisons. This rebellion is called Three Regions Affair.</string>\n    <string name=\"general_info\">General Info</string>\n    <string name=\"info_body\">Pekalongan Other transcription(s) :  - Hanacaraka :\\tꦥꦼꦏꦭꦺꦴꦁꦔꦤ꧀  - Pegon :\\tڤٓكالَوڠان  - Chinese\\t: 北加隆岸  Nickname : Kota Batik (lit. \\'the Batik city\\')  Motto(s) : Pekalongan Kota BATIK (Bersih (Clean), Aman (Safe), Tertib (Discipline), Indah (Beautiful), Komunikatif (Communicative))  Mayor :\\tSaelany Mahfudz  Area Total :\\t45.25 km2 (17.47 sq mi)  Total Population per-2019 :\\t307,097 Density : 6,800/km2 (18,000/sq mi)  Time zone : UTC+7 (Western Indonesia Time)  Area code : (+62) 285  Post Code :51100\\n\\nWebsite : pekalongankota.go.id</string>\n    <string name=\"important_numbers\">Important Numbers</string>\n    <string name=\"numbers\">Emergency Call : 112\\n\\nPekalongan City Police : (0285) 421692\\n\\nFirefighter : (0285) 435301\\n\\nPLN Pekalongan Office : (0285) 434785\\n\\nPrimary Tax Service Office : (0285) 422491\\n\\nBendan Hospital, Pekalongan : (0285) 437222\\n\\nRailway station : (0285) 421161</string>\n    <string name=\"coat_arms_old\">Coat of Arms of Pekalongan\\nfrom 1930s during colonial era</string>\n    <string name=\"coat_arms_new\">City Coat of arms \\n(Now)</string>\n    <string name=\"city_flag\">City Flag</string>\n    #culinary detail\n    <string name=\"culinary_header\">Culinary</string>\n    <string name=\"culinary_image\">Culinary Gallery</string>\n    #destination fragment\n    <string name=\"search_hint\">Search Destination</string>\n    #destination details\n    <string name=\"detail_header\">Destination Details</string>\n    <string name=\"bookmark_text\">Bookmark Place</string>\n    <string name=\"unbookmark_text\">Remove from Bookmark</string>\n    #bookmark fragment\n    <string name=\"bookmark_list\">Bookmark List</string>\n    #convo fragment\n    <string name=\"convo_header\">Daily Conversation Examples</string>\n    <string name=\"phrases_header\">Frequent Phrases</string>\n    #profile fragment\n    <string name=\"user_txt\">Username</string>\n    <string name=\"email_txt\">Email Address</string>\n    <string name=\"time_txt\">Date Joined</string>\n    <string name=\"type_txt\">User Type</string>\n    <string name=\"logout_text\">Logout</string>\n    <string name=\"change_lang\">Change Language</string>\n    #edit profile\n    <string name=\"edit_header\">Edit Profile</string>\n    <string name=\"update_text\">Update</string>\n    #login activity\n    <string name=\"email_hint\">Enter E-mail</string>\n    <string name=\"pass_hint\">Enter Password</string>\n    <string name=\"login_text\">Login</string>\n    <string name=\"without_text\">Continue without login</string>\n    <string name=\"donthave_text\">Don\\'t have any account?</string>\n    <string name=\"toRegister_text\">REGISTER NOW</string>\n    #register activity\n    <string name=\"regisuser_text\">Enter Username</string>\n    <string name=\"regisemail_text\">Enter E-mail</string>\n    <string name=\"regispass_text\">Enter Password</string>\n    <string name=\"regiscfmpass_text\">Confirm Your Password</string>\n    <string name=\"regisbtn_text\">Register</string>\n    <string name=\"change_password\">Change Password</string>\n    <string name=\"curr_pass\">Enter Current Password</string>\n    <string name=\"edit_pass\">Enter Password</string>\n    <string name=\"cfmeditpass\">Confirm New Password</string>\n    <string name=\"update_pass\">Update</string>\n    <string name=\"itinerary_profile\">Itinerary List</string>\n    <string name=\"show_routes\">Show Routes</string>\n    <string name=\"search_bookmark\">Search Bookmark</string>\n    <string name=\"add_to_itinerary\">Add to Itinerary</string>\n    <string name=\"select_date_iter\">Select date</string>\n    <string name=\"select_start_time_iter\">Select start time</string>\n    <string name=\"select_end_time_iter\">Select end time</string>\n    <string name=\"add_to_itinerary_btn\">Add to Itinerary</string>\n    <string name=\"search_destination_admin\">Search Destination</string>\n    <string name=\"destination_admin\">Destination</string>\n    <string name=\"category_admin\">Category</string>\n    <string name=\"detail_news\">Detail News</string>\n    <string name=\"itinerary_list_header\">Itinerary List</string>\n    <string name=\"enter_new_username\">Enter new username</string>\n    <string name=\"edit_destination_header\">Edit Destination</string>\n    <string name=\"edit_destination_name\">Destination Name</string>\n    <string name=\"edit_destination_description\">Destination Description</string>\n    <string name=\"edit_pick_category\">Pick Category</string>\n    <string name=\"update_destination_btn\">Update Destination</string>\n    <string name=\"opening_hours_detail\">Opening Hours</string>\n    <string name=\"place_reviews_detail\">Place Reviews</string>\n    <string name=\"logout_confirm\">Are you sure you want to log out?</string>\n    <string name=\"yes_txt\">Yes</string>\n    <string name=\"no_txt\">No</string>\n    <string name=\"gpsnotEnabled\">GPS not enabled</string>\n    <string name=\"enable_gps_confirm\">Would you like to enable GPS?</string>\n    <string name=\"enter_name_edit\">Enter new name</string>\n    <string name=\"enter_cur_pass\">Enter current password!</string>\n    <string name=\"pass8chara\">Password must be more than 8 characters!</string>\n    <string name=\"pass1num\">Password must contain at least one number!</string>\n    <string name=\"pass1Symbol\">Password must contain at least one symbol!</string>\n    <string name=\"enternewPass\">Enter new password!</string>\n    <string name=\"passcantSame\">Your new password cannot be the same as your current password!</string>\n    <string name=\"cfmpassEnter\">Enter confirm password!</string>\n    <string name=\"passnotMatch\">Password does not match!</string>\n    <string name=\"pass_updated_txt\">Password updated successfully</string>\n    <string name=\"failed_update_pass\">Failed to update password</string>\n    <string name=\"failed_authentic\">Failed to re-authenticate user</string>\n    <string name=\"removed_bookmark\">Removed from Bookmark</string>\n    <string name=\"added_bookmark\">Added to Bookmark</string>\n    <string name=\"notLogin\">You Are Not Logged In</string>\n    <string name=\"select_language\">Select Language</string>\n    <string name=\"english_opt\">English</string>\n    <string name=\"indo_opt\">Indonesian</string>\n    <string name=\"no_internet\">No internet connection</string>\n    <string name=\"error_connect_database\">Error connecting to the database</string>\n    <string name=\"choose_date\">Please choose a date!</string>\n    <string name=\"choose_start\">Please choose a starting time!</string>\n    <string name=\"choose_end\">Please choose an end time!</string>\n    <string name=\"added_to_iter\">Destination Added to Itinerary!</string>\n    <string name=\"sort_txt\">Sort</string>\n    <string name=\"cancel_txt\">Cancel</string>\n    <string name=\"sort_by\">Sort By :</string>\n    <string name=\"rating_txt\">Rating</string>\n    <string name=\"distance_txt\">Distance</string>\n    <string name=\"press_back\">Press back button again to exit</string>\n    <string name=\"no_map_app\">Google Maps is not installed on your device. Opening Google Maps website...</string>\n    <string name=\"no_desttination_iter\">There is no destination in the itinerary</string>\n    <string name=\"add_comment\">Add Comment</string>\n    <string name=\"comment_text\">Comments</string>\n    <string name=\"submit_text\">submit</string>\n    <string name=\"comment_empty\">Enter your comment!</string>\n    <string name=\"please_wait\">Please Wait</string>\n    <string name=\"adding_comment\">Adding comment...</string>\n    <string name=\"failed_add_comment\">Failed to add comment due to</string>\n    <string name=\"success_add_comment\">Comment added...</string>\n    <string name=\"delete_comment\">Delete Comment</string>\n    <string name=\"delete_confirm\">Are you sure you want to delete this comment?</string>\n    <string name=\"delete_opt\">Delete</string>\n    <string name=\"cancel_opt\">Cancel</string>\n    <string name=\"comment_deleted\">Comment Deleted!</string>\n    <string name=\"failed_delete_comment\">Failed to delete comment due to</string>\n    <string name=\"edit_comment\">Edit Comment</string>\n    <string name=\"edit_success\">Succesfully edit comment!</string>\n    <string name=\"failed_edit_comment\">failed to edit comment due to</string>\n    <string name=\"login_try\">Logging in..</string>\n    <string name=\"check_user\">Checking user..</string>\n    <string name=\"wrong_pass\">Wrong password!</string>\n    <string name=\"empty_username\">Username cannot be empty!</string>\n    <string name=\"user_length\">Username must be between 3-12 characters!</string>\n    <string name=\"empty_email\">Email cannot be empty!</string>\n    <string name=\"wrong_email\">Invalid Email Address!</string>\n    <string name=\"empty_pass\">Password cannot be empty!</string>\n    <string name=\"pass_length\">Password must be more than 8 characters!</string>\n    <string name=\"pass_1num\">Password must contain at least one number!</string>\n    <string name=\"create_account\">Creating account...</string>\n    <string name=\"saving_user_info\">Saving user info</string>\n    <string name=\"updating_profile\">updating user profile...</string>\n    <string name=\"updating_image\">Updating profile image</string>\n    <string name=\"dashboard_admin\">Dashboard Admin</string>\n    <string name=\"search_category\">Search Category</string>\n    <string name=\"add_category\">Add category</string>\n    <string name=\"add_new_destination_category\">Add New Destination Category</string>\n    <string name=\"destination_description\">Destination Description</string>\n    <string name=\"add_new_destination\">Add New Destination</string>\n    <string name=\"add_item\">Add ITEM</string>\n    <string name=\"basic_javanese_characters\">Basic Javanese Characters</string>\n    <string name=\"city_logo\">City Logo\\n(2014-2017)</string>\n    <string name=\"remove_bookmark\">Remove Bookmark</string>\n    <string name=\"remove_confirm\">Are you sure to remove category</string>\n    <string name=\"carakan_letters_n_ngelgena\">CARAKAN LETTERS\\n(Ngelgena)</string>\n    <string name=\"couple_letters_n_mati\">COUPLE LETTERS\\n(Mati)</string>\n    <string name=\"used_email\">Email is already used !</string>\n    <string name=\"deleted_category\">Category deleted successfully!</string>\n    <string name=\"cat_destination_deleted\">Destinations deleted successfully!</string>\n    <string name=\"deleting_item\">Deleting item...</string>\n    <string name=\"acount_created\">Account created!</string>\n    <string name=\"suces_register\">Registered successfully!</string>\n    <string name=\"delete_desti_confirm\">\\\"Are you sure you want to delete \\\"</string>\n    <string name=\"delete_confirmation\">Confirmation</string>\n    <string name=\"error_news\">Error fetching news articles:</string>\n    <string name=\"empty_bookmark\">Empty Bookmark</string>\n    <string name=\"add_itinerary\">Add Itinerary</string>\n    <string name=\"choose_location\">Choose Location</string>\n    <string name=\"your_location\">Your Location</string>\n    <string name=\"use_current_location\">Use current location</string>\n    <string name=\"update_itinerary\">Update Itinerary</string>\n    <string name=\"empty_itinerary\">Empty Itinerary</string>\n    <string name=\"confirm_delete\">Confirm Delete</string>\n    <string name=\"delete_item\">Are you sure you want to delete this item ?</string>\n    <string name=\"yes_myapp\">yes</string>\n    <string name=\"wait\">Please Wait</string>\n    <string name=\"deleting\">Deleting . . .</string>\n    <string name=\"delete_iter\">Itinerary deleted successfully</string>\n    <string name=\"fail_deteltIter\">Failed to delete itinerary because of</string>\n    <string name=\"noMyapp\">No</string>\n    <string name=\"iter_notdeleted\">Itinerary Not Deleted</string>\n    <string name=\"set_location\">Set Location</string>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-en-rUS/strings.xml b/app/src/main/res/values-en-rUS/strings.xml
--- a/app/src/main/res/values-en-rUS/strings.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/res/values-en-rUS/strings.xml	(date 1684922538250)
@@ -191,5 +191,37 @@
     <string name="noMyapp">No</string>
     <string name="iter_notdeleted">Itinerary Not Deleted</string>
     <string name="set_location">Set Location</string>
+    <string name="select_start_date">Select start date</string>
+    <string name="select_end_date">Select end date</string>
+    <string name="add_date">add date</string>
+    <string name="data_saved">Date Saved</string>
+    <string name="item_selected">" "item selected</string>
+    <string name="items_selected">" "items selected</string>
+    <string name="pick_start">Pick starting location</string>
+    <string name="below_are">Below are the places nearest to your current location</string>
+    <string name="pick_next">Pick the next location</string>
+    <string name="place_near_to">Below are the places nearest to</string>
+    <string name="next_txt">next</string>
+    <string name="pick_aPlace">Please pick a place</string>
+    <string name="not_found">Not Found</string>
+    <string name="forty5_minute">45 Minutes - 2 Hour</string>
+    <string name="based_on">Subjective and can vary based on personal preferences</string>
+    <string name="one_two_hour">1 Hour - 2 Hour</string>
+    <string name="depend_onNeeds">Vary depend on needs</string>
+    <string name="thirty_oneHour">30 Minutes - 1 Hour</string>
+    <string name="thirty2Hour">30 Minutes - 2 Hour</string>
+    <string name="pickTheTime">Pick the time</string>
+    <string name="rekomen_time">Recommended time:""</string>
+    <string name="data_not_found">Opening hours data not found</string>
+    <string name="allowAnyTime">Allowing any time to be selected</string>
+    <string name="outside_business">Selected time is outside business hours</string>
+    <string name="justnotAvail">Opening hours not available</string>
+    <string name="invalidTimeSlot">Invalid time slot:</string>
+    <string name="invalid_opening_format">Invalid opening hours format</string>
+    <string name="itinerary_updated">itinerary updated</string>
+    <string name="iterUploadSuccess">Itinerary uploaded successfully</string>
+    <string name="failIterUpload">Itinerary upload failed due to</string>
+    <string name="iterUpdateSuccess">Itinerary updated successfully</string>
+    <string name="iterFailUpdate">Failed to update itinerary:</string>
 
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/item_input_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/add_item_cardview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:cardBackgroundColor=\"@color/ic_launcher_background\"\n    app:cardCornerRadius=\"8dp\"\n    app:cardElevation=\"4dp\"\n    android:layout_marginVertical=\"8dp\"\n    android:layout_margin=\"16dp\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"130dp\"\n        android:orientation=\"horizontal\"\n        android:padding=\"8dp\">\n\n        <LinearLayout\n            android:id=\"@+id/layout_bg\"\n            android:layout_width=\"130dp\"\n            android:layout_height=\"130dp\"\n            android:gravity=\"center\"\n            android:background=\"@color/palette_4\"\n            android:backgroundTintMode=\"multiply\"\n            android:orientation=\"vertical\" />\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\"\n            android:padding=\"8dp\">\n\n            <TextView\n                android:id=\"@+id/placeNameTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:textSize=\"16dp\"\n                android:maxLines=\"1\"\n                android:ellipsize=\"end\"\n                android:fontFamily=\"@font/poppins_semibold\"\n                android:text=\"Name\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/palette_2\"\n                android:textStyle=\"bold\" />\n\n            <com.google.android.material.divider.MaterialDivider\n                app:dividerColor=\"@color/palette_4\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\" />\n\n            <TextView\n                android:layout_marginTop=\"10dp\"\n                android:drawablePadding=\"5dp\"\n                android:drawableTint=\"@color/palette_1\"\n                android:drawableLeft=\"@drawable/distance\"\n                android:id=\"@+id/distanceTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:textSize=\"14dp\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/palette_3\"\n                android:text=\"distance\" />\n\n            <TextView\n                android:drawableLeft=\"@drawable/car_direction\"\n                android:drawablePadding=\"5dp\"\n                android:drawableTint=\"@color/palette_1\"\n                android:id=\"@+id/durationTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"duration\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:textSize=\"14dp\"\n                android:layout_marginTop=\"5dp\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/palette_3\" />\n        </LinearLayout>\n    </LinearLayout>\n</androidx.cardview.widget.CardView>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_input_details.xml b/app/src/main/res/layout/item_input_details.xml
--- a/app/src/main/res/layout/item_input_details.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/res/layout/item_input_details.xml	(date 1684922691014)
@@ -12,7 +12,7 @@
 
     <LinearLayout
         android:layout_width="match_parent"
-        android:layout_height="130dp"
+        android:layout_height="wrap_content"
         android:orientation="horizontal"
         android:padding="8dp">
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_17_23__5_19_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23__5_19_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23__5_19_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23__5_19_PM__Changes_.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ /dev/null	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_5_17_23,_5_19_PM_[Changes]" date="1684318816553" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_5_19_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5/17/23, 5:19 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_5_19_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_5_19_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_5_19_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_5_19_PM_[Changes]/shelved.patch	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ /dev/null	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
@@ -1,208 +0,0 @@
-Index: app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.os.Bundle;\nimport android.text.Editable;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.RelativeLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.binus.pekalongancityguide.Adapter.IterAdapter;\nimport com.binus.pekalongancityguide.ItemTemplate.Destination;\nimport com.binus.pekalongancityguide.R;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\n\nimport static android.content.ContentValues.TAG;\n\npublic class AddItinerary extends Fragment implements IterAdapter.OnItemLongClickListener {\n    private String categoryId, category, startDate, endDate, uid;\n    public IterAdapter iterAdapter;\n    private RecyclerView iterRV;\n    private Button addIter;\n    private RelativeLayout selectLayout;\n    private TextView selectTv;\n    private ImageButton selectCancel;\n    public ArrayList<Destination> destinationArrayList, selectedItems;\n    private View view;\n    private ItineraryPager itineraryPager;\n\n\n    public AddItinerary() {\n    }\n\n    public static AddItinerary newInstance(String categoryId, String categoryName, String categoryUid, String startDate, String endDate) {\n        AddItinerary fragment = new AddItinerary();\n        Bundle args = new Bundle();\n        args.putString(\"categoryId\", categoryId);\n        args.putString(\"category\", categoryName);\n        args.putString(\"uid\", categoryUid);\n        args.putString(\"startDate\", startDate);\n        args.putString(\"endDate\", endDate);\n        Log.d(TAG, \"newInstance: categoryId=\" + categoryId + \", categoryName=\" + categoryName + \", categoryUid=\" + categoryUid + \", startDate=\" + startDate + \", endDate=\" + endDate);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    public static AddItinerary getInstance() {\n        return new AddItinerary();\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            categoryId = getArguments().getString(\"categoryId\");\n            category = getArguments().getString(\"category\");\n            uid = getArguments().getString(\"uid\");\n            startDate = getArguments().getString(\"startDate\");\n            endDate = getArguments().getString(\"endDate\");\n            Log.d(TAG, \"onCreate: categoryId=\" + categoryId + \", category=\" + category + \", uid=\" + uid + \", startDate=\" + startDate + \", endDate=\" + endDate);\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        view = inflater.inflate(R.layout.fragment_add_itinerary, container, false);\n        init();\n        checkSelect();\n        EditText iterSearch = view.findViewById(R.id.search_iter);\n        iterSearch.addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n                try {\n                    iterAdapter.getFilter().filter(s);\n                }catch (Exception e){\n                    Log.d(TAG,\"onTextChanged :\"+e.getMessage());\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n        if (category.equals(\"All\")) {\n            loadDestinations();\n        } else {\n            loadCategoriedDestination();\n        }\n        addIter.setOnClickListener(v -> {\n            Log.d(TAG, \"start: \" + startDate + \" end : \" + endDate);\n        });\n        selectCancel.setOnClickListener(v -> iterAdapter.exitSelectMode());\n        return view;\n    }\n\n    private void init() {\n        iterRV = view.findViewById(R.id.recycler_view);\n        addIter = view.findViewById(R.id.add_iter_btn);\n        selectTv = view.findViewById(R.id.select_tv);\n        selectLayout = view.findViewById(R.id.select_layout);\n        selectCancel = view.findViewById(R.id.select_cancel);\n    }\n    private void loadDestinations() {\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                destinationArrayList.clear();\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                    Destination destination = dataSnapshot.getValue(Destination.class);\n                    destinationArrayList.add(destination);\n                    sortDestination(destinationArrayList);\n                }\n                if (iterAdapter == null) {\n                    initIterAdapter();\n                } else {\n                    iterAdapter.notifyDataSetChanged();\n                }\n            }\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n                Log.e(TAG, \"Error: \" + error.getMessage());\n            }\n        });\n    }\n\n    private void loadCategoriedDestination(){\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.orderByChild(\"categoryId\").equalTo(categoryId)\n                .addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        destinationArrayList.clear();\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                            Destination destination = dataSnapshot.getValue(Destination.class);\n                            destinationArrayList.add(destination);\n                            sortDestination(destinationArrayList);\n                        }\n                        if (iterAdapter == null) {\n                            initIterAdapter();\n                        } else {\n                            iterAdapter.notifyDataSetChanged();\n                        }\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n\n                    }\n                });\n    }\n\n    private void sortDestination(ArrayList<Destination> destinationArrayList) {\n        Collections.sort(destinationArrayList, (destination1, destination2) -> {\n            String title1 = destination1.getTitle().toLowerCase();\n            String title2 = destination2.getTitle().toLowerCase();\n            return title1.compareTo(title2);\n        });\n    }\n\n    public void checkSelect() {\n        if (iterAdapter != null) {\n            selectedItems = iterAdapter.getSelectedItems();\n            int counter;\n            if (selectedItems.size() < 1) {\n                selectLayout.setVisibility(View.GONE);\n                addIter.setVisibility(View.INVISIBLE);\n            } else if (selectedItems.size() == 1) {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" item selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            } else {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" items selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            }\n        } else {\n            addIter.setVisibility(View.INVISIBLE);\n            selectLayout.setVisibility(View.GONE);\n        }\n    }\n\n    public void initIterAdapter() {\n        iterAdapter = new IterAdapter(getContext(), destinationArrayList, this, this, itineraryPager); // Pass the reference to the fragment\n        iterRV.setAdapter(iterAdapter);\n    }\n\n    @Override\n    public void onItemLongClick(Destination destination) {\n        checkSelect();\n    }\n\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
---- a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(revision 40a0ad2c107165be0f59629ac2d2210b84ce9e73)
-+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(date 1684316510274)
-@@ -1,5 +1,6 @@
- package com.binus.pekalongancityguide.Layout;
- 
-+import android.app.AlertDialog;
- import android.os.Bundle;
- import android.text.Editable;
- import android.text.TextWatcher;
-@@ -10,8 +11,10 @@
- import android.widget.Button;
- import android.widget.EditText;
- import android.widget.ImageButton;
-+import android.widget.LinearLayout;
- import android.widget.RelativeLayout;
- import android.widget.TextView;
-+import android.widget.Toast;
- 
- import androidx.annotation.NonNull;
- import androidx.fragment.app.Fragment;
-@@ -111,11 +114,53 @@
-         }
-         addIter.setOnClickListener(v -> {
-             Log.d(TAG, "start: " + startDate + " end : " + endDate);
-+                showInputDialog();
-         });
-         selectCancel.setOnClickListener(v -> iterAdapter.exitSelectMode());
-         return view;
-     }
- 
-+    private void showInputDialog() {
-+        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
-+        builder.setTitle("Enter Details");
-+        View view = LayoutInflater.from(getContext()).inflate(R.layout.dialog_input_details, null);
-+        builder.setView(view);
-+        LinearLayout containerLayout = view.findViewById(R.id.container_layout);
-+        ArrayList<Destination> selectedItems = iterAdapter.getSelectedItems();
-+        for (int i = 0; i < selectedItems.size(); i++) {
-+            View itemView = LayoutInflater.from(getContext()).inflate(R.layout.item_input_details, null);
-+            EditText dateEditText = itemView.findViewById(R.id.edit_text_date);
-+            EditText startTimeEditText = itemView.findViewById(R.id.edit_text_start_time);
-+            EditText endTimeEditText = itemView.findViewById(R.id.edit_text_end_time);
-+            containerLayout.addView(itemView);
-+        }
-+        builder.setPositiveButton("OK", (dialog, which) -> {
-+            // Iterate through the container layout and retrieve the input data for each item
-+            for (int i = 0; i < containerLayout.getChildCount(); i++) {
-+                Destination selectedItem = selectedItems.get(i);
-+                View itemView = containerLayout.getChildAt(i);
-+                TextView placeText = itemView.findViewById(R.id.place_name);
-+                EditText dateEditText = itemView.findViewById(R.id.edit_text_date);
-+                EditText startTimeEditText = itemView.findViewById(R.id.edit_text_start_time);
-+                EditText endTimeEditText = itemView.findViewById(R.id.edit_text_end_time);
-+                placeText.setText(selectedItems.get(i).getTitle());
-+                String date = dateEditText.getText().toString();
-+                String startTime = startTimeEditText.getText().toString();
-+                String endTime = endTimeEditText.getText().toString();
-+                Log.d(TAG, "Selected Item: " + selectedItem.getTitle());
-+
-+            }
-+            dialog.dismiss();
-+        });
-+
-+        builder.setNegativeButton("Cancel", (dialog, which) -> dialog.dismiss());
-+
-+        AlertDialog dialog = builder.create();
-+        dialog.show();
-+    }
-+
-+
-+
-     private void init() {
-         iterRV = view.findViewById(R.id.recycler_view);
-         addIter = view.findViewById(R.id.add_iter_btn);
-Index: app/src/main/res/layout/dialog_input_details.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/dialog_input_details.xml b/app/src/main/res/layout/dialog_input_details.xml
-new file mode 100644
---- /dev/null	(date 1684309611100)
-+++ b/app/src/main/res/layout/dialog_input_details.xml	(date 1684309611100)
-@@ -0,0 +1,47 @@
-+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    app:cardElevation="4dp"
-+    app:cardCornerRadius="16dp"
-+    android:layout_marginHorizontal="5dp"
-+    android:layout_marginVertical="5dp">
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent"
-+        android:background="@color/palette_4"
-+        android:orientation="vertical"
-+        android:padding="16dp">
-+        <TextView
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:textSize="20dp"
-+            android:textColor="@color/palette_2"
-+            android:text="Add to Itinerary"
-+            android:textStyle="bold"
-+            android:layout_marginBottom="15dp"
-+            android:fontFamily="@font/poppins_semibold"/>
-+        <ScrollView
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content">
-+
-+            <LinearLayout
-+                android:id="@+id/container_layout"
-+                android:layout_width="match_parent"
-+                android:layout_height="wrap_content"
-+                android:orientation="vertical">
-+
-+                <!-- The dynamically added item layouts will go here -->
-+
-+            </LinearLayout>
-+
-+        </ScrollView>
-+<Button
-+    android:id="@+id/add_iter_button"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    android:text="Add"
-+    android:textColor="@color/palette_4"/>
-+    </LinearLayout>
-+</androidx.cardview.widget.CardView>
-+
-Index: app/src/main/res/layout/item_input_details.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/item_input_details.xml b/app/src/main/res/layout/item_input_details.xml
-new file mode 100644
---- /dev/null	(date 1684309611174)
-+++ b/app/src/main/res/layout/item_input_details.xml	(date 1684309611174)
-@@ -0,0 +1,41 @@
-+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    app:cardElevation="4dp"
-+    app:cardCornerRadius="16dp"
-+    android:layout_marginHorizontal="5dp"
-+    android:layout_marginVertical="5dp">
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:background="@color/palette_4"
-+        android:orientation="vertical">
-+        <TextView
-+            android:id="@+id/place_name"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:text="Destination Name"
-+            android:textSize="18sp"
-+            android:textStyle="bold"
-+            android:padding="8dp"
-+            android:background="@color/ic_launcher_background"
-+            android:textColor="@color/palette_2" />
-+        <EditText
-+            android:id="@+id/edit_text_date"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:hint="Date" />
-+        <EditText
-+            android:id="@+id/edit_text_start_time"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:hint="Start Time" />
-+        <EditText
-+            android:id="@+id/edit_text_end_time"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:hint="End Time" />
-+    </LinearLayout>
-+</androidx.cardview.widget.CardView>
-+
-Index: app/src/main/res/layout/fragment_itinerary_pager.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <data>\n\n    </data>\n\n    <FrameLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@drawable/background_batik\"\n        android:backgroundTint=\"@color/palette_4\"\n        android:backgroundTintMode=\"screen\"\n        tools:context=\".Layout.ItineraryPager\">\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n            <com.google.android.material.tabs.TabLayout\n                android:id=\"@+id/iter_tab_layout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:background=\"#D5BB91\"\n                app:tabBackground=\"@drawable/tab_selector\"\n                app:tabIndicatorHeight=\"0dp\"\n                app:tabMode=\"scrollable\"\n                app:tabUnboundedRipple=\"false\"\n                app:tabTextColor=\"@color/palette_2\"\n                app:tabSelectedTextColor=\"@color/palette_4\"\n                app:tabIndicatorFullWidth=\"false\" />\n            <androidx.viewpager.widget.ViewPager\n                android:id=\"@+id/iter_viewPager\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_below=\"@id/iter_tab_layout\" />\n        </RelativeLayout>\n\n    </FrameLayout>\n</layout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/fragment_itinerary_pager.xml b/app/src/main/res/layout/fragment_itinerary_pager.xml
---- a/app/src/main/res/layout/fragment_itinerary_pager.xml	(revision 40a0ad2c107165be0f59629ac2d2210b84ce9e73)
-+++ b/app/src/main/res/layout/fragment_itinerary_pager.xml	(date 1684309611259)
-@@ -36,6 +36,5 @@
-                 android:layout_height="wrap_content"
-                 android:layout_below="@id/iter_tab_layout" />
-         </RelativeLayout>
--
-     </FrameLayout>
- </layout>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_2_46_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_2_46_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_2_46_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_2_46_PM_[Changes]/shelved.patch	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ /dev/null	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
@@ -1,381 +0,0 @@
-Index: app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.os.Bundle;\nimport android.text.Editable;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.RelativeLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.binus.pekalongancityguide.Adapter.IterAdapter;\nimport com.binus.pekalongancityguide.ItemTemplate.Destination;\nimport com.binus.pekalongancityguide.R;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\n\nimport static android.content.ContentValues.TAG;\n\npublic class AddItinerary extends Fragment implements IterAdapter.OnItemLongClickListener {\n    private String categoryId, category, startDate, endDate, uid;\n    public IterAdapter iterAdapter;\n    private RecyclerView iterRV;\n    private Button addIter;\n    private RelativeLayout selectLayout;\n    private TextView selectTv;\n    private ImageButton selectCancel;\n    public ArrayList<Destination> destinationArrayList, selectedItems;\n    private View view;\n    private ItineraryPager itineraryPager;\n\n\n    public AddItinerary() {\n    }\n\n    public static AddItinerary newInstance(String categoryId, String categoryName, String categoryUid, String startDate, String endDate) {\n        AddItinerary fragment = new AddItinerary();\n        Bundle args = new Bundle();\n        args.putString(\"categoryId\", categoryId);\n        args.putString(\"category\", categoryName);\n        args.putString(\"uid\", categoryUid);\n        args.putString(\"startDate\", startDate);\n        args.putString(\"endDate\", endDate);\n        Log.d(TAG, \"newInstance: categoryId=\" + categoryId + \", categoryName=\" + categoryName + \", categoryUid=\" + categoryUid + \", startDate=\" + startDate + \", endDate=\" + endDate);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    public static AddItinerary getInstance() {\n        return new AddItinerary();\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            categoryId = getArguments().getString(\"categoryId\");\n            category = getArguments().getString(\"category\");\n            uid = getArguments().getString(\"uid\");\n            startDate = getArguments().getString(\"startDate\");\n            endDate = getArguments().getString(\"endDate\");\n            Log.d(TAG, \"onCreate: categoryId=\" + categoryId + \", category=\" + category + \", uid=\" + uid + \", startDate=\" + startDate + \", endDate=\" + endDate);\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        view = inflater.inflate(R.layout.fragment_add_itinerary, container, false);\n        init();\n        checkSelect();\n        EditText iterSearch = view.findViewById(R.id.search_iter);\n        iterSearch.addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n                try {\n                    iterAdapter.getFilter().filter(s);\n                }catch (Exception e){\n                    Log.d(TAG,\"onTextChanged :\"+e.getMessage());\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n        if (category.equals(\"All\")) {\n            loadDestinations();\n        } else {\n            loadCategoriedDestination();\n        }\n        addIter.setOnClickListener(v -> {\n            Log.d(TAG, \"start: \" + startDate + \" end : \" + endDate);\n        });\n        selectCancel.setOnClickListener(v -> iterAdapter.exitSelectMode());\n        return view;\n    }\n\n    private void init() {\n        iterRV = view.findViewById(R.id.recycler_view);\n        addIter = view.findViewById(R.id.add_iter_btn);\n        selectTv = view.findViewById(R.id.select_tv);\n        selectLayout = view.findViewById(R.id.select_layout);\n        selectCancel = view.findViewById(R.id.select_cancel);\n    }\n    private void loadDestinations() {\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                destinationArrayList.clear();\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                    Destination destination = dataSnapshot.getValue(Destination.class);\n                    destinationArrayList.add(destination);\n                    sortDestination(destinationArrayList);\n                }\n                if (iterAdapter == null) {\n                    initIterAdapter();\n                } else {\n                    iterAdapter.notifyDataSetChanged();\n                }\n            }\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n                Log.e(TAG, \"Error: \" + error.getMessage());\n            }\n        });\n    }\n\n    private void loadCategoriedDestination(){\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.orderByChild(\"categoryId\").equalTo(categoryId)\n                .addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        destinationArrayList.clear();\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                            Destination destination = dataSnapshot.getValue(Destination.class);\n                            destinationArrayList.add(destination);\n                            sortDestination(destinationArrayList);\n                        }\n                        if (iterAdapter == null) {\n                            initIterAdapter();\n                        } else {\n                            iterAdapter.notifyDataSetChanged();\n                        }\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n\n                    }\n                });\n    }\n\n    private void sortDestination(ArrayList<Destination> destinationArrayList) {\n        Collections.sort(destinationArrayList, (destination1, destination2) -> {\n            String title1 = destination1.getTitle().toLowerCase();\n            String title2 = destination2.getTitle().toLowerCase();\n            return title1.compareTo(title2);\n        });\n    }\n\n    public void checkSelect() {\n        if (iterAdapter != null) {\n            selectedItems = iterAdapter.getSelectedItems();\n            int counter;\n            if (selectedItems.size() < 1) {\n                selectLayout.setVisibility(View.GONE);\n                addIter.setVisibility(View.INVISIBLE);\n            } else if (selectedItems.size() == 1) {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" item selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            } else {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" items selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            }\n        } else {\n            addIter.setVisibility(View.INVISIBLE);\n            selectLayout.setVisibility(View.GONE);\n        }\n    }\n\n    public void initIterAdapter() {\n        iterAdapter = new IterAdapter(getContext(), destinationArrayList, this, this, itineraryPager); // Pass the reference to the fragment\n        iterRV.setAdapter(iterAdapter);\n    }\n\n    @Override\n    public void onItemLongClick(Destination destination) {\n        checkSelect();\n    }\n\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
---- a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(revision 471ae36e6035a672158229fec800b24d6a495ad6)
-+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(date 1684309080843)
-@@ -1,5 +1,6 @@
- package com.binus.pekalongancityguide.Layout;
- 
-+import android.app.AlertDialog;
- import android.os.Bundle;
- import android.text.Editable;
- import android.text.TextWatcher;
-@@ -10,8 +11,10 @@
- import android.widget.Button;
- import android.widget.EditText;
- import android.widget.ImageButton;
-+import android.widget.LinearLayout;
- import android.widget.RelativeLayout;
- import android.widget.TextView;
-+import android.widget.Toast;
- 
- import androidx.annotation.NonNull;
- import androidx.fragment.app.Fragment;
-@@ -111,11 +114,60 @@
-         }
-         addIter.setOnClickListener(v -> {
-             Log.d(TAG, "start: " + startDate + " end : " + endDate);
-+                showInputDialog();
-         });
-         selectCancel.setOnClickListener(v -> iterAdapter.exitSelectMode());
-         return view;
-     }
- 
-+    private void showInputDialog() {
-+        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
-+        AlertDialog dialog = builder.create();
-+        dialog.show();
-+        // Set the custom layout for the dialog
-+        View view = LayoutInflater.from(getContext()).inflate(R.layout.dialog_input_details, null);
-+        builder.setView(view);
-+        // Get a reference to the container layout where the EditText fields will be added
-+        LinearLayout containerLayout = view.findViewById(R.id.container_layout);
-+        Button addBtn = view.findViewById(R.id.add_iter_button);
-+        // Get the selected items from the adapter
-+        ArrayList<Destination> selectedItems = iterAdapter.getSelectedItems();
-+
-+        // Iterate through the selected items and add EditText fields for each item
-+        for (int i = 0; i < selectedItems.size(); i++) {
-+            Destination selectedItem = selectedItems.get(i);
-+            View itemView = LayoutInflater.from(getContext()).inflate(R.layout.item_input_details, null);
-+            TextView placeText = itemView.findViewById(R.id.place_name);
-+            EditText dateEditText = itemView.findViewById(R.id.edit_text_date);
-+            EditText startTimeEditText = itemView.findViewById(R.id.edit_text_start_time);
-+            EditText endTimeEditText = itemView.findViewById(R.id.edit_text_end_time);
-+            placeText.setText(selectedItem.getTitle());
-+            containerLayout.addView(itemView);
-+        }
-+
-+
-+        addBtn.setOnClickListener(v -> {
-+            // Iterate through the container layout and retrieve the input data for each item
-+            for (int i = 0; i < containerLayout.getChildCount(); i++) {
-+                View itemView = containerLayout.getChildAt(i);
-+                EditText dateEditText = itemView.findViewById(R.id.edit_text_date);
-+                EditText startTimeEditText = itemView.findViewById(R.id.edit_text_start_time);
-+                EditText endTimeEditText = itemView.findViewById(R.id.edit_text_end_time);
-+
-+                String date = dateEditText.getText().toString();
-+                String startTime = startTimeEditText.getText().toString();
-+                String endTime = endTimeEditText.getText().toString();
-+
-+                // Handle the input data here, for example, save it or perform any necessary actions
-+                // with the selected items and the entered details
-+            }
-+
-+            dialog.dismiss();
-+        });
-+
-+    }
-+
-+
-     private void init() {
-         iterRV = view.findViewById(R.id.recycler_view);
-         addIter = view.findViewById(R.id.add_iter_btn);
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_09_05_2023_12_01__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_09_05_2023_12_01__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_09_05_2023_12_01__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_09_05_2023_12_01__Changes_.xml	(revision 471ae36e6035a672158229fec800b24d6a495ad6)
-+++ /dev/null	(revision 471ae36e6035a672158229fec800b24d6a495ad6)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_09_05_2023_12_01_[Changes]" date="1683608512587" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_09_05_2023_12_01_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 09/05/2023 12:01 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_09_05_2023_12_01_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_09_05_2023_12_01_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_09_05_2023_12_01_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_09_05_2023_12_01_[Changes]/shelved.patch	(revision 471ae36e6035a672158229fec800b24d6a495ad6)
-+++ /dev/null	(revision 471ae36e6035a672158229fec800b24d6a495ad6)
-@@ -1,147 +0,0 @@
--Index: app/src/main/res/layout/dialog_change_loc.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <data>\r\n\r\n    </data>\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:cardElevation=\"4dp\"\r\n        app:cardCornerRadius=\"16dp\"\r\n        android:layout_marginHorizontal=\"5dp\"\r\n        android:layout_marginVertical=\"5dp\">\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/dialog_container\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"@color/palette_4\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginVertical=\"10dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textStyle=\"bold\"\r\n                android:fontFamily=\"@font/poppins_semibold\"\r\n                android:text=\"Choose Location\"\r\n                android:textSize=\"24dp\"\r\n                android:textColor=\"@color/palette_1\" />\r\n\r\n            <fragment\r\n                android:id=\"@+id/autocomplete_fragment\"\r\n                android:name=\"com.google.android.libraries.places.widget.AutocompleteSupportFragment\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginBottom=\"10dp\"\r\n                android:hint=\"Enter a location\" />\r\n\r\n            <fragment\r\n                android:id=\"@+id/user_map\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"200dp\"\r\n                android:layout_marginBottom=\"20dp\"\r\n                android:name=\"com.google.android.gms.maps.SupportMapFragment\"></fragment>\r\n\r\n            <TextView\r\n                android:id=\"@+id/locTv\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Your Location\"\r\n                android:paddingHorizontal=\"15dp\"\r\n                android:paddingVertical=\"5dp\"\r\n                android:fontFamily=\"@font/poppins_regular\"\r\n                android:textColor=\"@color/palette_2\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/use_cur_loc\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:includeFontPadding=\"false\"\r\n                android:drawablePadding=\"10dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:drawableTint=\"@color/palette_1\"\r\n                android:drawableLeft=\"@drawable/my_loc\"\r\n                android:text=\"Use current location\"\r\n                android:background=\"@color/ic_launcher_background\"\r\n                android:gravity=\"center_vertical\"\r\n                android:paddingHorizontal=\"15dp\"\r\n                android:paddingVertical=\"5dp\"\r\n                android:fontFamily=\"@font/poppins_regular\"\r\n                android:textColor=\"@color/palette_2\" />\r\n            <Button\r\n                android:id=\"@+id/set_loc_btn\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"@color/palette_4\"\r\n                android:text=\"Set Location\"/>\r\n        </LinearLayout>\r\n    </androidx.cardview.widget.CardView>\r\n</layout>\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/res/layout/dialog_change_loc.xml b/app/src/main/res/layout/dialog_change_loc.xml
----- a/app/src/main/res/layout/dialog_change_loc.xml	(revision 57c4058aeeed9cdb10889cde80a1e30269330a08)
--+++ b/app/src/main/res/layout/dialog_change_loc.xml	(date 1683536664088)
--@@ -11,8 +11,7 @@
--         android:layout_height="wrap_content"
--         app:cardElevation="4dp"
--         app:cardCornerRadius="16dp"
---        android:layout_marginHorizontal="5dp"
---        android:layout_marginVertical="5dp">
--+        >
-- 
--         <LinearLayout
--             android:id="@+id/dialog_container"
--@@ -32,13 +31,20 @@
--                 android:textSize="24dp"
--                 android:textColor="@color/palette_1" />
-- 
---            <fragment
---                android:id="@+id/autocomplete_fragment"
---                android:name="com.google.android.libraries.places.widget.AutocompleteSupportFragment"
---                android:layout_width="match_parent"
---                android:layout_height="wrap_content"
---                android:layout_marginBottom="10dp"
---                android:hint="Enter a location" />
--+            <LinearLayout
--+                android:layout_width="match_parent"
--+                android:layout_height="wrap_content"
--+                android:background="@color/palette_2">
--+
--+                <fragment
--+                    android:id="@+id/autocomplete_fragment"
--+                    android:name="com.google.android.libraries.places.widget.AutocompleteSupportFragment"
--+                    android:layout_width="match_parent"
--+                    android:layout_height="wrap_content"
--+                    android:layout_marginBottom="10dp"/>
--+
--+            </LinearLayout>
--+
-- 
--             <fragment
--                 android:id="@+id/user_map"
--Index: app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.binus.pekalongancityguide.Layout;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.CheckBox;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.binus.pekalongancityguide.Adapter.DestinationAdapter;\r\nimport com.binus.pekalongancityguide.ItemTemplate.Destination;\r\nimport com.binus.pekalongancityguide.R;\r\nimport com.binus.pekalongancityguide.databinding.DialogChangeLocBinding;\r\nimport com.binus.pekalongancityguide.databinding.DialogSortDestiBinding;\r\nimport com.binus.pekalongancityguide.databinding.FragmentShowDestinationBinding;\r\nimport com.google.android.gms.common.api.Status;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MapStyleOptions;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.libraries.places.api.Places;\r\nimport com.google.android.libraries.places.api.model.Place;\r\nimport com.google.android.libraries.places.api.net.PlacesClient;\r\nimport com.google.android.libraries.places.widget.AutocompleteSupportFragment;\r\nimport com.google.android.libraries.places.widget.listener.PlaceSelectionListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\nimport static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;\r\n\r\npublic class ShowDestinationFragment extends Fragment {\r\n    private final FirebaseDatabase database = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\");\r\n    private static final int PERMISSION_REQUEST_LOCATION = 500;\r\n    private String categoryId;\r\n    private String category;\r\n    private ArrayList<Destination> destinationArrayList;\r\n    private DestinationAdapter destinationAdapter;\r\n    private static final String TAG = \"DESTI_USER_TAG\";\r\n    private FragmentShowDestinationBinding binding;\r\n    private FusedLocationProviderClient fusedLocationClient;\r\n    private LocationManager locationManager;\r\n    private LocationListener locationListener;\r\n    private Geocoder geocoder;\r\n    private AutocompleteSupportFragment autocompleteFragment;\r\n    private SupportMapFragment fragment;\r\n    private LatLng coordinate;\r\n    private String addressString;\r\n    private double currentLat, currentLng;\r\n    private float distance;\r\n    private boolean isChangeLocDialogShowing = false;\r\n    private static SharedPreferences prefs;\r\n\r\n    public ShowDestinationFragment() {\r\n    }\r\n\r\n    public static ShowDestinationFragment newInstance(String categoryId, String category, String uid) {\r\n        ShowDestinationFragment fragment = new ShowDestinationFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(\"categoryId\", categoryId);\r\n        args.putString(\"category\", category);\r\n        args.putString(\"uid\", uid);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState){\r\n        super.onCreate(savedInstanceState);\r\n        geocoder = new Geocoder(getContext(), Locale.getDefault());\r\n        if(getArguments()!=null){\r\n            categoryId = getArguments().getString(\"categoryId\");\r\n            category = getArguments().getString(\"category\");\r\n        }\r\n    }\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        prefs = getActivity().getSharedPreferences(\"coordinate\", Context.MODE_PRIVATE);\r\n        String lastLatitude = prefs.getString(\"lastLatitude\", \"0\");\r\n        String lastLongitude = prefs.getString(\"lastLongitude\", \"0\");\r\n        if (!lastLatitude.equals(\"0\") && !lastLongitude.equals(\"0\")) {\r\n            double latitude = Double.parseDouble(lastLatitude);\r\n            double longitude = Double.parseDouble(lastLongitude);\r\n            coordinate = new LatLng(latitude, longitude);\r\n        }\r\n        Log.d(TAG, \"ON START COORDINATES: \" + coordinate);\r\n        binding = FragmentShowDestinationBinding.inflate(LayoutInflater.from(getContext()), container, false);\r\n        if (category.equals(\"All\")) {\r\n            loadDestinations();\r\n        } else {\r\n            loadCategoriedDestination();\r\n        }\r\n        locationManager = (LocationManager) getContext().getSystemService(Context.LOCATION_SERVICE);\r\n        locationListener = new LocationListener() {\r\n            @Override\r\n            public void onLocationChanged(Location location) {\r\n                Log.d(\"Location\", \"Latitude: \" + location.getLatitude() + \", Longitude: \" + location.getLongitude());\r\n            }\r\n\r\n            @Override\r\n            public void onStatusChanged(String provider, int status, Bundle extras) {\r\n            }\r\n\r\n            @Override\r\n            public void onProviderEnabled(String provider) {\r\n            }\r\n\r\n            @Override\r\n            public void onProviderDisabled(String provider) {\r\n            }\r\n        };\r\n\r\n        if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, PERMISSION_REQUEST_LOCATION);\r\n        } else {\r\n            startLocationUpdates();\r\n        }\r\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(getContext());\r\n        binding.searchDesti.addTextChangedListener(new TextWatcher(){\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                try {\r\n                    destinationAdapter.getFilter().filter(s);\r\n                }catch (Exception e){\r\n                    Log.d(TAG,\"onTextChanged :\"+e.getMessage());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n        binding.sortButton.setOnClickListener(v ->{\r\n            showSortDialog();\r\n        });\r\n        binding.locLayout.setOnClickListener(v -> {\r\n            if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\r\n                    ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n                ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\r\n            } else {\r\n                showChangeLocDialog();\r\n            }\r\n        });\r\n\r\n        return binding.getRoot();\r\n    }\r\n\r\n    private void showChangeLocDialog() {\r\n        if (isChangeLocDialogShowing) {\r\n            return;\r\n        }\r\n        isChangeLocDialogShowing = true;\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n        DialogChangeLocBinding locBinding = DialogChangeLocBinding.inflate(getLayoutInflater());\r\n        builder.setView(locBinding.getRoot());\r\n        AlertDialog dialog = builder.create();\r\n        dialog.setOnDismissListener(dialog1 -> {\r\n            getChildFragmentManager().beginTransaction().remove(fragment).commit();\r\n            getChildFragmentManager().beginTransaction().remove(autocompleteFragment).commit();\r\n            isChangeLocDialogShowing = false;\r\n        });\r\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\r\n        dialog.show();\r\n        if (!Places.isInitialized()) {\r\n            Places.initialize(getActivity().getApplicationContext(), MAPS_API_KEY);\r\n        }\r\n        List<Address> addresses = null;\r\n        try {\r\n            addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        if (addresses != null && addresses.size() > 0) {\r\n            Address address = addresses.get(0);\r\n            StringBuilder sb = new StringBuilder();\r\n            for (int i = 0; i <= address.getMaxAddressLineIndex(); i++) {\r\n                sb.append(address.getAddressLine(i)).append(\", \");\r\n            }\r\n            addressString = sb.toString();\r\n            locBinding.locTv.setText(addressString);\r\n        } else {\r\n            locBinding.locTv.setText(\"Address not found\");\r\n        }\r\n        fragment = (SupportMapFragment) getChildFragmentManager()\r\n                .findFragmentById(R.id.user_map);\r\n        fragment.getMapAsync(googleMap -> {\r\n            coordinate = new LatLng(currentLat, currentLng);\r\n            MarkerOptions marker = new MarkerOptions();\r\n            marker.position(coordinate);\r\n            marker.title(\"Current Location\");\r\n            googleMap.addMarker(marker);\r\n            CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\r\n            googleMap.moveCamera(cameraUpdate);\r\n            googleMap.setMapStyle(MapStyleOptions.loadRawResourceStyle(getContext(), R.raw.map_style));\r\n        });\r\n        PlacesClient placesClient = Places.createClient(getContext());\r\n        autocompleteFragment = (AutocompleteSupportFragment) getChildFragmentManager().findFragmentById(R.id.autocomplete_fragment);\r\n        autocompleteFragment.setPlaceFields(Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.ADDRESS, Place.Field.LAT_LNG));\r\n        autocompleteFragment.setOnPlaceSelectedListener(new PlaceSelectionListener() {\r\n            @Override\r\n            public void onPlaceSelected(@NonNull Place place) {\r\n                coordinate = place.getLatLng();\r\n                fragment = (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.user_map);\r\n                fragment.getMapAsync(googleMap -> {\r\n                    googleMap.clear();\r\n                    MarkerOptions marker = new MarkerOptions();\r\n                    marker.position(coordinate);\r\n                    marker.title(place.getName());\r\n                    googleMap.addMarker(marker);\r\n                    CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\r\n                    googleMap.moveCamera(cameraUpdate);\r\n                });\r\n                locBinding.locTv.setText(place.getAddress());\r\n                addressString = place.getAddress();\r\n            }\r\n\r\n            @Override\r\n            public void onError(@NonNull Status status) {\r\n                Log.e(TAG, \"An error occurred: \" + status);\r\n            }\r\n        });\r\n        locBinding.useCurLoc.setOnClickListener(v -> {\r\n            if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\r\n                    ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n                ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\r\n            } else {\r\n                fusedLocationClient.getLastLocation().addOnSuccessListener(location -> {\r\n                    if (location != null) {\r\n                        currentLat = location.getLatitude();\r\n                        currentLng = location.getLongitude();\r\n                        coordinate = new LatLng(currentLat, currentLng);\r\n\r\n                        new AsyncTask<Void, Void, String>() {\r\n                            @Override\r\n                            protected String doInBackground(Void... voids) {\r\n                                try {\r\n                                    List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\r\n                                    if (addresses.size() > 0) {\r\n                                        return addresses.get(0).getAddressLine(0);\r\n                                    }\r\n                                } catch (IOException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                                return null;\r\n                            }\r\n\r\n                            @Override\r\n                            protected void onPostExecute(String address) {\r\n                                if (address != null) {\r\n                                    Log.d(\"ADDRESS IN DIALOG\", address);\r\n                                    addressString = address;\r\n                                    locBinding.locTv.setText(addressString);\r\n                                    autocompleteFragment.setText(addressString);\r\n                                    fragment.getMapAsync(googleMap -> {\r\n                                        coordinate = new LatLng(currentLat, currentLng);\r\n                                        MarkerOptions marker = new MarkerOptions();\r\n                                        marker.position(coordinate);\r\n                                        marker.title(\"Current Location\");\r\n                                        googleMap.addMarker(marker);\r\n                                        CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(coordinate, 15);\r\n                                        googleMap.moveCamera(cameraUpdate);\r\n                                        googleMap.setMapStyle(MapStyleOptions.loadRawResourceStyle(getContext(), R.raw.map_style));\r\n                                    });\r\n                                }\r\n                            }\r\n                        }.execute();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        locBinding.setLocBtn.setOnClickListener(v -> {\r\n            binding.changeLoc.setText(addressString);\r\n            dialog.dismiss();\r\n            updateDistances();\r\n            if (coordinate != null) {\r\n                SharedPreferences.Editor editor = prefs.edit();\r\n                editor.putString(\"lastLatitude\", String.valueOf(coordinate.latitude));\r\n                editor.putString(\"lastLongitude\", String.valueOf(coordinate.longitude));\r\n                editor.apply();\r\n            }\r\n            Log.d(TAG, \"COORDINATES: \" + coordinate);\r\n        });\r\n    }\r\n\r\n    public void showSortDialog(){\r\n        DialogSortDestiBinding binding1 = DialogSortDestiBinding.inflate(LayoutInflater.from(getContext()));\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n        CheckBox ratingCheck = binding1.ratingSort;\r\n        CheckBox distanceCheck = binding1.distanceSort;\r\n        builder.setView(binding1.getRoot());\r\n        builder.setPositiveButton(R.string.sort_txt, (dialog, which) -> {\r\n            int start = 0;\r\n            if (ratingCheck.isChecked() && distanceCheck.isChecked()) {\r\n                Collections.sort(destinationArrayList, (destination1, destination2) -> {\r\n                    Double rating1 = Double.parseDouble(destination1.getRating());\r\n                    Double rating2 = Double.parseDouble(destination2.getRating());\r\n                    Float distance1 = destination1.getDistance();\r\n                    Float distance2 = destination2.getDistance();\r\n                    int distanceCompare = distance1.compareTo(distance2);\r\n                    if (distanceCompare != 0) {\r\n                        return distanceCompare;\r\n                    }\r\n                    return Double.compare(rating1, rating2);\r\n                });\r\n            } else if (ratingCheck.isChecked()) {\r\n                Collections.sort(destinationArrayList, (destination1, destination2) -> {\r\n                    Double rating1 = Double.parseDouble(destination1.getRating());\r\n                    Double rating2 = Double.parseDouble(destination2.getRating());\r\n                    return Double.compare(rating2, rating1);\r\n                });\r\n            } else if (distanceCheck.isChecked()) {\r\n                Collections.sort(destinationArrayList, (destination1, destination2) -> {\r\n                    Float distance1 = destination1.getDistance();\r\n                    Float distance2 = destination2.getDistance();\r\n                    return distance1.compareTo(distance2);\r\n                });\r\n            }\r\n            String searchText = binding.searchDesti.getText().toString().trim();\r\n            destinationAdapter.getFilter().filter(searchText);\r\n            int itemCount = destinationArrayList.size() - start;\r\n            destinationAdapter.notifyItemRangeChanged(start, itemCount);\r\n        });\r\n\r\n        builder.setNegativeButton(R.string.cancel_txt, (dialog, which) -> {\r\n            dialog.dismiss();\r\n        });\r\n\r\n        AlertDialog dialog = builder.create();\r\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\r\n        dialog.show();\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n        locationManager.removeUpdates(locationListener);\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        if (requestCode == PERMISSION_REQUEST_LOCATION) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                startLocationUpdates();\r\n            } else {\r\n                Toast.makeText(getContext(), \"Location permission denied\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void loadDestinations() {\r\n        destinationArrayList = new ArrayList<>();\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\r\n        reference.keepSynced(true);\r\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                destinationArrayList.clear();\r\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                    Destination destination = dataSnapshot.getValue(Destination.class);\r\n                    destinationArrayList.add(destination);\r\n                }\r\n                updateDistances();\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                Log.e(TAG, \"Error: \" + error.getMessage());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void loadCategoriedDestination(){\r\n        destinationArrayList = new ArrayList<>();\r\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\r\n        reference.keepSynced(true);\r\n        reference.orderByChild(\"categoryId\").equalTo(categoryId)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        destinationArrayList.clear();\r\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                            Destination destination = dataSnapshot.getValue(Destination.class);\r\n                            destinationArrayList.add(destination);\r\n                        }\r\n                        updateDistances();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void updateDistances() {\r\n        for (Destination destination : destinationArrayList) {\r\n            getDestinationDistance(destination);\r\n        }\r\n        if (destinationAdapter == null) {\r\n            destinationAdapter = new DestinationAdapter(getContext(), destinationArrayList);\r\n            binding.destiRv.setAdapter(destinationAdapter);\r\n        } else {\r\n            destinationAdapter.notifyDataSetChanged();\r\n        }\r\n    }\r\n    private void getDestinationDistance(Destination destination) {\r\n        database.getReference(\"Destination\").child(destination.getId()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                double placeLat = Double.parseDouble(snapshot.child(\"latitude\").getValue().toString());\r\n                double placeLng = Double.parseDouble(snapshot.child(\"longitude\").getValue().toString());\r\n                if (coordinate != null) {\r\n                    currentLat = coordinate.latitude;\r\n                    currentLng = coordinate.longitude;\r\n                    distance = calculateDistance(currentLat, currentLng, placeLat, placeLng);\r\n                    destination.setDistance(distance);\r\n                    destinationAdapter.notifyDataSetChanged();\r\n\r\n                    new AsyncTask<Void, Void, String>() {\r\n                        @Override\r\n                        protected String doInBackground(Void... voids) {\r\n                            try {\r\n                                List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\r\n                                if (addresses.size() > 0) {\r\n                                    return addresses.get(0).getAddressLine(0);\r\n                                }\r\n                            } catch (IOException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                            return null;\r\n                        }\r\n\r\n                        @Override\r\n                        protected void onPostExecute(String address) {\r\n                            if (address != null) {\r\n                                Log.d(\"ADDRESS\", address);\r\n                                binding.changeLoc.setText(address);\r\n                            }\r\n                        }\r\n                    }.execute();\r\n                } else {\r\n                    if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\r\n                            ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n                        ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\r\n                    } else {\r\n                        fusedLocationClient.getLastLocation().addOnSuccessListener(location -> {\r\n                            if (location != null) {\r\n                                currentLat = location.getLatitude();\r\n                                currentLng = location.getLongitude();\r\n                                distance = calculateDistance(currentLat, currentLng, placeLat, placeLng);\r\n                                destination.setDistance(distance);\r\n                                sortDestination(destinationArrayList);\r\n                                destinationAdapter.notifyDataSetChanged();\r\n\r\n                                new AsyncTask<Void, Void, String>() {\r\n                                    @Override\r\n                                    protected String doInBackground(Void... voids) {\r\n                                        try {\r\n                                            List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\r\n                                            if (addresses.size() > 0) {\r\n                                                return addresses.get(0).getAddressLine(0);\r\n                                            }\r\n                                        } catch (IOException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                        return null;\r\n                                    }\r\n\r\n                                    @Override\r\n                                    protected void onPostExecute(String address) {\r\n                                        if (address != null) {\r\n                                            Log.d(\"ADDRESS\", address);\r\n                                            binding.changeLoc.setText(address);\r\n                                        }\r\n                                    }\r\n                                }.execute();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                Log.d(TAG, \"distance: \" + destination.getDistance());\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    };\r\n    private float calculateDistance(double lat1, double lon1, double lat2, double lon2) {\r\n        float[] results = new float[1];\r\n        Location location1 = new Location(\"\");\r\n        location1.setLatitude(lat1);\r\n        location1.setLongitude(lon1);\r\n        Location location2 = new Location(\"\");\r\n        location2.setLatitude(lat2);\r\n        location2.setLongitude(lon2);\r\n        Location.distanceBetween(location1.getLatitude(), location1.getLongitude(),\r\n                location2.getLatitude(), location2.getLongitude(), results);\r\n        return results[0] / 1000;\r\n    }\r\n\r\n    private void sortDestination(ArrayList<Destination> destinationArrayList){\r\n        Collections.sort(destinationArrayList, (destination1, destination2) -> {\r\n            String title1 = destination1.getTitle().toLowerCase();\r\n            String title2 = destination2.getTitle().toLowerCase();\r\n            return title1.compareTo(title2);\r\n        });\r\n    }\r\n\r\n    @SuppressLint(\"MissingPermission\")\r\n    private void startLocationUpdates() {\r\n        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n            builder.setTitle(R.string.gpsnotEnabled);\r\n            builder.setMessage(R.string.enable_gps_confirm);\r\n            builder.setPositiveButton(R.string.yes_txt, (dialog, which) -> {\r\n                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\r\n                startActivity(intent);\r\n            });\r\n            builder.setNegativeButton(R.string.no_txt, null);\r\n            builder.show();\r\n        } else {\r\n            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 0, locationListener);\r\n        }\r\n    }\r\n\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java
----- a/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java	(revision 57c4058aeeed9cdb10889cde80a1e30269330a08)
--+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/ShowDestinationFragment.java	(date 1683538706679)
--@@ -119,7 +119,7 @@
--             double longitude = Double.parseDouble(lastLongitude);
--             coordinate = new LatLng(latitude, longitude);
--         }
---        Log.d(TAG, "ON START COORDINATES: " + coordinate);
--+//        Log.d(TAG, "ON START COORDINATES: " + coordinate);
--         binding = FragmentShowDestinationBinding.inflate(LayoutInflater.from(getContext()), container, false);
--         if (category.equals("All")) {
--             loadDestinations();
--@@ -187,17 +187,17 @@
--     }
-- 
--     private void showChangeLocDialog() {
---        if (isChangeLocDialogShowing) {
---            return;
---        }
--+        if (isChangeLocDialogShowing) return;
--         isChangeLocDialogShowing = true;
--         AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
--         DialogChangeLocBinding locBinding = DialogChangeLocBinding.inflate(getLayoutInflater());
--         builder.setView(locBinding.getRoot());
--         AlertDialog dialog = builder.create();
--         dialog.setOnDismissListener(dialog1 -> {
---            getChildFragmentManager().beginTransaction().remove(fragment).commit();
---            getChildFragmentManager().beginTransaction().remove(autocompleteFragment).commit();
--+            requireActivity().runOnUiThread(() -> {
--+                getChildFragmentManager().beginTransaction().remove(fragment).commit();
--+                getChildFragmentManager().beginTransaction().remove(autocompleteFragment).commit();
--+            });
--             isChangeLocDialogShowing = false;
--         });
--         dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);
--@@ -205,23 +205,32 @@
--         if (!Places.isInitialized()) {
--             Places.initialize(getActivity().getApplicationContext(), MAPS_API_KEY);
--         }
---        List<Address> addresses = null;
---        try {
---            addresses = geocoder.getFromLocation(currentLat, currentLng, 1);
---        } catch (IOException e) {
---            e.printStackTrace();
---        }
---        if (addresses != null && addresses.size() > 0) {
---            Address address = addresses.get(0);
---            StringBuilder sb = new StringBuilder();
---            for (int i = 0; i <= address.getMaxAddressLineIndex(); i++) {
---                sb.append(address.getAddressLine(i)).append(", ");
--+        new AsyncTask<Void, Void, String>() {
--+            @Override
--+            protected String doInBackground(Void... voids) {
--+                try {
--+                    List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);
--+                    if (addresses.size() > 0) {
--+                        return addresses.get(0).getAddressLine(0);
--+                    }
--+                } catch (IOException e) {
--+                    e.printStackTrace();
--+                }
--+                return null;
--             }
---            addressString = sb.toString();
---            locBinding.locTv.setText(addressString);
---        } else {
---            locBinding.locTv.setText("Address not found");
---        }
--+
--+            @Override
--+            protected void onPostExecute(String address) {
--+                // update the location text view in the UI thread
--+                if (address != null) {
--+                    addressString = address;
--+                    locBinding.locTv.setText(addressString);
--+                    autocompleteFragment.setText(addressString);
--+                } else {
--+                    locBinding.locTv.setText("Address not found");
--+                }
--+            }
--+        }.execute();
--         fragment = (SupportMapFragment) getChildFragmentManager()
--                 .findFragmentById(R.id.user_map);
--         fragment.getMapAsync(googleMap -> {
--@@ -237,6 +246,7 @@
--         PlacesClient placesClient = Places.createClient(getContext());
--         autocompleteFragment = (AutocompleteSupportFragment) getChildFragmentManager().findFragmentById(R.id.autocomplete_fragment);
--         autocompleteFragment.setPlaceFields(Arrays.asList(Place.Field.ID, Place.Field.NAME, Place.Field.ADDRESS, Place.Field.LAT_LNG));
--+        autocompleteFragment.setCountries("ID");
--         autocompleteFragment.setOnPlaceSelectedListener(new PlaceSelectionListener() {
--             @Override
--             public void onPlaceSelected(@NonNull Place place) {
-Index: app/src/main/res/layout/dialog_input_details.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/dialog_input_details.xml b/app/src/main/res/layout/dialog_input_details.xml
-new file mode 100644
---- /dev/null	(date 1684308558616)
-+++ b/app/src/main/res/layout/dialog_input_details.xml	(date 1684308558616)
-@@ -0,0 +1,47 @@
-+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    app:cardElevation="4dp"
-+    app:cardCornerRadius="16dp"
-+    android:layout_marginHorizontal="5dp"
-+    android:layout_marginVertical="5dp">
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent"
-+        android:background="@color/palette_4"
-+        android:orientation="vertical"
-+        android:padding="16dp">
-+        <TextView
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:textSize="20dp"
-+            android:textColor="@color/palette_2"
-+            android:text="Add to Itinerary"
-+            android:textStyle="bold"
-+            android:layout_marginBottom="15dp"
-+            android:fontFamily="@font/poppins_semibold"/>
-+        <ScrollView
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content">
-+
-+            <LinearLayout
-+                android:id="@+id/container_layout"
-+                android:layout_width="match_parent"
-+                android:layout_height="wrap_content"
-+                android:orientation="vertical">
-+
-+                <!-- The dynamically added item layouts will go here -->
-+
-+            </LinearLayout>
-+
-+        </ScrollView>
-+<Button
-+    android:id="@+id/add_iter_button"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    android:text="Add"
-+    android:textColor="@color/palette_4"/>
-+    </LinearLayout>
-+</androidx.cardview.widget.CardView>
-+
-Index: app/src/main/res/layout/item_input_details.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/item_input_details.xml b/app/src/main/res/layout/item_input_details.xml
-new file mode 100644
---- /dev/null	(date 1684308262169)
-+++ b/app/src/main/res/layout/item_input_details.xml	(date 1684308262169)
-@@ -0,0 +1,41 @@
-+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    app:cardElevation="4dp"
-+    app:cardCornerRadius="16dp"
-+    android:layout_marginHorizontal="5dp"
-+    android:layout_marginVertical="5dp">
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:background="@color/palette_4"
-+        android:orientation="vertical">
-+        <TextView
-+            android:id="@+id/place_name"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:text="Destination Name"
-+            android:textSize="18sp"
-+            android:textStyle="bold"
-+            android:padding="8dp"
-+            android:background="@color/ic_launcher_background"
-+            android:textColor="@color/palette_2" />
-+        <EditText
-+            android:id="@+id/edit_text_date"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:hint="Date" />
-+        <EditText
-+            android:id="@+id/edit_text_start_time"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:hint="Start Time" />
-+        <EditText
-+            android:id="@+id/edit_text_end_time"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:hint="End Time" />
-+    </LinearLayout>
-+</androidx.cardview.widget.CardView>
-+
-Index: app/src/main/res/layout/fragment_itinerary_pager.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <data>\n\n    </data>\n\n    <FrameLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@drawable/background_batik\"\n        android:backgroundTint=\"@color/palette_4\"\n        android:backgroundTintMode=\"screen\"\n        tools:context=\".Layout.ItineraryPager\">\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n            <com.google.android.material.tabs.TabLayout\n                android:id=\"@+id/iter_tab_layout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:background=\"#D5BB91\"\n                app:tabBackground=\"@drawable/tab_selector\"\n                app:tabIndicatorHeight=\"0dp\"\n                app:tabMode=\"scrollable\"\n                app:tabUnboundedRipple=\"false\"\n                app:tabTextColor=\"@color/palette_2\"\n                app:tabSelectedTextColor=\"@color/palette_4\"\n                app:tabIndicatorFullWidth=\"false\" />\n            <androidx.viewpager.widget.ViewPager\n                android:id=\"@+id/iter_viewPager\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_below=\"@id/iter_tab_layout\" />\n        </RelativeLayout>\n\n    </FrameLayout>\n</layout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/fragment_itinerary_pager.xml b/app/src/main/res/layout/fragment_itinerary_pager.xml
---- a/app/src/main/res/layout/fragment_itinerary_pager.xml	(revision 471ae36e6035a672158229fec800b24d6a495ad6)
-+++ b/app/src/main/res/layout/fragment_itinerary_pager.xml	(date 1684300875580)
-@@ -36,6 +36,5 @@
-                 android:layout_height="wrap_content"
-                 android:layout_below="@id/iter_tab_layout" />
-         </RelativeLayout>
--
-     </FrameLayout>
- </layout>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_5_17_23__2_46_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23__2_46_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23__2_46_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23__2_46_PM__Changes_.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ /dev/null	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_5_17_23,_2_46_PM_[Changes]" date="1684309612360" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_17_23,_2_46_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5/17/23, 2:46 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/res/layout/dialog_choose_date.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <data>\n\n    </data>\n\n    <androidx.cardview.widget.CardView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:cardElevation=\"4dp\"\n        app:cardCornerRadius=\"16dp\"\n        android:layout_marginHorizontal=\"5dp\"\n        android:layout_marginVertical=\"5dp\">\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"vertical\"\n            android:background=\"@color/palette_4\"\n            android:padding=\"20dp\">\n\n            <TextView\n                android:id=\"@+id/dialog_title\"\n                android:layout_width=\"wrap_content\"\n                android:layout_marginLeft=\"5dp\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"@string/add_to_itinerary\"\n                android:textStyle=\"bold\"\n                android:fontFamily=\"@font/poppins_semibold\"\n                android:layout_marginBottom=\"15dp\"\n                android:textSize=\"20dp\"\n                android:textColor=\"@color/palette_1\" />\n\n            <EditText\n                android:id=\"@+id/start_date_et\"\n                android:layout_below=\"@id/dialog_title\"\n                android:layout_width=\"match_parent\"\n                android:textColorHint=\"@color/palette_2\"\n                android:layout_height=\"wrap_content\"\n                android:textColor=\"@color/palette_1\"\n                android:hint=\"Select start date\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:focusable=\"false\"\n                android:layout_toStartOf=\"@id/start_picker_btn\"\n                android:inputType=\"none\"\n                android:clickable=\"true\" />\n\n            <ImageButton\n                android:id=\"@+id/start_picker_btn\"\n                android:layout_below=\"@id/dialog_title\"\n                android:layout_width=\"48dp\"\n                android:layout_height=\"48dp\"\n                android:layout_alignParentEnd=\"true\"\n                android:src=\"@drawable/date_icon\"\n                android:background=\"#0000\"\n                app:tint=\"@color/palette_1\" />\n            <EditText\n                android:id=\"@+id/end_date_et\"\n                android:layout_below=\"@id/start_date_et\"\n                android:layout_width=\"match_parent\"\n                android:textColorHint=\"@color/palette_2\"\n                android:layout_height=\"wrap_content\"\n                android:textColor=\"@color/palette_1\"\n                android:hint=\"Select end date\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:focusable=\"false\"\n                android:layout_toStartOf=\"@id/end_picker_btn\"\n                android:inputType=\"none\"\n                android:clickable=\"true\" />\n\n            <ImageButton\n                android:id=\"@+id/end_picker_btn\"\n                android:layout_below=\"@id/start_date_et\"\n                android:layout_width=\"48dp\"\n                android:layout_height=\"48dp\"\n                android:layout_alignParentEnd=\"true\"\n                android:src=\"@drawable/date_icon\"\n                android:background=\"#0000\"\n                app:tint=\"@color/palette_1\" />\n            <Button\n                android:id=\"@+id/add_date_btn\"\n                android:layout_marginTop=\"30dp\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:fontFamily=\"@font/poppins_semibold\"\n                android:layout_below=\"@id/end_date_et\"\n                android:textColor=\"@color/palette_4\"\n                android:text=\"add date\" />\n        </RelativeLayout>\n    </androidx.cardview.widget.CardView>\n</layout>\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_choose_date.xml b/app/src/main/res/layout/dialog_choose_date.xml
--- a/app/src/main/res/layout/dialog_choose_date.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/res/layout/dialog_choose_date.xml	(date 1684918883367)
@@ -40,7 +40,7 @@
                 android:textColorHint="@color/palette_2"
                 android:layout_height="wrap_content"
                 android:textColor="@color/palette_1"
-                android:hint="Select start date"
+                android:hint="@string/select_start_date"
                 android:fontFamily="@font/poppins_regular"
                 android:focusable="false"
                 android:layout_toStartOf="@id/start_picker_btn"
@@ -63,7 +63,7 @@
                 android:textColorHint="@color/palette_2"
                 android:layout_height="wrap_content"
                 android:textColor="@color/palette_1"
-                android:hint="Select end date"
+                android:hint="@string/select_end_date"
                 android:fontFamily="@font/poppins_regular"
                 android:focusable="false"
                 android:layout_toStartOf="@id/end_picker_btn"
@@ -87,7 +87,7 @@
                 android:fontFamily="@font/poppins_semibold"
                 android:layout_below="@id/end_date_et"
                 android:textColor="@color/palette_4"
-                android:text="add date" />
+                android:text="@string/add_date" />
         </RelativeLayout>
     </androidx.cardview.widget.CardView>
 </layout>
Index: app/src/main/res/values-night/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <string name=\"show_routes\">Show Routes</string>\n    <string name=\"search_bookmark\">Search Bookmark</string>\n    <string name=\"add_to_itinerary\">Add to Itinerary</string>\n    <string name=\"select_date_iter\">Select date</string>\n    <string name=\"select_start_time_iter\">Select start time</string>\n    <string name=\"select_end_time_iter\">Select end time</string>\n    <string name=\"add_to_itinerary_btn\">Add to Itinerary</string>\n    <string name=\"search_destination_admin\">Search Destination</string>\n    <string name=\"destination_admin\">Destination</string>\n    <string name=\"category_admin\">Category</string>\n    <string name=\"detail_news\">Detail News</string>\n    <string name=\"itinerary_list_header\">Itinerary List</string>\n    <string name=\"enter_new_username\">Enter new username</string>\n    <string name=\"edit_destination_header\">Edit Destination</string>\n    <string name=\"edit_destination_name\">Destination Name</string>\n    <string name=\"edit_destination_description\">Destination Description</string>\n    <string name=\"edit_pick_category\">Pick Category</string>\n    <string name=\"update_destination_btn\">Update Destination</string>\n    <string name=\"opening_hours_detail\">Opening Hours</string>\n    <string name=\"place_reviews_detail\">Place Reviews</string>\n    <string name=\"logout_confirm\">Are you sure you want to log out?</string>\n    <string name=\"yes_txt\">Yes</string>\n    <string name=\"no_txt\">No</string>\n    <string name=\"gpsnotEnabled\">GPS not enabled</string>\n    <string name=\"enable_gps_confirm\">Would you like to enable GPS?</string>\n    <string name=\"enter_name_edit\">Enter new name</string>\n    <string name=\"enter_cur_pass\">Enter current password!</string>\n    <string name=\"pass8chara\">Password must be more than 8 characters!</string>\n    <string name=\"pass1num\">Password must contain at least one number!</string>\n    <string name=\"pass1Symbol\">Password must contain at least one symbol!</string>\n    <string name=\"enternewPass\">Enter new password!</string>\n    <string name=\"passcantSame\">Your new password cannot be the same as your current password!</string>\n    <string name=\"cfmpassEnter\">Enter confirm password!</string>\n    <string name=\"passnotMatch\">Password does not match!</string>\n    <string name=\"pass_updated_txt\">Password updated successfully</string>\n    <string name=\"failed_update_pass\">Failed to update password</string>\n    <string name=\"failed_authentic\">Failed to re-authenticate user</string>\n    <string name=\"removed_bookmark\">Removed from Bookmark</string>\n    <string name=\"added_bookmark\">Added to Bookmark</string>\n    <string name=\"notLogin\">You Are Not Logged In</string>\n    <string name=\"select_language\">Select Language</string>\n    <string name=\"english_opt\">English</string>\n    <string name=\"indo_opt\">Indonesian</string>\n    <string name=\"no_internet\">No internet connection</string>\n    <string name=\"error_connect_database\">Error connecting to the database</string>\n    <string name=\"choose_date\">Please choose a date!</string>\n    <string name=\"choose_start\">Please choose a starting time!</string>\n    <string name=\"choose_end\">Please choose an end time!</string>\n    <string name=\"added_to_iter\">Destination Added to Itinerary!</string>\n    <string name=\"sort_txt\">Sort</string>\n    <string name=\"cancel_txt\">Cancel</string>\n    <string name=\"sort_by\">Sort By :</string>\n    <string name=\"rating_txt\">Rating</string>\n    <string name=\"distance_txt\">Distance</string>\n    <string name=\"press_back\">Press back button again to exit</string>\n    <string name=\"no_map_app\">Google Maps is not installed on your device. Opening Google Maps website...</string>\n    <string name=\"no_desttination_iter\">There is no destination in the itinerary</string>\n    <string name=\"add_comment\">Add Comment</string>\n    <string name=\"comment_text\">Comment</string>\n    <string name=\"submit_text\">submit</string>\n    <string name=\"comment_empty\">Enter your comment!</string>\n    <string name=\"please_wait\">Please Wait</string>\n    <string name=\"adding_comment\">Adding comment...</string>\n    <string name=\"failed_add_comment\">Failed to add comment due to</string>\n    <string name=\"success_add_comment\">Comment added...</string>\n    <string name=\"delete_comment\">Delete Comment</string>\n    <string name=\"delete_confirm\">Are you sure you want to delete this comment?</string>\n    <string name=\"delete_opt\">Delete</string>\n    <string name=\"cancel_opt\">Cancel</string>\n    <string name=\"comment_deleted\">Comment Deleted!</string>\n    <string name=\"failed_delete_comment\">Failed to delete comment due to</string>\n    <string name=\"edit_comment\">Edit Comment</string>\n    <string name=\"edit_success\">Succesfully edit comment!</string>\n    <string name=\"failed_edit_comment\">failed to edit comment due to</string>\n    <string name=\"login_try\">Logging in..</string>\n    <string name=\"check_user\">Checking user..</string>\n    <string name=\"wrong_pass\">Wrong password!</string>\n    <string name=\"empty_username\">Username cannot be empty!</string>\n    <string name=\"user_length\">Username must be between 3-12 characters!</string>\n    <string name=\"empty_email\">Email cannot be empty!</string>\n    <string name=\"wrong_email\">Invalid Email Address!</string>\n    <string name=\"empty_pass\">Password cannot be empty!</string>\n    <string name=\"pass_length\">Password must be more than 8 characters!</string>\n    <string name=\"pass_1num\">Password must contain at least one number!</string>\n    <string name=\"create_account\">Creating account...</string>\n    <string name=\"saving_user_info\">Saving user info</string>\n    <string name=\"updating_profile\">updating user profile...</string>\n    <string name=\"updating_image\">Updating profile image</string>\n    <string name=\"dashboard_admin\">Dashboard Admin</string>\n    <string name=\"search_category\">Search Category</string>\n    <string name=\"add_category\">Add category</string>\n    <string name=\"add_new_destination_category\">Add New Destination Category</string>\n    <string name=\"destination_description\">Destination Description</string>\n    <string name=\"add_new_destination\">Add New Destination</string>\n    <string name=\"add_item\">Add ITEM</string>\n    <string name=\"basic_javanese_characters\">Basic Javanese Characters</string>\n    <string name=\"city_logo\">City Logo\\n(2014-2017)</string>\n    <string name=\"remove_bookmark\">Remove Bookmark</string>\n    <string name=\"remove_confirm\">Are you sure to remove category</string>\n    <string name=\"carakan_letters_n_ngelgena\">CARAKAN LETTERS\\n(Ngelgena)</string>\n    <string name=\"couple_letters_n_mati\">COUPLE LETTERS\\n(Mati)</string>\n    <string name=\"used_email\">Email is already used !</string>\n    <string name=\"deleted_category\">Category deleted successfully!</string>\n    <string name=\"cat_destination_deleted\">Destinations deleted successfully!</string>\n    <string name=\"deleting_item\">Deleting item...</string>\n    <string name=\"acount_created\">Account created!</string>\n    <string name=\"suces_register\">Registered successfully!</string>\n    <string name=\"delete_desti_confirm\">\\\"Are you sure you want to delete \\\"</string>\n    <string name=\"delete_confirmation\">Confirmation</string>\n    <string name=\"error_news\">Error fetching news articles:</string>\n    <string name=\"empty_bookmark\">Empty Bookmark</string>\n    <string name=\"add_itinerary\">Add Itinerary</string>\n    <string name=\"choose_location\">Choose Location</string>\n    <string name=\"your_location\">Your Location</string>\n    <string name=\"use_current_location\">Use current location</string>\n    <string name=\"update_itinerary\">Update Itinerary</string>\n    <string name=\"empty_itinerary\">Empty Itinerary</string>\n    <string name=\"confirm_delete\">Confirm Delete</string>\n    <string name=\"delete_item\">Are you sure you want to delete this item ?</string>\n    <string name=\"yes_myapp\">yes</string>\n    <string name=\"wait\">Please Wait</string>\n    <string name=\"deleting\">Deleting . . .</string>\n    <string name=\"delete_iter\">Itinerary deleted successfully</string>\n    <string name=\"fail_deteltIter\">Failed to delete itinerary because of</string>\n    <string name=\"noMyapp\">No</string>\n    <string name=\"iter_notdeleted\">Itinerary Not Deleted</string>\n    <string name=\"set_location\">Set Location</string>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-night/strings.xml b/app/src/main/res/values-night/strings.xml
--- a/app/src/main/res/values-night/strings.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/res/values-night/strings.xml	(date 1684920454816)
@@ -127,4 +127,36 @@
     <string name="noMyapp">No</string>
     <string name="iter_notdeleted">Itinerary Not Deleted</string>
     <string name="set_location">Set Location</string>
+    <string name="select_start_date">Select start date</string>
+    <string name="select_end_date">Select end date</string>
+    <string name="add_date">add date</string>
+    <string name="data_saved">Date Saved</string>
+    <string name="item_selected">\" item selected\"</string>
+    <string name="items_selected">\" items selected\"</string>
+    <string name="pick_start">Pick starting location</string>
+    <string name="below_are">Below are the places nearest to your current location</string>
+    <string name="pick_next">Pick the next location</string>
+    <string name="place_near_to">\"Below are the places nearest to \"</string>
+    <string name="next_txt">next</string>
+    <string name="pick_aPlace">Please pick a place</string>
+    <string name="not_found">Not Found</string>
+    <string name="forty5_minute">45 Minutes - 2 Hour</string>
+    <string name="based_on">Subjective and can vary based on personal preferences</string>
+    <string name="one_two_hour">1 Hour - 2 Hour</string>
+    <string name="depend_onNeeds">Vary depend on needs</string>
+    <string name="thirty_oneHour">30 Minutes - 1 Hour</string>
+    <string name="thirty2Hour">30 Minutes - 2 Hour</string>
+    <string name="pickTheTime">Pick the time</string>
+    <string name="rekomen_time">\"Recommended time: \"</string>
+    <string name="data_not_found">Opening hours data not found</string>
+    <string name="allowAnyTime">Allowing any time to be selected</string>
+    <string name="outside_business">Selected time is outside business hours</string>
+    <string name="justnotAvail">Opening hours not available</string>
+    <string name="invalidTimeSlot">\"Invalid time slot: \"</string>
+    <string name="invalid_opening_format">Invalid opening hours format</string>
+    <string name="itinerary_updated">itinerary updated</string>
+    <string name="iterUploadSuccess">Itinerary uploaded successfully</string>
+    <string name="failIterUpload">\"Itinerary upload failed due to \"</string>
+    <string name="iterUpdateSuccess">Itinerary updated successfully</string>
+    <string name="iterFailUpdate">\"Failed to update itinerary: \"</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.app.AlertDialog;\nimport android.app.DatePickerDialog;\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.text.TextUtils;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentPagerAdapter;\nimport androidx.viewpager.widget.ViewPager;\n\nimport com.binus.pekalongancityguide.ItemTemplate.Categories;\nimport com.binus.pekalongancityguide.R;\nimport com.binus.pekalongancityguide.databinding.DialogChooseDateBinding;\nimport com.binus.pekalongancityguide.databinding.FragmentItineraryPagerBinding;\nimport com.google.android.material.tabs.TabLayout;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.Locale;\n\nimport static android.content.ContentValues.TAG;\nimport static com.binus.pekalongancityguide.Misc.Constants.FIREBASE_DATABASE_URL;\n\npublic class ItineraryPager extends Fragment {\n    public ArrayList<Categories> categoriesArrayList;\n    public ViewPagerAdapter viewPagerAdapter;\n    private TabLayout tabLayout;\n    private ViewPager viewPager;\n    private FragmentItineraryPagerBinding binding;\n    private int startDay, startMonth, startYear, endDay, endMonth, endYear;\n    private EditText startEt, endEt;\n    private Calendar calendar;\n    private AlertDialog dialog;\n    private ImageButton startBtn, endBtn;\n    private Button addDate;\n    private String startDate, endDate;\n    private double currentLatitude, currentLongitude;\n\n    public ItineraryPager() {\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        binding = FragmentItineraryPagerBinding.inflate(LayoutInflater.from(getContext()), container, false);\n        init();\n        showPickDateDialog();\n        binding.backToList.setOnClickListener(v -> {\n            FragmentManager fragmentManager = getParentFragmentManager();\n            fragmentManager.popBackStack();\n        });\n        Bundle args = getArguments();\n        if (args != null) {\n            currentLatitude = args.getDouble(\"currentLatitude\", 0);\n            currentLongitude = args.getDouble(\"currentLongitude\", 0);\n            Log.d(TAG, \"Current Latitude: \" + currentLatitude);\n            Log.d(TAG, \"Current Longitude: \" + currentLongitude);\n        }\n        return binding.getRoot();\n    }\n\n    private void showPickDateDialog() {\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n        DialogChooseDateBinding chooseDateBinding = DialogChooseDateBinding.inflate(getLayoutInflater());\n        builder.setView(chooseDateBinding.getRoot());\n        startEt = chooseDateBinding.startDateEt;\n        endEt = chooseDateBinding.endDateEt;\n        startBtn = chooseDateBinding.startPickerBtn;\n        endBtn = chooseDateBinding.endPickerBtn;\n        addDate = chooseDateBinding.addDateBtn;\n        calendar = Calendar.getInstance();\n        startBtn.setOnClickListener(v -> showStartCalendar());\n\n        startEt.setOnClickListener(v -> showStartCalendar());\n\n        endBtn.setOnClickListener(v -> showEndCalendar());\n\n        endEt.setOnClickListener(v -> showEndCalendar());\n        dialog = builder.create();\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\n        dialog.show();\n        addDate.setOnClickListener(v -> {\n            validateData(startEt, endEt);\n        });\n    }\n\n    private void showStartCalendar() {\n        startYear = calendar.get(Calendar.YEAR);\n        startMonth = calendar.get(Calendar.MONTH);\n        startDay = calendar.get(Calendar.DAY_OF_MONTH);\n\n        DatePickerDialog dialog = new DatePickerDialog(getContext(), (dateView, year, month, dayOfMonth) -> {\n            startYear = year;\n            startMonth = month;\n            startDay = dayOfMonth;\n            SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n            startDate = format.format(new Date(startYear - 1900, startMonth, startDay));\n            startEt.setText(startDate);\n        }, startYear, startMonth, startDay);\n\n        dialog.getDatePicker().setMinDate(calendar.getTimeInMillis());\n\n        if (endDate != null) {\n            SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n            try {\n                Date endDateObj = format.parse(endDate);\n                dialog.getDatePicker().setMaxDate(endDateObj.getTime());\n            } catch (ParseException e) {\n                e.printStackTrace();\n            }\n        }\n\n        dialog.getWindow().setBackgroundDrawableResource(R.color.palette_4);\n        dialog.show();\n    }\n\n    private void showEndCalendar() {\n        endYear = calendar.get(Calendar.YEAR);\n        endMonth = calendar.get(Calendar.MONTH);\n        endDay = calendar.get(Calendar.DAY_OF_MONTH);\n\n        DatePickerDialog dialog = new DatePickerDialog(getContext(), (dateView, year, month, dayOfMonth) -> {\n            endYear = year;\n            endMonth = month;\n            endDay = dayOfMonth;\n            SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n            endDate = format.format(new Date(endYear - 1900, endMonth, endDay));\n            endEt.setText(endDate);\n        }, endYear, endMonth, endDay);\n\n        Calendar minDateCalendar = Calendar.getInstance();\n        if (startDate != null) {\n            SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n            try {\n                Date startDateObj = format.parse(startDate);\n                minDateCalendar.setTime(startDateObj);\n            } catch (ParseException e) {\n                e.printStackTrace();\n            }\n        } else {\n            minDateCalendar.setTime(calendar.getTime());\n        }\n        if (minDateCalendar.after(calendar)) {\n            dialog.getDatePicker().setMinDate(minDateCalendar.getTimeInMillis());\n        } else {\n            dialog.getDatePicker().setMinDate(calendar.getTimeInMillis());\n        }\n\n        dialog.getWindow().setBackgroundDrawableResource(R.color.palette_4);\n        dialog.show();\n    }\n\n    private void validateData(EditText startDate, EditText endDate) {\n        String startTime = startDate.getText().toString().trim();\n        String endTime = endDate.getText().toString().trim();\n        boolean allFieldsFilled = true;\n\n        if (TextUtils.isEmpty(startTime)) {\n            startEt.setError(getContext().getString(R.string.choose_start));\n            allFieldsFilled = false;\n        } else {\n            startEt.setError(null);\n        }\n\n        if (TextUtils.isEmpty(endTime)) {\n            endEt.setError(getContext().getString(R.string.choose_end));\n            allFieldsFilled = false;\n        } else {\n            endEt.setError(null);\n        }\n\n        if (allFieldsFilled) {\n            dialog.dismiss();\n            setupViewPagerAdapter(viewPager);\n            tabLayout.setupWithViewPager(viewPager);\n            Toast.makeText(getContext(), \"Date Saved\", Toast.LENGTH_SHORT).show();\n        }\n    }\n\n    private void init() {\n        tabLayout = binding.iterTabLayout;\n        viewPager = binding.iterViewPager;\n    }\n\n    private void setupViewPagerAdapter(ViewPager viewPager) {\n        viewPagerAdapter = new ViewPagerAdapter(getChildFragmentManager(), getContext());\n        categoriesArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(FIREBASE_DATABASE_URL).getReference(\"Categories\");\n        reference.keepSynced(true);\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                categoriesArrayList.clear();\n                Categories allCategories = new Categories(\"01\",\"All\",\"\",1);\n                categoriesArrayList.add(allCategories);\n                viewPagerAdapter.addFragment(AddItinerary.newInstance(\n                        \"\" + allCategories.getId(),\n                        \"\" + allCategories.getCategory(),\n                        \"\" + allCategories.getUid(),\n                        startDate,\n                        endDate,\n                        currentLatitude,\n                        currentLongitude\n                ),allCategories.getCategory());\n                for(DataSnapshot dataSnapshot: snapshot.getChildren()){\n                    Categories categories = dataSnapshot.getValue(Categories.class);\n                    categoriesArrayList.add(categories);\n                    viewPagerAdapter.addFragment(AddItinerary.newInstance(\n                            \"\" + categories.getId(),\n                            \"\" + categories.getCategory(),\n                            \"\" + categories.getUid(),\n                            startDate,\n                            endDate,\n                            currentLatitude,\n                            currentLongitude\n                    ), categories.getCategory());\n                }\n                viewPagerAdapter.notifyDataSetChanged();\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n\n            }\n        });\n        viewPager.setAdapter(viewPagerAdapter);\n        viewPager.setOffscreenPageLimit(10);\n    }\n\n    public class ViewPagerAdapter extends FragmentPagerAdapter {\n        private final ArrayList<AddItinerary> fragmentList = new ArrayList<>();\n        private final ArrayList<String> fragmentTitleList = new ArrayList<>();\n        private final Context context;\n\n        public ViewPagerAdapter(@NonNull FragmentManager fm, Context context) {\n            super(fm, BEHAVIOR_SET_USER_VISIBLE_HINT);\n            this.context = context;\n        }\n\n        @NonNull\n        @Override\n        public Fragment getItem(int position) {\n            return fragmentList.get(position);\n        }\n\n        @Override\n        public int getCount() {\n            return fragmentList.size();\n        }\n\n        private void addFragment(AddItinerary fragment, String title) {\n            fragmentList.add(fragment);\n            fragmentTitleList.add(title);\n        }\n\n        public CharSequence getPageTitle(int position) {\n            return fragmentTitleList.get(position);\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java	(date 1684919106371)
@@ -198,7 +198,7 @@
             dialog.dismiss();
             setupViewPagerAdapter(viewPager);
             tabLayout.setupWithViewPager(viewPager);
-            Toast.makeText(getContext(), "Date Saved", Toast.LENGTH_SHORT).show();
+            Toast.makeText(getContext(),R.string.data_saved, Toast.LENGTH_SHORT).show();
         }
     }
 
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    #ENGLISH STRING\n    #home fragment\n    <string name=\"app_name\">Pekalongan City Guide</string>\n    <string name=\"short_explain\">Pekalongan is a city of Central Java, Indonesia. It was formerly the seat of Pekalongan Regency on the northern coast of the province, but is now an independent municipality within the province. The city is Central Java\\'s most important port, and is known for its batik.</string>\n    <string name=\"spotlight\">Spotlight</string>\n    <string name=\"history\">History</string>\n    <string name=\"history_txt\">The coastal area around Pekalongan was part of the ancient Holing (Kalingga) kingdom. The 7th century Sojomerto inscription, discovered in neighboring Batang Regency, Central Java, is linked with Kalingga as well as the ancestor of the Sailendras.</string>\n    <string name=\"read_more\">Read more</string>\n    <string name=\"culinary\">Local Cuisines</string>\n    <string name=\"breaking_news\">Breaking News</string>\n\n    #history detail activity\n    <string name=\"history_header\">Pekalongan City History</string>\n    <string name=\"history_body\">\\t\\t\\t\\t\\tThe coastal area around Pekalongan was part of the ancient Holing (Kalingga) kingdom. The 7th century Sojomerto inscription, discovered in neighboring Batang Regency, Central Java, is linked with Kalingga as well as the ancestor of the Sailendras. The exact location of the Kalingga capital is unclear however, that it was suggested lies somewhere between Pekalongan and Jepara. However it is most likely that Kalingga was located in Pekalongan instead of Jepara, since there is similarity of names between Kalingga and Pekalongan. The name probably slightly shifted over centuries, from Kalingga, Kaling, Kalong, and later added with pe- -an circumfix forming \\'Pekalongan\\'.\\n\\n\\t\\t\\t\\t\\tThe history of Pekalongan dated back to the early 12th century. A book written in 1178 by a Song dynasty official already had record of Pekalongan, then known to Chinese merchants as \\'Pukalong\\', it was then a seaport of Java (then known as Dvapa); the king of Java lived at Pukalong, knotted his hair at the back of his head, while his people wore short hair and wrapped their body with colorfully weaved cloth. Chinese merchant ship set sail from Canton during November, with the aid of fair wind sailed nonstop day and night, arrived at Pukalong in about one month. The people made wine from coconuts, produced very delicious red and white cane sugar, the kingdom made coins out of bronze and copper, 60 copper coins exchanged for one tael of gold. Local produces included pepper, clove, sandalwood, eaglewood and white round cardamom.\\n\\n  \\t\\t\\t\\t\\tPekalongan became a part of the empire of the Sultanate of Mataram through treaty and marriage alliances by the early 17th century. The area was on the geographic periphery of the empire, which was based in interior central Java. However, it was a wealthy area, and by the end of the 17th century, the substantial money and produce it sent to the center made it a key part of Mataram\\'s realm. The area went into economic decline during the 18th century, and the Dutch East India Company began to gain substantial influence over the area\\'s political and economic life. The Dutch built a fort in the city in 1753; this fort still stands.\\n\\n  \\t\\t\\t\\t\\tFrom the 1830s, the Pekalongan area became a major producer of sugar. Sugarcane had been grown in the area since the early 12th century, as recorded in Chinese history books, but production expanded substantially during the mid-19th century due to Dutch efforts. Initially, production was boosted through compulsory corvée labor; the Dutch colonial government took advantage of longstanding Javanese expectations that the peasantry contributes a part of their labor to the state. Between the 1860s and the 1890s, this system was phased out, and workers were paid directly. The colonial sugar industry collapsed during the Great Depression of the 1930s, but sugar remains a key export of the area in independent Indonesia.\\n\\n  \\t\\t\\t\\t\\t\\tOn October 8, 1945, an anti \\'Swapraja\\'/anti feudalism movement called Three Regions Movement \\'Gerakan Tiga Daerah\\' was established in Tegal, Pekalongan, and Brebes. The goal of this movement was to replace the blue blood regents (related to the kings from Jogyakarta and Surakarta) with ordinary people. According to the leaders of this movement, the old regents had cooperated with Japanese during World War II and sent people to the Japanese slave labor camps.  \\t\\t\\t\\t\\tThe main leader of this movement was Sarjiyo who became the new regent of Pekalongan. Other leaders of this movement were Kutil, K. Mijaya, and Ir. Sakirman. Ir Sakirman was the local leader of Indonesian Communist Party (PKI).\\n\\n  \\t\\t\\t\\t\\tThe old regents were arrested, stripped naked, and dragged into the prisons. Other government officials and police officers were kidnapped and massacred at Talang bridge. This movement also started a racial riot against ethnic Chinese in Brebes. The government of Republic of Indonesia (RI) in Jogyakarta disagree with this movement and declared it as an illegal movement.  On November 4, 1945, the movement attacked Indonesian army HQ and the regent office in Pekalongan. The rebels were defeated by Indonesian army in a fierce battle on December 21, 1945. Most leaders of this movement were arrested and thrown into the prisons. This rebellion is called Three Regions Affair.</string>\n    <string name=\"general_info\">General Info</string>\n    <string name=\"info_body\">Pekalongan Other transcription(s) :  - Hanacaraka :\\tꦥꦼꦏꦭꦺꦴꦁꦔꦤ꧀  - Pegon :\\tڤٓكالَوڠان  - Chinese\\t: 北加隆岸  Nickname : Kota Batik (lit. \\'the Batik city\\')  Motto(s) : Pekalongan Kota BATIK (Bersih (Clean), Aman (Safe), Tertib (Discipline), Indah (Beautiful), Komunikatif (Communicative))  Mayor :\\tSaelany Mahfudz  Area Total :\\t45.25 km2 (17.47 sq mi)  Total Population per-2019 :\\t307,097 Density : 6,800/km2 (18,000/sq mi)  Time zone : UTC+7 (Western Indonesia Time)  Area code : (+62) 285  Post Code :51100\\n\\nWebsite : pekalongankota.go.id</string>\n    <string name=\"important_numbers\">Important Numbers</string>\n    <string name=\"numbers\">Emergency Call : 112\\n\\nPekalongan City Police : (0285) 421692\\n\\nFirefighter : (0285) 435301\\n\\nPLN Pekalongan Office : (0285) 434785\\n\\nPrimary Tax Service Office : (0285) 422491\\n\\nBendan Hospital, Pekalongan : (0285) 437222\\n\\nRailway station : (0285) 421161</string>\n    <string name=\"coat_arms_old\">Coat of Arms of Pekalongan\\nfrom 1930s during colonial era</string>\n    <string name=\"coat_arms_new\">City Coat of arms \\n(Now)</string>\n    <string name=\"city_flag\">City Flag</string>\n    #culinary detail\n    <string name=\"culinary_header\">Culinary</string>\n    <string name=\"culinary_image\">Culinary Gallery</string>\n    #destination fragment\n    <string name=\"search_hint\">Search Destination</string>\n    #destination details\n    <string name=\"detail_header\">Destination Details</string>\n    <string name=\"bookmark_text\">Bookmark Place</string>\n    <string name=\"unbookmark_text\">Remove from Bookmark</string>\n    #bookmark fragment\n    <string name=\"bookmark_list\">Bookmark List</string>\n    #convo fragment\n    <string name=\"convo_header\">Daily Conversation Examples</string>\n    <string name=\"phrases_header\">Frequent Phrases</string>\n    #profile fragment\n    <string name=\"user_txt\">Username</string>\n    <string name=\"email_txt\">Email Address</string>\n    <string name=\"time_txt\">Date Joined</string>\n    <string name=\"type_txt\">User Type</string>\n    <string name=\"logout_text\">Logout</string>\n    <string name=\"change_lang\">Change Language</string>\n    #edit profile\n    <string name=\"edit_header\">Edit Profile</string>\n    <string name=\"update_text\">Update</string>\n    #login activity\n    <string name=\"email_hint\">Enter E-mail</string>\n    <string name=\"pass_hint\">Enter Password</string>\n    <string name=\"login_text\">Login</string>\n    <string name=\"without_text\">Continue without login</string>\n    <string name=\"donthave_text\">Don\\'t have any account?</string>\n    <string name=\"toRegister_text\">REGISTER NOW</string>\n    #register activity\n    <string name=\"regisuser_text\">Enter Username</string>\n    <string name=\"regisemail_text\">Enter E-mail</string>\n    <string name=\"regispass_text\">Enter Password</string>\n    <string name=\"regiscfmpass_text\">Confirm Your Password</string>\n    <string name=\"regisbtn_text\">Register</string>\n    <string name=\"change_password\">Change Password</string>\n    <string name=\"curr_pass\">Enter Current Password</string>\n    <string name=\"edit_pass\">Enter Password</string>\n    <string name=\"cfmeditpass\">Confirm New Password</string>\n    <string name=\"update_pass\">Update</string>\n    <string name=\"itinerary_profile\">Itinerary List</string>\n    <string name=\"show_routes\">Show Routes</string>\n    <string name=\"search_bookmark\">Search Bookmark</string>\n    <string name=\"add_to_itinerary\">Add to Itinerary</string>\n    <string name=\"select_date_iter\">Select date</string>\n    <string name=\"select_start_time_iter\">Select start time</string>\n    <string name=\"select_end_time_iter\">Select end time</string>\n    <string name=\"add_to_itinerary_btn\">Add to Itinerary</string>\n    <string name=\"search_destination_admin\">Search Destination</string>\n    <string name=\"destination_admin\">Destination</string>\n    <string name=\"category_admin\">Category</string>\n    <string name=\"detail_news\">Detail News</string>\n    <string name=\"itinerary_list_header\">Itinerary List</string>\n    <string name=\"enter_new_username\">Enter new username</string>\n    <string name=\"edit_destination_header\">Edit Destination</string>\n    <string name=\"edit_destination_name\">Destination Name</string>\n    <string name=\"edit_destination_description\">Destination Description</string>\n    <string name=\"edit_pick_category\">Pick Category</string>\n    <string name=\"update_destination_btn\">Update Destination</string>\n    <string name=\"opening_hours_detail\">Opening Hours</string>\n    <string name=\"place_reviews_detail\">Place Reviews</string>\n    <string name=\"logout_confirm\">Are you sure you want to log out?</string>\n    <string name=\"yes_txt\">Yes</string>\n    <string name=\"no_txt\">No</string>\n    <string name=\"gpsnotEnabled\">GPS not enabled</string>\n    <string name=\"enable_gps_confirm\">Would you like to enable GPS?</string>\n    <string name=\"enter_name_edit\">Enter new name</string>\n    <string name=\"enter_cur_pass\">Enter current password!</string>\n    <string name=\"pass8chara\">Password must be more than 8 characters!</string>\n    <string name=\"pass1num\">Password must contain at least one number!</string>\n    <string name=\"pass1Symbol\">Password must contain at least one symbol!</string>\n    <string name=\"enternewPass\">Enter new password!</string>\n    <string name=\"passcantSame\">Your new password cannot be the same as your current password!</string>\n    <string name=\"cfmpassEnter\">Enter confirm password!</string>\n    <string name=\"passnotMatch\">Password does not match!</string>\n    <string name=\"pass_updated_txt\">Password updated successfully</string>\n    <string name=\"failed_update_pass\">Failed to update password</string>\n    <string name=\"failed_authentic\">Failed to re-authenticate user</string>\n    <string name=\"removed_bookmark\">Removed from Bookmark</string>\n    <string name=\"added_bookmark\">Added to Bookmark</string>\n    <string name=\"notLogin\">You Are Not Logged In</string>\n    <string name=\"select_language\">Select Language</string>\n    <string name=\"english_opt\">English</string>\n    <string name=\"indo_opt\">Indonesian</string>\n    <string name=\"no_internet\">No internet connection</string>\n    <string name=\"error_connect_database\">Error connecting to the database</string>\n    <string name=\"choose_date\">Please choose a date!</string>\n    <string name=\"choose_start\">Please choose a starting time!</string>\n    <string name=\"choose_end\">Please choose an end time!</string>\n    <string name=\"added_to_iter\">Destination Added to Itinerary!</string>\n    <string name=\"sort_txt\">Sort</string>\n    <string name=\"cancel_txt\">Cancel</string>\n    <string name=\"sort_by\">Sort By :</string>\n    <string name=\"rating_txt\">Rating</string>\n    <string name=\"distance_txt\">Distance</string>\n    <string name=\"press_back\">Press back button again to exit</string>\n    <string name=\"no_map_app\">Google Maps is not installed on your device. Opening Google Maps website...</string>\n    <string name=\"no_desttination_iter\">There is no destination in the itinerary</string>\n    <string name=\"add_comment\">Add Comment</string>\n    <string name=\"comment_text\">Comments</string>\n    <string name=\"submit_text\">submit</string>\n    <string name=\"comment_empty\">Enter your comment!</string>\n    <string name=\"please_wait\">Please Wait</string>\n    <string name=\"adding_comment\">Adding comment...</string>\n    <string name=\"failed_add_comment\">Failed to add comment due to</string>\n    <string name=\"success_add_comment\">Comment added...</string>\n    <string name=\"delete_comment\">Delete Comment</string>\n    <string name=\"delete_confirm\">Are you sure you want to delete this comment?</string>\n    <string name=\"delete_opt\">Delete</string>\n    <string name=\"cancel_opt\">Cancel</string>\n    <string name=\"comment_deleted\">Comment Deleted!</string>\n    <string name=\"failed_delete_comment\">Failed to delete comment due to</string>\n    <string name=\"edit_comment\">Edit Comment</string>\n    <string name=\"edit_success\">Succesfully edit comment!</string>\n    <string name=\"failed_edit_comment\">failed to edit comment due to</string>\n    <string name=\"login_try\">Logging in..</string>\n    <string name=\"check_user\">Checking user..</string>\n    <string name=\"wrong_pass\">Wrong password!</string>\n    <string name=\"empty_username\">Username cannot be empty!</string>\n    <string name=\"user_length\">Username must be between 3-12 characters!</string>\n    <string name=\"empty_email\">Email cannot be empty!</string>\n    <string name=\"wrong_email\">Invalid Email Address!</string>\n    <string name=\"empty_pass\">Password cannot be empty!</string>\n    <string name=\"pass_length\">Password must be more than 8 characters!</string>\n    <string name=\"pass_1num\">Password must contain at least one number!</string>\n    <string name=\"create_account\">Creating account...</string>\n    <string name=\"saving_user_info\">Saving user info</string>\n    <string name=\"updating_profile\">updating user profile...</string>\n    <string name=\"updating_image\">Updating profile image</string>\n    <string name=\"dashboard_admin\">Dashboard Admin</string>\n    <string name=\"search_category\">Search Category</string>\n    <string name=\"add_category\">Add category</string>\n    <string name=\"add_new_destination_category\">Add New Destination Category</string>\n    <string name=\"destination_description\">Destination Description</string>\n    <string name=\"add_new_destination\">Add New Destination</string>\n    <string name=\"add_item\">Add ITEM</string>\n    <string name=\"basic_javanese_characters\">Basic Javanese Characters</string>\n    <string name=\"city_logo\">City Logo\\n(2014-2017)</string>\n    <string name=\"remove_bookmark\">Remove Bookmark</string>\n    <string name=\"remove_confirm\">Are you sure to remove category</string>\n    <string name=\"carakan_letters_n_ngelgena\">CARAKAN LETTERS\\n(Ngelgena)</string>\n    <string name=\"couple_letters_n_mati\">COUPLE LETTERS\\n(Mati)</string>\n    <string name=\"used_email\">Email is already used !</string>\n    <string name=\"deleted_category\">Category deleted successfully!</string>\n    <string name=\"cat_destination_deleted\">Destinations deleted successfully!</string>\n    <string name=\"deleting_item\">Deleting item...</string>\n    <string name=\"acount_created\">Account created!</string>\n    <string name=\"suces_register\">Registered successfully!</string>\n    <string name=\"delete_desti_confirm\">\\\"Are you sure you want to delete \\\"</string>\n    <string name=\"delete_confirmation\">Confirmation</string>\n    <string name=\"error_news\">Error fetching news articles:</string>\n    <string name=\"empty_bookmark\">Empty Bookmark</string>\n    <string name=\"add_itinerary\">Add Itinerary</string>\n    <string name=\"choose_location\">Choose Location</string>\n    <string name=\"your_location\">Your Location</string>\n    <string name=\"use_current_location\">Use current location</string>\n    <string name=\"update_itinerary\">Update Itinerary</string>\n    <string name=\"empty_itinerary\">Empty Itinerary</string>\n    <string name=\"confirm_delete\">Confirm Delete</string>\n    <string name=\"delete_item\">Are you sure you want to delete this item ?</string>\n    <string name=\"yes_myapp\">yes</string>\n    <string name=\"wait\">Please Wait</string>\n    <string name=\"deleting\">Deleting . . .</string>\n    <string name=\"delete_iter\">Itinerary deleted successfully</string>\n    <string name=\"fail_deteltIter\">Failed to delete itinerary because of</string>\n    <string name=\"noMyapp\">No</string>\n    <string name=\"iter_notdeleted\">Itinerary Not Deleted</string>\n    <string name=\"set_location\">Set Location</string>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/res/values/strings.xml	(date 1684920454927)
@@ -190,4 +190,36 @@
     <string name="noMyapp">No</string>
     <string name="iter_notdeleted">Itinerary Not Deleted</string>
     <string name="set_location">Set Location</string>
+    <string name="select_start_date">Select start date</string>
+    <string name="select_end_date">Select end date</string>
+    <string name="add_date">add date</string>
+    <string name="data_saved">Date Saved</string>
+    <string name="item_selected">\" item selected\"</string>
+    <string name="items_selected">\" items selected\"</string>
+    <string name="pick_start">Pick starting location</string>
+    <string name="below_are">Below are the places nearest to your current location</string>
+    <string name="pick_next">Pick the next location</string>
+    <string name="place_near_to">\"Below are the places nearest to \"</string>
+    <string name="next_txt">next</string>
+    <string name="pick_aPlace">Please pick a place</string>
+    <string name="not_found">Not Found</string>
+    <string name="forty5_minute">45 Minutes - 2 Hour</string>
+    <string name="based_on">Subjective and can vary based on personal preferences</string>
+    <string name="one_two_hour">1 Hour - 2 Hour</string>
+    <string name="depend_onNeeds">Vary depend on needs</string>
+    <string name="thirty_oneHour">30 Minutes - 1 Hour</string>
+    <string name="thirty2Hour">30 Minutes - 2 Hour</string>
+    <string name="pickTheTime">Pick the time</string>
+    <string name="rekomen_time">\"Recommended time: \"</string>
+    <string name="data_not_found">Opening hours data not found</string>
+    <string name="allowAnyTime">Allowing any time to be selected</string>
+    <string name="outside_business">Selected time is outside business hours</string>
+    <string name="justnotAvail">Opening hours not available</string>
+    <string name="invalidTimeSlot">\"Invalid time slot: \"</string>
+    <string name="invalid_opening_format">Invalid opening hours format</string>
+    <string name="itinerary_updated">itinerary updated</string>
+    <string name="iterUploadSuccess">Itinerary uploaded successfully</string>
+    <string name="failIterUpload">\"Itinerary upload failed due to \"</string>
+    <string name="iterUpdateSuccess">Itinerary updated successfully</string>
+    <string name="iterFailUpdate">\"Failed to update itinerary: \"</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values-v24/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <string name=\"show_routes\">Show Routes</string>\n    <string name=\"search_bookmark\">Search Bookmark</string>\n    <string name=\"add_to_itinerary\">Add to Itinerary</string>\n    <string name=\"select_date_iter\">Select date</string>\n    <string name=\"select_start_time_iter\">Select start time</string>\n    <string name=\"select_end_time_iter\">Select end time</string>\n    <string name=\"add_to_itinerary_btn\">Add to Itinerary</string>\n    <string name=\"search_destination_admin\">Search Destination</string>\n    <string name=\"destination_admin\">Destination</string>\n    <string name=\"category_admin\">Category</string>\n    <string name=\"detail_news\">Detail News</string>\n    <string name=\"itinerary_list_header\">Itinerary List</string>\n    <string name=\"enter_new_username\">Enter new username</string>\n    <string name=\"edit_destination_header\">Edit Destination</string>\n    <string name=\"edit_destination_name\">Destination Name</string>\n    <string name=\"edit_destination_description\">Destination Description</string>\n    <string name=\"edit_pick_category\">Pick Category</string>\n    <string name=\"update_destination_btn\">Update Destination</string>\n    <string name=\"opening_hours_detail\">Opening Hours</string>\n    <string name=\"place_reviews_detail\">Place Reviews</string>\n    <string name=\"logout_confirm\">Are you sure you want to log out?</string>\n    <string name=\"yes_txt\">Yes</string>\n    <string name=\"no_txt\">No</string>\n    <string name=\"gpsnotEnabled\">GPS not enabled</string>\n    <string name=\"enable_gps_confirm\">Would you like to enable GPS?</string>\n    <string name=\"enter_name_edit\">Enter new name</string>\n    <string name=\"enter_cur_pass\">Enter current password!</string>\n    <string name=\"pass8chara\">Password must be more than 8 characters!</string>\n    <string name=\"pass1num\">Password must contain at least one number!</string>\n    <string name=\"pass1Symbol\">Password must contain at least one symbol!</string>\n    <string name=\"enternewPass\">Enter new password!</string>\n    <string name=\"passcantSame\">Your new password cannot be the same as your current password!</string>\n    <string name=\"cfmpassEnter\">Enter confirm password!</string>\n    <string name=\"passnotMatch\">Password does not match!</string>\n    <string name=\"pass_updated_txt\">Password updated successfully</string>\n    <string name=\"failed_update_pass\">Failed to update password</string>\n    <string name=\"failed_authentic\">Failed to re-authenticate user</string>\n    <string name=\"removed_bookmark\">Removed from Bookmark</string>\n    <string name=\"added_bookmark\">Added to Bookmark</string>\n    <string name=\"notLogin\">You Are Not Logged In</string>\n    <string name=\"select_language\">Select Language</string>\n    <string name=\"english_opt\">English</string>\n    <string name=\"indo_opt\">Indonesian</string>\n    <string name=\"no_internet\">No internet connection</string>\n    <string name=\"error_connect_database\">Error connecting to the database</string>\n    <string name=\"choose_date\">Please choose a date!</string>\n    <string name=\"choose_start\">Please choose a starting time!</string>\n    <string name=\"choose_end\">Please choose an end time!</string>\n    <string name=\"added_to_iter\">Destination Added to Itinerary!</string>\n    <string name=\"sort_txt\">Sort</string>\n    <string name=\"cancel_txt\">Cancel</string>\n    <string name=\"sort_by\">Sort By :</string>\n    <string name=\"rating_txt\">Rating</string>\n    <string name=\"distance_txt\">Distance</string>\n    <string name=\"press_back\">Press back button again to exit</string>\n    <string name=\"no_map_app\">Google Maps is not installed on your device. Opening Google Maps website...</string>\n    <string name=\"no_desttination_iter\">There is no destination in the itinerary</string>\n    <string name=\"add_comment\">Add Comment</string>\n    <string name=\"comment_text\">Comment</string>\n    <string name=\"submit_text\">submit</string>\n    <string name=\"comment_empty\">Enter your comment!</string>\n    <string name=\"please_wait\">Please Wait</string>\n    <string name=\"adding_comment\">Adding comment...</string>\n    <string name=\"failed_add_comment\">Failed to add comment due to</string>\n    <string name=\"success_add_comment\">Comment added...</string>\n    <string name=\"delete_comment\">Delete Comment</string>\n    <string name=\"delete_confirm\">Are you sure you want to delete this comment?</string>\n    <string name=\"delete_opt\">Delete</string>\n    <string name=\"cancel_opt\">Cancel</string>\n    <string name=\"comment_deleted\">Comment Deleted!</string>\n    <string name=\"failed_delete_comment\">Failed to delete comment due to</string>\n    <string name=\"edit_comment\">Edit Comment</string>\n    <string name=\"edit_success\">Succesfully edit comment!</string>\n    <string name=\"failed_edit_comment\">failed to edit comment due to</string>\n    <string name=\"login_try\">Logging in..</string>\n    <string name=\"check_user\">Checking user..</string>\n    <string name=\"wrong_pass\">Wrong password!</string>\n    <string name=\"empty_username\">Username cannot be empty!</string>\n    <string name=\"user_length\">Username must be between 3-12 characters!</string>\n    <string name=\"empty_email\">Email cannot be empty!</string>\n    <string name=\"wrong_email\">Invalid Email Address!</string>\n    <string name=\"empty_pass\">Password cannot be empty!</string>\n    <string name=\"pass_length\">Password must be more than 8 characters!</string>\n    <string name=\"pass_1num\">Password must contain at least one number!</string>\n    <string name=\"create_account\">Creating account...</string>\n    <string name=\"saving_user_info\">Saving user info</string>\n    <string name=\"updating_profile\">updating user profile...</string>\n    <string name=\"updating_image\">Updating profile image</string>\n    <string name=\"dashboard_admin\">Dashboard Admin</string>\n    <string name=\"search_category\">Search Category</string>\n    <string name=\"add_category\">Add category</string>\n    <string name=\"add_new_destination_category\">Add New Destination Category</string>\n    <string name=\"destination_description\">Destination Description</string>\n    <string name=\"add_new_destination\">Add New Destination</string>\n    <string name=\"add_item\">Add ITEM</string>\n    <string name=\"basic_javanese_characters\">Basic Javanese Characters</string>\n    <string name=\"city_logo\">City Logo\\n(2014-2017)</string>\n    <string name=\"remove_bookmark\">Remove Bookmark</string>\n    <string name=\"remove_confirm\">Are you sure to remove category</string>\n    <string name=\"carakan_letters_n_ngelgena\">CARAKAN LETTERS\\n(Ngelgena)</string>\n    <string name=\"couple_letters_n_mati\">COUPLE LETTERS\\n(Mati)</string>\n    <string name=\"used_email\">Email is already used !</string>\n    <string name=\"deleted_category\">Category deleted successfully!</string>\n    <string name=\"cat_destination_deleted\">Destinations deleted successfully!</string>\n    <string name=\"deleting_item\">Deleting item...</string>\n    <string name=\"acount_created\">Account created!</string>\n    <string name=\"suces_register\">Registered successfully!</string>\n    <string name=\"delete_desti_confirm\">\\\"Are you sure you want to delete \\\"</string>\n    <string name=\"delete_confirmation\">Confirmation</string>\n    <string name=\"error_news\">Error fetching news articles:</string>\n    <string name=\"empty_bookmark\">Empty Bookmark</string>\n    <string name=\"add_itinerary\">Add Itinerary</string>\n    <string name=\"choose_location\">Choose Location</string>\n    <string name=\"your_location\">Your Location</string>\n    <string name=\"use_current_location\">Use current location</string>\n    <string name=\"update_itinerary\">Update Itinerary</string>\n    <string name=\"empty_itinerary\">Empty Itinerary</string>\n    <string name=\"confirm_delete\">Confirm Delete</string>\n    <string name=\"delete_item\">Are you sure you want to delete this item ?</string>\n    <string name=\"yes_myapp\">yes</string>\n    <string name=\"wait\">Please Wait</string>\n    <string name=\"deleting\">Deleting . . .</string>\n    <string name=\"delete_iter\">Itinerary deleted successfully</string>\n    <string name=\"fail_deteltIter\">Failed to delete itinerary because of</string>\n    <string name=\"noMyapp\">No</string>\n    <string name=\"iter_notdeleted\">Itinerary Not Deleted</string>\n    <string name=\"set_location\">Set Location</string>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-v24/strings.xml b/app/src/main/res/values-v24/strings.xml
--- a/app/src/main/res/values-v24/strings.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/res/values-v24/strings.xml	(date 1684920454854)
@@ -127,4 +127,36 @@
     <string name="noMyapp">No</string>
     <string name="iter_notdeleted">Itinerary Not Deleted</string>
     <string name="set_location">Set Location</string>
+    <string name="select_start_date">Select start date</string>
+    <string name="select_end_date">Select end date</string>
+    <string name="add_date">add date</string>
+    <string name="data_saved">Date Saved</string>
+    <string name="item_selected">\" item selected\"</string>
+    <string name="items_selected">\" items selected\"</string>
+    <string name="pick_start">Pick starting location</string>
+    <string name="below_are">Below are the places nearest to your current location</string>
+    <string name="pick_next">Pick the next location</string>
+    <string name="place_near_to">\"Below are the places nearest to \"</string>
+    <string name="next_txt">next</string>
+    <string name="pick_aPlace">Please pick a place</string>
+    <string name="not_found">Not Found</string>
+    <string name="forty5_minute">45 Minutes - 2 Hour</string>
+    <string name="based_on">Subjective and can vary based on personal preferences</string>
+    <string name="one_two_hour">1 Hour - 2 Hour</string>
+    <string name="depend_onNeeds">Vary depend on needs</string>
+    <string name="thirty_oneHour">30 Minutes - 1 Hour</string>
+    <string name="thirty2Hour">30 Minutes - 2 Hour</string>
+    <string name="pickTheTime">Pick the time</string>
+    <string name="rekomen_time">\"Recommended time: \"</string>
+    <string name="data_not_found">Opening hours data not found</string>
+    <string name="allowAnyTime">Allowing any time to be selected</string>
+    <string name="outside_business">Selected time is outside business hours</string>
+    <string name="justnotAvail">Opening hours not available</string>
+    <string name="invalidTimeSlot">\"Invalid time slot: \"</string>
+    <string name="invalid_opening_format">Invalid opening hours format</string>
+    <string name="itinerary_updated">itinerary updated</string>
+    <string name="iterUploadSuccess">Itinerary uploaded successfully</string>
+    <string name="failIterUpload">\"Itinerary upload failed due to \"</string>
+    <string name="iterUpdateSuccess">Itinerary updated successfully</string>
+    <string name="iterFailUpdate">\"Failed to update itinerary: \"</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_add_itinerary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:orientation=\"vertical\"\n    android:layout_margin=\"10dp\">\n    <ScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:orientation=\"vertical\"\n            android:layout_height=\"wrap_content\"\n            android:gravity=\"center\">\n\n            <RelativeLayout\n                android:id=\"@+id/select_layout\"\n                android:layout_width=\"match_parent\"\n                android:background=\"@color/palette_4\"\n                android:layout_height=\"wrap_content\"\n                android:visibility=\"visible\"\n                android:orientation=\"horizontal\">\n\n                <ImageButton\n                    android:id=\"@+id/select_cancel\"\n                    android:layout_width=\"48dp\"\n                    android:layout_height=\"48dp\"\n                    android:background=\"#0000\"\n                    android:src=\"@drawable/close_icon\"\n                    android:layout_alignParentStart=\"true\" />\n\n                <TextView\n                    android:id=\"@+id/select_tv\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"n Item Selected\"\n                    android:textColor=\"@color/palette_1\"\n                    android:textStyle=\"bold\"\n                    android:textSize=\"18dp\"\n                    android:fontFamily=\"@font/poppins_semibold\"\n                    android:layout_centerInParent=\"true\" />\n            </RelativeLayout>\n\n            <EditText\n                android:includeFontPadding=\"false\"\n                android:layout_marginTop=\"10dp\"\n                android:id=\"@+id/search_iter\"\n                android:drawableStart=\"@drawable/search_icon\"\n                android:drawablePadding=\"5dp\"\n                android:padding=\"5dp\"\n                android:layout_weight=\"2\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:textColor=\"@color/palette_1\"\n                android:textColorHint=\"@color/palette_3\"\n                android:background=\"@drawable/et_style\"\n                android:layout_marginHorizontal=\"10dp\"\n                android:layout_width=\"match_parent\"\n                android:textSize=\"17dp\"\n                android:layout_height=\"wrap_content\"\n                android:hint=\"@string/search_hint\"/>\n            <androidx.recyclerview.widget.RecyclerView\n                android:id=\"@+id/recycler_view\"\n                android:layout_marginTop=\"10dp\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                tools:listitem=\"@layout/list_iter\"\n                app:layoutManager=\"androidx.recyclerview.widget.GridLayoutManager\"\n                app:spanCount=\"3\"/>\n        </LinearLayout>\n    </ScrollView>\n    <Button\n        android:id=\"@+id/add_iter_btn\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginHorizontal=\"10dp\"\n        android:visibility=\"invisible\"\n        android:layout_alignParentBottom=\"true\"\n        android:text=\"add to itinerary\"/>\n</RelativeLayout>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_add_itinerary.xml b/app/src/main/res/layout/fragment_add_itinerary.xml
--- a/app/src/main/res/layout/fragment_add_itinerary.xml	(revision 59a6754f4525e648ede21e950cfc14a932a84cba)
+++ b/app/src/main/res/layout/fragment_add_itinerary.xml	(date 1684919184173)
@@ -77,5 +77,5 @@
         android:layout_marginHorizontal="10dp"
         android:visibility="invisible"
         android:layout_alignParentBottom="true"
-        android:text="add to itinerary"/>
+        android:text="@string/add_to_itinerary_btn"/>
 </RelativeLayout>

Index: app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.app.AlertDialog;\nimport android.app.DatePickerDialog;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\n\nimport androidx.annotation.NonNull;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentPagerAdapter;\nimport androidx.viewpager.widget.ViewPager;\n\nimport com.binus.pekalongancityguide.Adapter.IterAdapter;\nimport com.binus.pekalongancityguide.Adapter.ItineraryAdapter;\nimport com.binus.pekalongancityguide.ItemTemplate.Categories;\nimport com.binus.pekalongancityguide.R;\nimport com.binus.pekalongancityguide.databinding.DialogChooseDateBinding;\nimport com.binus.pekalongancityguide.databinding.FragmentItineraryPagerBinding;\nimport com.google.android.material.tabs.TabLayout;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.Locale;\n\npublic class ItineraryPager extends Fragment {\n    public ArrayList<Categories> categoriesArrayList;\n    public ViewPagerAdapter viewPagerAdapter;\n    private TabLayout tabLayout;\n    private ViewPager viewPager;\n    private FragmentItineraryPagerBinding binding;\n    private int startDay, startMonth, startYear, endDay, endMonth, endYear;\n    private EditText startEt, endEt;\n    private Calendar calendar;\n    private ImageButton startBtn, endBtn;\n    private Button addDate;\n    private String startDate, endDate;\n\n    public ItineraryPager() {\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        binding = FragmentItineraryPagerBinding.inflate(LayoutInflater.from(getContext()), container, false);\n        init();\n        showPickDateDialog();\n        return binding.getRoot();\n    }\n\n    private void showPickDateDialog() {\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n        DialogChooseDateBinding chooseDateBinding = DialogChooseDateBinding.inflate(getLayoutInflater());\n        builder.setView(chooseDateBinding.getRoot());\n        startEt = chooseDateBinding.startDateEt;\n        endEt = chooseDateBinding.endDateEt;\n        startBtn = chooseDateBinding.startPickerBtn;\n        endBtn = chooseDateBinding.endPickerBtn;\n        addDate = chooseDateBinding.addDateBtn;\n\n        calendar = Calendar.getInstance();\n\n        startBtn.setOnClickListener(v -> showStartCalendar());\n\n        startEt.setOnClickListener(v -> showStartCalendar());\n\n        endBtn.setOnClickListener(v -> showEndCalendar());\n\n        endEt.setOnClickListener(v -> showEndCalendar());\n        AlertDialog dialog = builder.create();\n        dialog.getWindow().setBackgroundDrawableResource(R.drawable.dialog_background);\n        dialog.show();\n        addDate.setOnClickListener(v -> {\n            dialog.dismiss();\n            setupViewPagerAdapter(viewPager);\n            tabLayout.setupWithViewPager(viewPager);\n        });\n    }\n\n    private void showStartCalendar() {\n        startYear = calendar.get(Calendar.YEAR);\n        startMonth = calendar.get(Calendar.MONTH);\n        startDay = calendar.get(Calendar.DAY_OF_MONTH);\n\n        DatePickerDialog dialog = new DatePickerDialog(getContext(), (dateView, year, month, dayOfMonth) -> {\n            startYear = year;\n            startMonth = month;\n            startDay = dayOfMonth;\n            SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n            startDate = format.format(new Date(startYear - 1900, startMonth, startDay));\n            startEt.setText(startDate);\n        }, startYear, startMonth, startDay);\n\n        dialog.getDatePicker().setMinDate(calendar.getTimeInMillis());\n\n        if (endDate != null) {\n            SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n            try {\n                Date endDateObj = format.parse(endDate);\n                dialog.getDatePicker().setMaxDate(endDateObj.getTime());\n            } catch (ParseException e) {\n                e.printStackTrace();\n            }\n        }\n\n        dialog.getWindow().setBackgroundDrawableResource(R.color.palette_4);\n        dialog.show();\n    }\n\n    private void showEndCalendar() {\n        endYear = calendar.get(Calendar.YEAR);\n        endMonth = calendar.get(Calendar.MONTH);\n        endDay = calendar.get(Calendar.DAY_OF_MONTH);\n\n        DatePickerDialog dialog = new DatePickerDialog(getContext(), (dateView, year, month, dayOfMonth) -> {\n            endYear = year;\n            endMonth = month;\n            endDay = dayOfMonth;\n            SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n            endDate = format.format(new Date(endYear - 1900, endMonth, endDay));\n            endEt.setText(endDate);\n        }, endYear, endMonth, endDay);\n\n        Calendar minDateCalendar = Calendar.getInstance();\n        if (startDate != null) {\n            SimpleDateFormat format = new SimpleDateFormat(\"EEEE, dd MMMM yyyy\", Locale.getDefault());\n            try {\n                Date startDateObj = format.parse(startDate);\n                minDateCalendar.setTime(startDateObj);\n            } catch (ParseException e) {\n                e.printStackTrace();\n            }\n        } else {\n            minDateCalendar.setTime(calendar.getTime());\n        }\n        if (minDateCalendar.after(calendar)) {\n            dialog.getDatePicker().setMinDate(minDateCalendar.getTimeInMillis());\n        } else {\n            dialog.getDatePicker().setMinDate(calendar.getTimeInMillis());\n        }\n\n        dialog.getWindow().setBackgroundDrawableResource(R.color.palette_4);\n        dialog.show();\n    }\n\n    private void init() {\n        tabLayout = binding.iterTabLayout;\n        viewPager = binding.iterViewPager;\n    }\n    private void setupViewPagerAdapter(ViewPager viewPager) {\n        viewPagerAdapter = new ViewPagerAdapter(getChildFragmentManager(), getContext());\n        categoriesArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Categories\");\n        reference.keepSynced(true);\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                categoriesArrayList.clear();\n                Categories allCategories = new Categories(\"01\",\"All\",\"\",1);\n                categoriesArrayList.add(allCategories);\n                viewPagerAdapter.addFragment(AddItinerary.newInstance(\n                        \"\" + allCategories.getId(),\n                        \"\" + allCategories.getCategory(),\n                        \"\" + allCategories.getUid(),\n                        startDate,\n                        endDate\n                ),allCategories.getCategory());\n                for(DataSnapshot dataSnapshot: snapshot.getChildren()){\n                    Categories categories = dataSnapshot.getValue(Categories.class);\n                    categoriesArrayList.add(categories);\n                    viewPagerAdapter.addFragment(AddItinerary.newInstance(\n                            \"\" + categories.getId(),\n                            \"\" + categories.getCategory(),\n                            \"\" + categories.getUid(),\n                            startDate,\n                            endDate), categories.getCategory());\n                }\n                viewPagerAdapter.notifyDataSetChanged();\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n\n            }\n        });\n        viewPager.setAdapter(viewPagerAdapter);\n        viewPager.setOffscreenPageLimit(10);\n    }\n\n    public class ViewPagerAdapter extends FragmentPagerAdapter {\n        private final ArrayList<AddItinerary> fragmentList = new ArrayList<>();\n        private final ArrayList<String> fragmentTitleList = new ArrayList<>();\n        private final Context context;\n\n        public ViewPagerAdapter(@NonNull FragmentManager fm, Context context) {\n            super(fm, BEHAVIOR_SET_USER_VISIBLE_HINT);\n            this.context = context;\n        }\n\n        @NonNull\n        @Override\n        public Fragment getItem(int position) {\n            return fragmentList.get(position);\n        }\n\n        @Override\n        public int getCount() {\n            return fragmentList.size();\n        }\n\n        private void addFragment(AddItinerary fragment, String title) {\n            fragmentList.add(fragment);\n            fragmentTitleList.add(title);\n        }\n\n        public CharSequence getPageTitle(int position) {\n            return fragmentTitleList.get(position);\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java	(revision 9b205fb4ed20a3a36921e7f449a73cd7efc1427e)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryPager.java	(date 1684394039210)
@@ -5,6 +5,7 @@
 import android.app.Dialog;
 import android.content.Context;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -50,6 +51,7 @@
     private ImageButton startBtn, endBtn;
     private Button addDate;
     private String startDate, endDate;
+    private String TAG ="ITINERARY_PAGER_TAG";
 
     public ItineraryPager() {
     }
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.app.AlertDialog;\nimport android.graphics.Bitmap;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.text.Editable;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.LinearLayout;\nimport android.widget.RelativeLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.cardview.widget.CardView;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.binus.pekalongancityguide.Adapter.IterAdapter;\nimport com.binus.pekalongancityguide.ItemTemplate.Destination;\nimport com.binus.pekalongancityguide.R;\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.target.SimpleTarget;\nimport com.bumptech.glide.request.transition.Transition;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\n\nimport static android.content.ContentValues.TAG;\n\npublic class AddItinerary extends Fragment implements IterAdapter.OnItemLongClickListener {\n    private String categoryId, category, startDate, endDate, uid;\n    public IterAdapter iterAdapter;\n    private RecyclerView iterRV;\n    private Button addIter;\n    private RelativeLayout selectLayout;\n    private TextView selectTv, dialogTitle, distanceTv, durationTv;\n    private ImageButton selectCancel;\n    public ArrayList<Destination> destinationArrayList, selectedItems;\n    private View view;\n    private ItineraryPager itineraryPager;\n\n\n    public AddItinerary() {\n    }\n\n    public static AddItinerary newInstance(String categoryId, String categoryName, String categoryUid, String startDate, String endDate) {\n        AddItinerary fragment = new AddItinerary();\n        Bundle args = new Bundle();\n        args.putString(\"categoryId\", categoryId);\n        args.putString(\"category\", categoryName);\n        args.putString(\"uid\", categoryUid);\n        args.putString(\"startDate\", startDate);\n        args.putString(\"endDate\", endDate);\n        Log.d(TAG, \"newInstance: categoryId=\" + categoryId + \", categoryName=\" + categoryName + \", categoryUid=\" + categoryUid + \", startDate=\" + startDate + \", endDate=\" + endDate);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    public static AddItinerary getInstance() {\n        return new AddItinerary();\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            categoryId = getArguments().getString(\"categoryId\");\n            category = getArguments().getString(\"category\");\n            uid = getArguments().getString(\"uid\");\n            startDate = getArguments().getString(\"startDate\");\n            endDate = getArguments().getString(\"endDate\");\n            Log.d(TAG, \"onCreate: categoryId=\" + categoryId + \", category=\" + category + \", uid=\" + uid + \", startDate=\" + startDate + \", endDate=\" + endDate);\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        view = inflater.inflate(R.layout.fragment_add_itinerary, container, false);\n        init();\n        checkSelect();\n        EditText iterSearch = view.findViewById(R.id.search_iter);\n        iterSearch.addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n                try {\n                    iterAdapter.getFilter().filter(s);\n                }catch (Exception e){\n                    Log.d(TAG,\"onTextChanged :\"+e.getMessage());\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n        if (category.equals(\"All\")) {\n            loadDestinations();\n        } else {\n            loadCategoriedDestination();\n        }\n        addIter.setOnClickListener(v -> showInputDialog());\n        selectCancel.setOnClickListener(v -> iterAdapter.exitSelectMode());\n        return view;\n    }\n\n    private void showInputDialog() {\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n\n        // Set the custom layout for the dialog\n        View view = LayoutInflater.from(getContext()).inflate(R.layout.dialog_input_details, null);\n        builder.setView(view);\n        // Get a reference to the container layout where the EditText fields will be added\n        LinearLayout containerLayout = view.findViewById(R.id.container_layout);\n        Button addBtn = view.findViewById(R.id.add_iter_button);\n        dialogTitle = view.findViewById(R.id.dialog_title);\n\n        // Get the selected items from the adapter\n        ArrayList<Destination> selectedItems = iterAdapter.getSelectedItems();\n        // Iterate through the selected items and add EditText fields for each item\n        for (int i = 0; i < selectedItems.size(); i++) {\n            View itemView = LayoutInflater.from(getContext()).inflate(R.layout.item_input_details, null);\n            dialogTitle.setText(\"Pick your first destination\");\n            Destination selectedItem = selectedItems.get(i);\n            CardView cardView = itemView.findViewById(R.id.add_item_cardview);\n            LinearLayout layoutBG = itemView.findViewById(R.id.layout_bg);\n            TextView placeText = itemView.findViewById(R.id.placeNameTextView);\n            durationTv = itemView.findViewById(R.id.durationTextView);\n            distanceTv = itemView.findViewById(R.id.distanceTextView);\n            placeText.setText(selectedItem.getTitle());\n            distanceTv.setText(String.valueOf(selectedItem.getDistance()));\n\n            CardView.LayoutParams layoutParams = new CardView.LayoutParams(\n                    CardView.LayoutParams.MATCH_PARENT,\n                    CardView.LayoutParams.WRAP_CONTENT\n            );\n            layoutParams.setMargins(0, 10, 0, 10);\n            cardView.setLayoutParams(layoutParams);\n\n            containerLayout.addView(itemView);\n\n            // Load the image using Glide and set it as the background of layoutBG\n            loadImage(selectedItem, layoutBG);\n        }\n        AlertDialog dialog = builder.create();\n        addBtn.setOnClickListener(v -> {\n            // Iterate through the container layout and retrieve the input data for each item\n            for (int i = 0; i < containerLayout.getChildCount(); i++) {\n                View itemView = containerLayout.getChildAt(i);\n                // Handle the input data here, for example, save it or perform any necessary actions\n                // with the selected items and the entered details\n            }\n            dialog.dismiss();\n        });\n\n        dialog.show();\n    }\n\n    private void loadImage(Destination destination, LinearLayout layoutBG) {\n        String imageUrl = destination.getUrl();\n        Glide.with(layoutBG.getContext())\n                .asBitmap()\n                .load(imageUrl)\n                .placeholder(R.drawable.logo)\n                .into(new SimpleTarget<Bitmap>() {\n                    @Override\n                    public void onResourceReady(@NonNull Bitmap resource, @Nullable Transition<? super Bitmap> transition) {\n                        // Set the image bitmap as the background of layoutBG\n                        BitmapDrawable drawable = new BitmapDrawable(layoutBG.getResources(), resource);\n                        layoutBG.setBackground(drawable);\n                    }\n\n                    @Override\n                    public void onLoadFailed(@Nullable Drawable errorDrawable) {\n                        super.onLoadFailed(errorDrawable);\n                        Log.d(TAG, \"on Failure: failed to get file from URL\");\n                    }\n                });\n    }\n\n    private void init() {\n        iterRV = view.findViewById(R.id.recycler_view);\n        addIter = view.findViewById(R.id.add_iter_btn);\n        selectTv = view.findViewById(R.id.select_tv);\n        selectLayout = view.findViewById(R.id.select_layout);\n        selectCancel = view.findViewById(R.id.select_cancel);\n    }\n\n    private void loadDestinations() {\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                destinationArrayList.clear();\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                    Destination destination = dataSnapshot.getValue(Destination.class);\n                    destinationArrayList.add(destination);\n                    sortDestination(destinationArrayList);\n                }\n                if (iterAdapter == null) {\n                    initIterAdapter();\n                } else {\n                    iterAdapter.notifyDataSetChanged();\n                }\n            }\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n                Log.e(TAG, \"Error: \" + error.getMessage());\n            }\n        });\n    }\n\n    private void loadCategoriedDestination(){\n        destinationArrayList = new ArrayList<>();\n        DatabaseReference reference = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\").getReference(\"Destination\");\n        reference.keepSynced(true);\n        reference.orderByChild(\"categoryId\").equalTo(categoryId)\n                .addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        destinationArrayList.clear();\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\n                            Destination destination = dataSnapshot.getValue(Destination.class);\n                            destinationArrayList.add(destination);\n                            sortDestination(destinationArrayList);\n                        }\n                        if (iterAdapter == null) {\n                            initIterAdapter();\n                        } else {\n                            iterAdapter.notifyDataSetChanged();\n                        }\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n\n                    }\n                });\n    }\n\n    private void sortDestination(ArrayList<Destination> destinationArrayList) {\n        Collections.sort(destinationArrayList, (destination1, destination2) -> {\n            String title1 = destination1.getTitle().toLowerCase();\n            String title2 = destination2.getTitle().toLowerCase();\n            return title1.compareTo(title2);\n        });\n    }\n\n    public void checkSelect() {\n        if (iterAdapter != null) {\n            selectedItems = iterAdapter.getSelectedItems();\n            int counter;\n            if (selectedItems.size() < 1) {\n                selectLayout.setVisibility(View.GONE);\n                addIter.setVisibility(View.INVISIBLE);\n            } else if (selectedItems.size() == 1) {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" item selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            } else {\n                counter = selectedItems.size();\n                selectTv.setText(counter + \" items selected\");\n                addIter.setText(\"Add to itinerary\");\n                addIter.setVisibility(View.VISIBLE);\n                selectLayout.setVisibility(View.VISIBLE);\n            }\n        } else {\n            addIter.setVisibility(View.INVISIBLE);\n            selectLayout.setVisibility(View.GONE);\n        }\n    }\n\n    public void initIterAdapter() {\n        iterAdapter = new IterAdapter(getContext(), destinationArrayList, this, this, itineraryPager); // Pass the reference to the fragment\n        iterRV.setAdapter(iterAdapter);\n    }\n\n    @Override\n    public void onItemLongClick(Destination destination) {\n        checkSelect();\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(revision 9b205fb4ed20a3a36921e7f449a73cd7efc1427e)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/AddItinerary.java	(date 1684397573830)
@@ -4,6 +4,7 @@
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
+import android.location.Location;
 import android.os.Bundle;
 import android.text.Editable;
 import android.text.TextWatcher;
@@ -24,8 +25,13 @@
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.android.volley.toolbox.Volley;
 import com.binus.pekalongancityguide.Adapter.IterAdapter;
 import com.binus.pekalongancityguide.ItemTemplate.Destination;
+import com.binus.pekalongancityguide.ItemTemplate.Itinerary;
 import com.binus.pekalongancityguide.R;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.request.target.SimpleTarget;
@@ -41,6 +47,12 @@
 
 import static android.content.ContentValues.TAG;
 
+import static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
 public class AddItinerary extends Fragment implements IterAdapter.OnItemLongClickListener {
     private String categoryId, category, startDate, endDate, uid;
     public IterAdapter iterAdapter;
@@ -51,9 +63,9 @@
     private ImageButton selectCancel;
     public ArrayList<Destination> destinationArrayList, selectedItems;
     private View view;
+    private static final String apiKey = MAPS_API_KEY;
     private ItineraryPager itineraryPager;
-
-
+    double currentLatitude,currentLongitude;
     public AddItinerary() {
     }
 
@@ -91,6 +103,13 @@
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         view = inflater.inflate(R.layout.fragment_add_itinerary, container, false);
+        Bundle args = getArguments();
+        if (args != null) {
+            currentLatitude = args.getDouble("currentLatitude", 0);
+            currentLongitude = args.getDouble("currentLongitude", 0);
+            Log.d(TAG, "Current Latitude: " + currentLatitude);
+            Log.d(TAG, "Current Longitude: " + currentLongitude);
+        }
         init();
         checkSelect();
         EditText iterSearch = view.findViewById(R.id.search_iter);
@@ -126,15 +145,12 @@
 
     private void showInputDialog() {
         AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
-
-        // Set the custom layout for the dialog
         View view = LayoutInflater.from(getContext()).inflate(R.layout.dialog_input_details, null);
         builder.setView(view);
-        // Get a reference to the container layout where the EditText fields will be added
+
         LinearLayout containerLayout = view.findViewById(R.id.container_layout);
         Button addBtn = view.findViewById(R.id.add_iter_button);
         dialogTitle = view.findViewById(R.id.dialog_title);
-
         // Get the selected items from the adapter
         ArrayList<Destination> selectedItems = iterAdapter.getSelectedItems();
         // Iterate through the selected items and add EditText fields for each item
@@ -148,34 +164,74 @@
             durationTv = itemView.findViewById(R.id.durationTextView);
             distanceTv = itemView.findViewById(R.id.distanceTextView);
             placeText.setText(selectedItem.getTitle());
-            distanceTv.setText(String.valueOf(selectedItem.getDistance()));
-
+            float distance = calculateDistance(currentLatitude, currentLongitude, selectedItem.getDesLat(),selectedItem.getDesLong());
+            distanceTv.setText(String.valueOf(distance));
+            calculateDuration(currentLatitude, currentLongitude, selectedItem.getDesLat(),selectedItem.getDesLong(), durationText -> {
+                durationTv.setText(durationText);
+            });
             CardView.LayoutParams layoutParams = new CardView.LayoutParams(
                     CardView.LayoutParams.MATCH_PARENT,
                     CardView.LayoutParams.WRAP_CONTENT
             );
             layoutParams.setMargins(0, 10, 0, 10);
             cardView.setLayoutParams(layoutParams);
-
             containerLayout.addView(itemView);
-
-            // Load the image using Glide and set it as the background of layoutBG
             loadImage(selectedItem, layoutBG);
         }
         AlertDialog dialog = builder.create();
         addBtn.setOnClickListener(v -> {
-            // Iterate through the container layout and retrieve the input data for each item
             for (int i = 0; i < containerLayout.getChildCount(); i++) {
                 View itemView = containerLayout.getChildAt(i);
-                // Handle the input data here, for example, save it or perform any necessary actions
-                // with the selected items and the entered details
             }
             dialog.dismiss();
         });
 
         dialog.show();
     }
-
+    private float calculateDistance(double lat1, double lon1, double lat2, double lon2) {
+        float[] results = new float[1];
+        Location location1 = new Location("");
+        location1.setLatitude(lat1);
+        location1.setLongitude(lon1);
+        Location location2 = new Location("");
+        location2.setLatitude(lat2);
+        location2.setLongitude(lon2);
+        Location.distanceBetween(location1.getLatitude(), location1.getLongitude(),
+                location2.getLatitude(), location2.getLongitude(), results);
+        return results[0] / 1000;
+    }
+    private void calculateDuration(double lat1, double lon1, double lat2, double lon2, ItineraryFragment.DurationCallback callback) {
+        String url = "https://maps.googleapis.com/maps/api/directions/json?origin=" + lat1 + "," + lon1 + "&destination=" + lat2 + "," + lon2 + "&key=" + apiKey;
+        if (isAdded() && getContext() != null) {
+            RequestQueue queue = Volley.newRequestQueue(getContext().getApplicationContext());
+            JsonObjectRequest request = new JsonObjectRequest(Request.Method.GET, url, null, response -> {
+                try {
+                    JSONArray routes = response.getJSONArray("routes");
+                    if (routes.length() > 0) {
+                        JSONObject route = routes.getJSONObject(0);
+//                        Log.d(TAG, "route: " + route);
+                        JSONArray legs = route.getJSONArray("legs");
+//                        Log.d(TAG, "legs: " + legs);
+                        JSONObject leg = legs.getJSONObject(0);
+//                        Log.d(TAG, "leg: " + leg);
+                        JSONObject duration = leg.getJSONObject("duration");
+                        String durationText = duration.getString("text");
+                        Log.d(TAG, "Duration: " + durationText);
+                        callback.onDurationReceived(durationText);
+                    } else {
+                        Log.e(TAG, "No routes found");
+                        callback.onDurationReceived("No routes found");
+                    }
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+            }, error -> {
+                Log.e(TAG, "Error calculating travel duration: " + error.getMessage());
+                callback.onDurationReceived("Error calculating travel duration");
+            });
+            queue.add(request);
+        }
+    }
     private void loadImage(Destination destination, LinearLayout layoutBG) {
         String imageUrl = destination.getUrl();
         Glide.with(layoutBG.getContext())
@@ -185,7 +241,6 @@
                 .into(new SimpleTarget<Bitmap>() {
                     @Override
                     public void onResourceReady(@NonNull Bitmap resource, @Nullable Transition<? super Bitmap> transition) {
-                        // Set the image bitmap as the background of layoutBG
                         BitmapDrawable drawable = new BitmapDrawable(layoutBG.getResources(), resource);
                         layoutBG.setBackground(drawable);
                     }
Index: app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.binus.pekalongancityguide.Layout;\n\nimport android.Manifest;\nimport android.annotation.SuppressLint;\nimport android.app.AlertDialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.content.pm.PackageManager;\nimport android.location.Address;\nimport android.location.Geocoder;\nimport android.location.Location;\nimport android.location.LocationListener;\nimport android.location.LocationManager;\nimport android.net.Uri;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.provider.Settings;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.RelativeLayout;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\n\nimport com.android.volley.Request;\nimport com.android.volley.RequestQueue;\nimport com.android.volley.toolbox.JsonObjectRequest;\nimport com.android.volley.toolbox.Volley;\nimport com.binus.pekalongancityguide.Adapter.ItineraryAdapter;\nimport com.binus.pekalongancityguide.ItemTemplate.Itinerary;\nimport com.binus.pekalongancityguide.R;\nimport com.binus.pekalongancityguide.databinding.DialogChangeLocBinding;\nimport com.binus.pekalongancityguide.databinding.FragmentItineraryBinding;\nimport com.google.android.gms.location.FusedLocationProviderClient;\nimport com.google.android.gms.location.LocationServices;\nimport com.google.android.gms.maps.SupportMapFragment;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.libraries.places.api.Places;\nimport com.google.android.libraries.places.api.net.PlacesClient;\nimport com.google.android.libraries.places.widget.AutocompleteSupportFragment;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.Query;\nimport com.google.firebase.database.ValueEventListener;\n\nimport org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.IOException;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Locale;\n\nimport static android.view.View.GONE;\nimport static com.binus.pekalongancityguide.BuildConfig.MAPS_API_KEY;\n\npublic class ItineraryFragment extends Fragment {\n    private FragmentItineraryBinding binding;\n    private DialogChangeLocBinding locBinding;\n    private LocationManager locationManager;\n    private LocationListener locationListener;\n    private static final String TAG = \"ITER_TAG\";\n    private static final String apiKey = MAPS_API_KEY;\n    private static final int PERMISSION_REQUEST_LOCATION = 500;\n    private final List<Itinerary> itineraryList = new ArrayList<>();\n    ItineraryAdapter adapter;\n    PlacesClient placesClient;\n    private String selectedDate, addressString;\n    private FirebaseAuth firebaseAuth;\n    private Geocoder geocoder;\n    private LatLng coordinate;\n    private double currentLat, currentLng;\n    private AutocompleteSupportFragment autocompleteFragment;\n    private SupportMapFragment fragment;\n    private FusedLocationProviderClient fusedLocationClient;\n    private static SharedPreferences prefs;\n\n    public ItineraryFragment() {\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        geocoder = new Geocoder(getContext(), Locale.getDefault());\n        FirebaseDatabase.getInstance().setPersistenceEnabled(true);\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        binding = FragmentItineraryBinding.inflate(LayoutInflater.from(getContext()), container, false);\n        binding.showRoutes.setVisibility(GONE);\n        RelativeLayout.LayoutParams layoutGoneParams = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.\n                WRAP_CONTENT,RelativeLayout.LayoutParams.WRAP_CONTENT);\n        layoutGoneParams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);\n        layoutGoneParams.addRule(RelativeLayout.ALIGN_PARENT_END);\n        layoutGoneParams.setMargins(15,15,15,15);\n        binding.addIterBtn.setLayoutParams(layoutGoneParams);\n\n        prefs = getActivity().getSharedPreferences(\"coordinate\", Context.MODE_PRIVATE);\n        String lastLatitude = prefs.getString(\"lastLatitude\", \"0\");\n        String lastLongitude = prefs.getString(\"lastLongitude\", \"0\");\n        if (!lastLatitude.equals(\"0\") && !lastLongitude.equals(\"0\")) {\n            double latitude = Double.parseDouble(lastLatitude);\n            double longitude = Double.parseDouble(lastLongitude);\n            coordinate = new LatLng(latitude, longitude);\n            Log.d(TAG, \"ON START COORD: \" + coordinate);\n        }\n        Places.initialize(getContext().getApplicationContext(), apiKey);\n        placesClient = Places.createClient(getContext());\n        firebaseAuth = FirebaseAuth.getInstance();\n        adapter = new ItineraryAdapter(getContext(), itineraryList, getParentFragmentManager());\n        locationManager = (LocationManager) getContext().getSystemService(Context.LOCATION_SERVICE);\n        locationListener = new LocationListener() {\n            @Override\n            public void onLocationChanged(Location location) {\n                Log.d(\"Location\", \"Latitude: \" + location.getLatitude() + \", Longitude: \" + location.getLongitude());\n            }\n\n            @Override\n            public void onStatusChanged(String provider, int status, Bundle extras) {\n            }\n\n            @Override\n            public void onProviderEnabled(String provider) {\n            }\n\n            @Override\n            public void onProviderDisabled(String provider) {\n            }\n        };\n\n        if (ContextCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n        } else {\n            startLocationUpdates();\n        }\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(getContext());\n        initializeAddress();\n\n        Bundle args = getArguments();\n        if (args != null) {\n            selectedDate = args.getString(\"selectedDate\", selectedDate);\n            Log.d(TAG, \"selected date: \" + selectedDate);\n        }\n        loadItinerary(selectedDate);\n        adapter.setOnDataChangedListener(() -> {\n            // Notify the parent fragment that the data has changed\n            if (getParentFragment() instanceof ItineraryList) {\n                ((ItineraryList) getParentFragment()).onDataChanged();\n            }\n        });\n        binding.itineraryRv.setAdapter(adapter);\n        binding.addIterBtn.setOnClickListener(v -> {\n            ItineraryPager itineraryPager = new ItineraryPager();\n            FragmentManager fragmentManager = getActivity().getSupportFragmentManager();\n            FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\n            fragmentTransaction.replace(R.id.container, itineraryPager);\n            fragmentTransaction.addToBackStack(null);\n            fragmentTransaction.commit();\n        });\n        return binding.getRoot();\n    }\n\n    private void initializeAddress() {\n        if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\n                ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n        } else {\n            fusedLocationClient.getLastLocation().addOnSuccessListener(location -> {\n                if (location != null) {\n                    currentLat = location.getLatitude();\n                    currentLng = location.getLongitude();\n                    new AsyncTask<Void, Void, String>() {\n                        @Override\n                        protected String doInBackground(Void... voids) {\n                            try {\n                                List<Address> addresses = geocoder.getFromLocation(currentLat, currentLng, 1);\n                                if (addresses.size() > 0) {\n                                    return addresses.get(0).getAddressLine(0);\n                                }\n                            } catch (IOException e) {\n                                e.printStackTrace();\n                                return \"Error: Geocoder service not available\";\n                            }\n                            return null;\n                        }\n\n                        @Override\n                        protected void onPostExecute(String address) {\n                            if (address != null) {\n                                binding.changeLoc.setText(address);\n                            }\n                        }\n                    }.execute();\n                }\n            });\n        }\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        locationManager.removeUpdates(locationListener);\n    }\n\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        if (requestCode == PERMISSION_REQUEST_LOCATION) {\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                startLocationUpdates();\n            } else {\n                Toast.makeText(getContext(), \"Location permission denied\", Toast.LENGTH_SHORT).show();\n            }\n        }\n    }\n\n    private void loadItinerary(String date) {\n        FirebaseDatabase database = FirebaseDatabase.getInstance(\"https://pekalongan-city-guide-5bf2e-default-rtdb.asia-southeast1.firebasedatabase.app/\");\n        DatabaseReference userRef = database.getReference(\"Users\").child(firebaseAuth.getUid());\n        userRef.keepSynced(true);\n        Query itineraryQuery = userRef.child(\"itinerary\").orderByChild(\"date\").equalTo(date);\n        Log.d(TAG, \"itineraryQuery: \" + itineraryQuery);\n        itineraryQuery.addValueEventListener(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                List<Itinerary> itineraryList = new ArrayList<>();\n                for (DataSnapshot itinerarySnapshot : dataSnapshot.getChildren()) {\n                    String date = itinerarySnapshot.child(\"date\").getValue(String.class);\n                    Log.d(TAG, \"Date: \" + date);\n                    String startTime = itinerarySnapshot.child(\"startTime\").getValue(String.class);\n                    Log.d(TAG, \"Start Time: \" + startTime);\n                    String endTime = itinerarySnapshot.child(\"endTime\").getValue(String.class);\n                    Log.d(TAG, \"End Time: \" + endTime);\n                    String destiId = itinerarySnapshot.child(\"destiId\").getValue(String.class);\n                    Log.d(TAG, \"Desti ID: \" + destiId);\n                    String iterId = itinerarySnapshot.child(\"iterId\").getValue(String.class);\n                    Log.d(TAG, \"iter ID: \" + iterId);\n                    database.getReference(\"Destination\").child(destiId).addListenerForSingleValueEvent(new ValueEventListener() {\n                        @Override\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\n                            double placeLat = Double.parseDouble(snapshot.child(\"latitude\").getValue().toString());\n                            Log.d(TAG, \"Latitude: \" + placeLat);\n                            double placeLng = Double.parseDouble(snapshot.child(\"longitude\").getValue().toString());\n                            Log.d(TAG, \"Longitude: \" + placeLng);\n                            String placeName = snapshot.child(\"title\").getValue(String.class);\n                            Log.d(TAG, \"Place Name: \" + placeName);\n                            String url = \"\" + snapshot.child(\"url\").getValue();\n                            getLastKnownLocation(location -> {\n                                currentLat = location.getLatitude();\n                                currentLng = location.getLongitude();\n                                float distance = calculateDistance(currentLat, currentLng, placeLat, placeLng);\n                                Log.d(TAG, \"Distance: \" + distance);\n                                calculateDuration(currentLat, currentLng, placeLat, placeLng, durationText -> {\n                                    itineraryList.add(new Itinerary(date, startTime, endTime, placeName, destiId, url, durationText, iterId, placeLat, placeLng, distance));\n                                    sortItineraryList(itineraryList);\n                                    updateUI(itineraryList);\n                                });\n                            });\n                        }\n\n                        @Override\n                        public void onCancelled(@NonNull DatabaseError error) {\n                            Log.e(TAG, \"Error fetching destination data: \" + error.getMessage());\n                        }\n                    });\n                }\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n                Log.e(TAG, \"Error fetching itinerary data: \" + databaseError.getMessage());\n            }\n        });\n    }\n\n    private void updateUI(List<Itinerary> itineraryList) {\n        if (itineraryList.size() < 2) {\n            binding.showRoutes.setVisibility(View.GONE);\n            RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);\n            layoutParams.setMargins(15, 15, 15, 15);\n            layoutParams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);\n            layoutParams.addRule(RelativeLayout.ALIGN_PARENT_END);\n            binding.addIterBtn.setLayoutParams(layoutParams);\n        } else {\n            binding.showRoutes.setVisibility(View.VISIBLE);\n            RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);\n            layoutParams.addRule(RelativeLayout.ABOVE, binding.showRoutes.getId());\n            layoutParams.addRule(RelativeLayout.ALIGN_PARENT_END);\n            layoutParams.setMarginEnd(15);\n            binding.addIterBtn.setLayoutParams(layoutParams);\n            binding.showRoutes.setOnClickListener(v -> {\n                if (itineraryList.size() > 0) {\n                    String origin = \"current location\";\n                    Itinerary firstItinerary = itineraryList.get(0);\n                    double latitude = firstItinerary.getLatitude();\n                    double longitude = firstItinerary.getLongitude();\n                    StringBuilder waypoints = new StringBuilder();\n                    for (int i = 1; i < itineraryList.size(); i++) {\n                        Itinerary itinerary = itineraryList.get(i);\n                        waypoints.append(itinerary.getLatitude()).append(\",\").append(itinerary.getLongitude()).append(\"|\");\n                    }\n                    waypoints.setLength(waypoints.length() - 1); // Remove the last \"|\"\n                    String routeUrl = \"https://www.google.com/maps/dir/?api=1&origin=\" + origin + \"&destination=\" + latitude + \",\" + longitude + \"&waypoints=\" + waypoints + \"&travelmode=driving\";\n                    Intent mapIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(routeUrl));\n                    mapIntent.setPackage(\"com.google.android.apps.maps\");\n                    if (mapIntent.resolveActivity(getActivity().getPackageManager()) != null) {\n                        startActivity(mapIntent);\n                    } else {\n                        Toast.makeText(getContext(), R.string.no_map_app, Toast.LENGTH_SHORT).show();\n                        String websiteUrl = \"https://www.google.com/maps/dir/?api=1&origin=\" + origin + \"&destination=\" + latitude + \",\" + longitude + \"&waypoints=\" + waypoints + \"&travelmode=driving\";\n                        Intent websiteIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(websiteUrl));\n                        startActivity(websiteIntent);\n                    }\n                } else {\n                    Toast.makeText(getContext(), R.string.no_desttination_iter, Toast.LENGTH_SHORT).show();\n                }\n            });\n        }\n        ItineraryAdapter adapter = new ItineraryAdapter(getContext(), itineraryList, getParentFragmentManager());\n        binding.itineraryRv.setAdapter(adapter);\n        adapter.notifyDataSetChanged();\n    }\n\n    private void getLastKnownLocation(OnLocationReceivedListener listener) {\n        if (getContext() != null && ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&\n                ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PERMISSION_REQUEST_LOCATION);\n        } else {\n            fusedLocationClient.getLastLocation().addOnSuccessListener(location -> {\n                if (location != null) {\n                    listener.onLocationReceived(location);\n                } else {\n                    Log.e(TAG, \"Last known location is null\");\n                }\n            }).addOnFailureListener(e -> {\n                Log.e(TAG, \"Error getting last known location: \" + e.getMessage());\n            });\n        }\n    }\n\n    private interface OnLocationReceivedListener {\n        void onLocationReceived(Location location);\n    }\n\n    private void sortItineraryList(List<Itinerary> itineraryList) {\n        Collections.sort(itineraryList, (itinerary1, itinerary2) -> {\n            SimpleDateFormat sdf = new SimpleDateFormat(\"EEEE, dd MMMM yyyy hh:mm a\", Locale.getDefault());\n            try {\n                Date date1 = sdf.parse(itinerary1.getDate() + \" \" + itinerary1.getStartTime());\n                Date date2 = sdf.parse(itinerary2.getDate() + \" \" + itinerary2.getStartTime());\n                int dateComparison = date1.compareTo(date2);\n                if (dateComparison != 0) {\n                    return dateComparison;\n                } else {\n                    return itinerary1.getStartTime().compareTo(itinerary2.getStartTime());\n                }\n            } catch (ParseException e) {\n                Log.e(TAG, \"Error parsing date: \" + e.getMessage());\n                return 0;\n            }\n        });\n    }\n\n    private float calculateDistance(double lat1, double lon1, double lat2, double lon2) {\n        float[] results = new float[1];\n        Location location1 = new Location(\"\");\n        location1.setLatitude(lat1);\n        location1.setLongitude(lon1);\n        Location location2 = new Location(\"\");\n        location2.setLatitude(lat2);\n        location2.setLongitude(lon2);\n        Location.distanceBetween(location1.getLatitude(), location1.getLongitude(),\n                location2.getLatitude(), location2.getLongitude(), results);\n        return results[0] / 1000;\n    }\n    private void calculateDuration(double lat1, double lon1, double lat2, double lon2, DurationCallback callback) {\n        String url = \"https://maps.googleapis.com/maps/api/directions/json?origin=\" + lat1 + \",\" + lon1 + \"&destination=\" + lat2 + \",\" + lon2 + \"&key=\" + apiKey;\n\n        if (isAdded() && getContext() != null) {\n            RequestQueue queue = Volley.newRequestQueue(getContext().getApplicationContext());\n            JsonObjectRequest request = new JsonObjectRequest(Request.Method.GET, url, null, response -> {\n                try {\n                    JSONArray routes = response.getJSONArray(\"routes\");\n                    if (routes.length() > 0) {\n                        JSONObject route = routes.getJSONObject(0);\n//                        Log.d(TAG, \"route: \" + route);\n                        JSONArray legs = route.getJSONArray(\"legs\");\n//                        Log.d(TAG, \"legs: \" + legs);\n                        JSONObject leg = legs.getJSONObject(0);\n//                        Log.d(TAG, \"leg: \" + leg);\n                        JSONObject duration = leg.getJSONObject(\"duration\");\n                        String durationText = duration.getString(\"text\");\n                        Log.d(TAG, \"Duration: \" + durationText);\n                        callback.onDurationReceived(durationText);\n                    } else {\n                        Log.e(TAG, \"No routes found\");\n                        callback.onDurationReceived(\"No routes found\");\n                    }\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }, error -> {\n                Log.e(TAG, \"Error calculating travel duration: \" + error.getMessage());\n                callback.onDurationReceived(\"Error calculating travel duration\");\n            });\n            queue.add(request);\n        }\n    }\n\n    @SuppressLint(\"MissingPermission\")\n    private void startLocationUpdates() {\n        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\n            AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\n            builder.setTitle(R.string.gpsnotEnabled);\n            builder.setMessage(R.string.enable_gps_confirm);\n            builder.setPositiveButton(R.string.yes_txt, (dialog, which) -> {\n                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\n                startActivity(intent);\n            });\n            builder.setNegativeButton(R.string.no_txt, null);\n            builder.show();\n        } else {\n            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 0, locationListener);\n        }\n    }\n    public interface DurationCallback {\n        void onDurationReceived(String durationText);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryFragment.java b/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryFragment.java
--- a/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryFragment.java	(revision 9b205fb4ed20a3a36921e7f449a73cd7efc1427e)
+++ b/app/src/main/java/com/binus/pekalongancityguide/Layout/ItineraryFragment.java	(date 1684396299233)
@@ -169,6 +169,13 @@
         binding.itineraryRv.setAdapter(adapter);
         binding.addIterBtn.setOnClickListener(v -> {
             ItineraryPager itineraryPager = new ItineraryPager();
+            AddItinerary addItinerary = new AddItinerary();
+            Bundle bundle = new Bundle();
+            bundle.putDouble("currentLatitude", currentLat);
+            Log.d("passed location", String.valueOf(currentLat));
+            bundle.putDouble("currentLongitude", currentLng);
+            Log.d("passed location", String.valueOf(currentLng));
+            addItinerary.setArguments(bundle);
             FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
             FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
             fragmentTransaction.replace(R.id.container, itineraryPager);
Index: app/src/main/res/layout/list_itinerary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/itinerary_item_cardview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"16dp\"\n    android:layout_marginVertical=\"8dp\"\n    app:cardBackgroundColor=\"@color/ic_launcher_background\"\n    app:cardCornerRadius=\"8dp\"\n    app:cardElevation=\"4dp\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"150dp\"\n        android:orientation=\"horizontal\"\n        android:layout_gravity=\"center_horizontal\">\n\n        <LinearLayout\n            android:id=\"@+id/itinerary_bg\"\n            android:layout_width=\"130dp\"\n            android:layout_height=\"match_parent\"\n            android:gravity=\"center\"\n            android:background=\"@color/palette_4\"\n            android:orientation=\"vertical\">\n\n            <TextView\n                android:id=\"@+id/startTimeTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"1\"\n                android:background=\"@color/alfa\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:padding=\"8dp\"\n                android:shadowColor=\"#000000\"\n                android:shadowDx=\"2\"\n                android:shadowDy=\"4\"\n                android:shadowRadius=\"2\"\n                android:text=\"start\"\n                android:textAlignment=\"center\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/white\"\n                android:textStyle=\"bold\" />\n            <com.binus.pekalongancityguide.Misc.DottedLineView\n                android:id=\"@+id/dot_line\"\n                android:layout_width=\"3dp\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"1\"/>\n            <TextView\n                android:id=\"@+id/endTimeTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"0dp\"\n                android:layout_weight=\"1\"\n                android:background=\"@color/alfa\"\n                android:fontFamily=\"@font/poppins_regular\"\n                android:padding=\"8dp\"\n                android:shadowColor=\"#000000\"\n                android:shadowDx=\"2\"\n                android:shadowDy=\"4\"\n                android:shadowRadius=\"4\"\n                android:text=\"end\"\n                android:textAlignment=\"center\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/white\"\n                android:textStyle=\"bold\" />\n        </LinearLayout>\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\"\n            android:padding=\"8dp\">\n\n            <TextView\n                android:id=\"@+id/placeNameTextView\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_alignParentStart=\"true\"\n                android:layout_marginStart=\"10dp\"\n                android:layout_marginEnd=\"10dp\"\n                android:layout_marginBottom=\"10dp\"\n                android:fontFamily=\"@font/poppins_semibold\"\n                android:maxLines=\"3\"\n                android:padding=\"8dp\"\n                android:text=\"Name\"\n                android:textAppearance=\"?attr/textAppearanceListItem\"\n                android:textColor=\"@color/palette_2\"\n                android:textSize=\"18sp\"\n                android:textStyle=\"bold\" />\n\n            <ImageButton\n                android:id=\"@+id/iter_option\"\n                android:layout_width=\"48dp\"\n                android:layout_height=\"48dp\"\n                android:layout_alignParentEnd=\"true\"\n                android:layout_marginStart=\"10dp\"\n                android:layout_marginBottom=\"10dp\"\n                android:background=\"#0000\"\n                android:src=\"@drawable/more_button\" />\n\n            <com.google.android.material.divider.MaterialDivider\n                app:dividerColor=\"@color/palette_4\"\n                android:layout_marginHorizontal=\"8dp\"\n                android:layout_marginTop=\"5dp\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_above=\"@id/disdur_layout\" />\n\n            <LinearLayout\n                android:id=\"@+id/disdur_layout\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:gravity=\"center\"\n                android:layout_alignParentBottom=\"true\"\n                android:padding=\"8dp\">\n\n                <TextView\n                    android:drawablePadding=\"5dp\"\n                    android:drawableTint=\"@color/palette_1\"\n                    android:drawableLeft=\"@drawable/distance\"\n                    android:id=\"@+id/distanceTextView\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:textSize=\"14dp\"\n                    android:fontFamily=\"@font/poppins_regular\"\n                    android:layout_marginStart=\"8dp\"\n                    android:textAppearance=\"?attr/textAppearanceListItem\"\n                    android:textColor=\"@color/palette_3\"\n                    android:text=\"distance\"\n                    android:layout_weight=\"1\" />\n\n                <TextView\n                    android:drawableLeft=\"@drawable/car_direction\"\n                    android:drawablePadding=\"5dp\"\n                    android:drawableTint=\"@color/palette_1\"\n                    android:id=\"@+id/durationTextView\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"duration\"\n                    android:fontFamily=\"@font/poppins_regular\"\n                    android:textSize=\"14dp\"\n                    android:layout_marginStart=\"8dp\"\n                    android:textAppearance=\"?attr/textAppearanceListItem\"\n                    android:textColor=\"@color/palette_3\"\n                    android:layout_weight=\"1\" />\n\n            </LinearLayout>\n        </RelativeLayout>\n    </LinearLayout>\n</androidx.cardview.widget.CardView>\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/list_itinerary.xml b/app/src/main/res/layout/list_itinerary.xml
--- a/app/src/main/res/layout/list_itinerary.xml	(revision 9b205fb4ed20a3a36921e7f449a73cd7efc1427e)
+++ b/app/src/main/res/layout/list_itinerary.xml	(date 1684388979984)
@@ -65,61 +65,56 @@
                 android:textStyle="bold" />
         </LinearLayout>
 
-        <RelativeLayout
+        <LinearLayout
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:orientation="vertical"
             android:padding="8dp">
-
-            <TextView
-                android:id="@+id/placeNameTextView"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_alignParentStart="true"
-                android:layout_marginStart="10dp"
-                android:layout_marginEnd="10dp"
-                android:layout_marginBottom="10dp"
-                android:fontFamily="@font/poppins_semibold"
-                android:maxLines="3"
-                android:padding="8dp"
-                android:text="Name"
-                android:textAppearance="?attr/textAppearanceListItem"
-                android:textColor="@color/palette_2"
-                android:textSize="18sp"
-                android:textStyle="bold" />
-
-            <ImageButton
-                android:id="@+id/iter_option"
-                android:layout_width="48dp"
-                android:layout_height="48dp"
-                android:layout_alignParentEnd="true"
-                android:layout_marginStart="10dp"
-                android:layout_marginBottom="10dp"
-                android:background="#0000"
-                android:src="@drawable/more_button" />
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal">
+                <TextView
+                    android:id="@+id/placeNameTextView"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:padding="8dp"
+                    android:textSize="16dp"
+                    android:maxLines="3"
+                    android:fontFamily="@font/poppins_semibold"
+                    android:text="Name"
+                    android:textAppearance="?attr/textAppearanceListItem"
+                    android:textColor="@color/palette_2"
+                    android:textStyle="bold"
+                    android:layout_weight="1" />
+                <ImageButton
+                    android:id="@+id/iter_option"
+                    android:layout_width="48dp"
+                    android:layout_height="48dp"
+                    android:background="#0000"
+                    android:src="@drawable/more_button" />
+            </LinearLayout>
 
             <com.google.android.material.divider.MaterialDivider
                 app:dividerColor="@color/palette_4"
-                android:layout_marginHorizontal="8dp"
+                android:layout_marginStart="8dp"
+                android:layout_marginEnd="8dp"
                 android:layout_marginTop="5dp"
                 android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_above="@id/disdur_layout" />
-
+                android:layout_height="wrap_content" />
             <LinearLayout
-                android:id="@+id/disdur_layout"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
+                android:orientation="horizontal"
                 android:gravity="center"
-                android:layout_alignParentBottom="true"
-                android:padding="8dp">
+                android:layout_weight="1">
 
                 <TextView
                     android:drawablePadding="5dp"
                     android:drawableTint="@color/palette_1"
                     android:drawableLeft="@drawable/distance"
                     android:id="@+id/distanceTextView"
-                    android:layout_width="wrap_content"
+                    android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:textSize="14dp"
                     android:fontFamily="@font/poppins_regular"
@@ -127,14 +122,14 @@
                     android:textAppearance="?attr/textAppearanceListItem"
                     android:textColor="@color/palette_3"
                     android:text="distance"
-                    android:layout_weight="1" />
+                    android:layout_weight="1"/>
 
                 <TextView
                     android:drawableLeft="@drawable/car_direction"
                     android:drawablePadding="5dp"
                     android:drawableTint="@color/palette_1"
                     android:id="@+id/durationTextView"
-                    android:layout_width="wrap_content"
+                    android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:text="duration"
                     android:fontFamily="@font/poppins_regular"
@@ -143,9 +138,8 @@
                     android:textAppearance="?attr/textAppearanceListItem"
                     android:textColor="@color/palette_3"
                     android:layout_weight="1" />
-
             </LinearLayout>
-        </RelativeLayout>
+        </LinearLayout>
     </LinearLayout>
 </androidx.cardview.widget.CardView>
 
